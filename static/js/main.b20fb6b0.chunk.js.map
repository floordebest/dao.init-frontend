{"version":3,"sources":["kadena-config.js","util.js","PactTxStatus.js","Guardians.js","Ambassadors.js","KadenaConfig.js","InitState.js","NavDrawer.js","ScrollableTabs.js","App.js","serviceWorker.js","index.js"],"names":["host","kadenaAPI","contractName","gasStationName","namespace","contractAddress","gasStationAddress","explorerURL","slice","meta","networkId","chainId","creationTime","Math","round","Date","getTime","gasPrice","gasLimit","ttl","sender","nonce","module","exports","keyFormatter","str","replace","RegExp","k","toUpperCase","dashStyleNames2Text","makeStyles","theme","root","display","flexWrap","margin","spacing","width","withoutLabel","marginTop","textField","split","map","a","join","isRootPactValue","val","renderPactValue","toLocaleString","JSON","stringify","toString","useToplevelTableStyles","table","minWidth","useNestedTableStyles","borderBottom","PactSingleJsonAsTable","props","json","isNested","classes","header","valFormatter","internals","Fragment","TableHead","TableRow","TableCell","TableBody","Object","entries","v","key","Array","isArray","Table","className","size","aria-label","TableContainer","component","Paper","PactJsonListAsTable","keyOrder","length","keys","obj","useStyles","PactTxStatus","tx","txRes","txStatus","useState","open","setOpen","modalOpen","setModalOpen","severity","useEffect","Collapse","in","Alert","action","IconButton","color","onClick","fontSize","AlertTitle","Grid","container","direction","justify","alignItems","item","Divider","orientation","flexItem","Button","href","hash","Modal","onClose","Container","maxWidth","Box","formControl","selectEmpty","sendGuardianCmd","setTx","setTxStatus","setTxRes","refresh","user","cmd","envData","toSign","pactCode","caps","Pact","lang","mkCap","console","log","wallet","sign","signed","sendSigned","txReqKeys","retries","res","Promise","r","setTimeout","fetch","poll","result","status","e","RenderGuardians","guardians","RegisterAmbassador","grd","setGrd","newAmb","setNewAmb","ambGrd","setAmbGrd","wasSubmitted","setWasSubmitted","autoComplete","onSubmit","evt","preventDefault","ks","parse","handleSubmit","TextField","id","select","required","fullWidth","variant","label","onChange","target","value","g","MenuItem","multiline","rows","placeholder","undefined","CardActions","type","disabled","LinearProgress","RenderAmbassadors","ambassadors","KadenaConfig","getContractState","local","mkMeta","all","data","RenderInitState","initState","drawer","breakpoints","up","flexShrink","appBar","zIndex","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","ListItemLink","icon","primary","to","subList","hasSubList","React","renderLink","useMemo","forwardRef","itemProps","ref","ListItem","button","ListItemIcon","ListItemText","timeout","unmountOnExit","List","disablePadding","entry","NavDrawer","window","entriesList","title","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","document","body","CssBaseline","AppBar","position","Toolbar","edge","Typography","noWrap","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","keepMounted","xsDown","children","TabPanel","index","other","role","hidden","aria-labelledby","p","backgroundColor","palette","background","ScrollableTabs","tabEntries","setValue","Tabs","event","newValue","indicatorColor","textColor","scrollButtons","idx","Tab","App","createMuiTheme","light","main","dark","contrastText","secondary","setInitState","setGuardians","setAmbassadors","getInitState","getAmbassadors","getGuardians","ThemeProvider","NoSsr","basename","process","path","Card","CardHeader","CardContent","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oJAkBA,IAkBIA,EAAI,kBAZG,2BAYH,yBAfQ,YAeR,kBAlBM,IAkBN,SAMJC,EAAY,CACdC,aAhBiB,OAiBjBC,eAdmB,0BAenBC,UAZc,OAadC,gBAAgB,GAAD,OAbD,OAaC,YAnBE,QAoBjBC,kBAAkB,GAAD,OAdH,OAcG,YAjBE,2BAkBnBC,YAAY,iCAAD,OA3BG,YA2B0CC,MAAM,GAAI,IAClEC,KAAM,CACJC,UA7BY,YA8BZC,QAjCU,IAkCVX,KAAMA,EACNY,aAde,kBAAMC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KAAQ,IAgB/DC,SAAU,MAEVC,SAAU,IAEVC,IAAK,MAGLC,OAAQ,cAERC,MAAO,kCAOXC,EAAOC,QAAU,CAAEtB,UAAWA,EAAWuB,aAHpB,SAACC,GAAD,OACnBA,EAAIC,QAAQ,IAAIC,OAAO,SAAS,MAAM,OAAOD,QAAQ,IAAIC,OAAO,SAAS,OAAM,SAAAC,GAAC,OAAIA,EAAEC,oB,sXC7B3EC,GAtBiBC,aAAW,SAACC,GAAD,MAAY,CACnDC,KAAM,CACJC,QAAS,OACTC,SAAU,OACV,uBAAwB,CACtBC,OAAQJ,EAAMK,QAAQ,GACtBC,MAAO,SAGXF,OAAQ,CACNA,OAAQJ,EAAMK,QAAQ,IAExBE,aAAc,CACZC,UAAWR,EAAMK,QAAQ,IAE3BI,UAAW,CACTH,MAAO,YAMwB,SAAAb,GAAG,OAAIA,EAAIiB,MAAM,KAAKC,KAAI,SAAAf,GAAC,OAAEA,EAAEF,QAAQ,IAAIC,OAAO,KAAK,OAAM,SAAAiB,GAAC,OAAEA,EAAEf,oBAAgBgB,KAAK,OAEpHC,EAAkB,SAACC,GACvB,OAAIA,GAAsB,kBAARA,IACZ,UAAWA,GAAO,QAASA,GAAO,YAAaA,GAAO,SAAUA,IAuB3DC,EAAkB,SAACD,GAC9B,OAAIA,GAAsB,kBAARA,EACZ,SAAUA,EACLA,EAAG,KACD,UAAWA,EACbA,EAAG,MACD,QAASA,EACW,kBAAfA,EAAG,IAAuBA,EAAG,IAAUA,EAAG,IAAQE,iBACvD,YAAaF,EACW,kBAAnBA,EAAG,QAA2BA,EAAG,QAAcA,EAAG,QAAYE,iBAErEC,KAAKC,UAAUJ,GAIA,mBAARA,EACTA,EAAIK,WACa,kBAARL,EACTA,EACiB,kBAARA,EACTA,EAAIE,iBAEJC,KAAKC,UAAUJ,IAIpBM,EAAyBtB,YAAW,CACxCuB,MAAO,CACLC,SAAU,OAIRC,EAAuBzB,YAAW,CACtCuB,MAAO,CACLC,SAAU,KAEZtB,KAAM,CACJ,QAAS,CACPwB,aAAc,YAKPC,EAAwB,SAAxBA,EAAyBC,GACpC,IAAMC,EAAOD,EAAMC,MAAQ,GACrBC,EAAWF,EAAME,WAAY,EAC7BC,EAAUD,EAAWL,EAAuBH,EAC5CU,EAASJ,EAAMI,QAAU,GACzBvC,EAAemC,EAAMnC,aAAemC,EAAMnC,aAAe,SAACI,GAAO,OAAQA,GACzEoC,EAAeL,EAAMK,aAAeL,EAAMK,aAAe,SAACvC,GAAD,OAAS,8BAAOuB,EAAgBvB,KACzFwC,EAAY,kBAChB,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACCL,EAAOpB,KAAI,SAACI,GACX,OAAO,kBAACsB,EAAA,EAAD,KAAYtB,QAKvB,kBAACuB,EAAA,EAAD,KACGC,OAAOC,QAAQZ,GAAMjB,KAAI,YAAY,IAAD,mBAATf,EAAS,KAAP6C,EAAO,KACnC,OACA,kBAACL,EAAA,EAAD,CAAUM,IAAK9C,IACa,IAAxB+C,MAAMC,QAAQhB,GACd,kBAACS,EAAA,EAAD,KAAY7C,EAAaI,IAEzB,kBAAC,IAAMsC,SAAP,MAEApB,EAAgB2B,GAChB,kBAACJ,EAAA,EAAD,KAAYL,EAAaS,IACV,kBAANA,EACT,kBAACf,EAAD,CACEE,KAAMa,EACNjD,aAAcA,EACdwC,aAAcA,EACdH,UAAU,IACG,oBAANY,EACT,kBAACJ,EAAA,EAAD,KAAYL,EAAaS,EAAErB,aAE3B,kBAACiB,EAAA,EAAD,KAAYL,EAAaS,WAQrC,OACEZ,EACE,kBAACgB,EAAA,EAAD,CAAOC,UAAWhB,EAAQR,MAAOyB,KAAK,QAAQC,aAAW,gBACtDf,KAGL,kBAACgB,EAAA,EAAD,CAAgBC,UAAWC,KACzB,kBAACN,EAAA,EAAD,CAAOC,UAAWhB,EAAQR,MAAOyB,KAAK,QAAQC,aAAW,gBACtDf,OAMImB,EAAsB,SAAtBA,EAAuBzB,GAClC,IAAMC,EAAOD,EAAMC,MAAQ,GACrBC,EAAWF,EAAME,WAAY,EAC7BC,EAAUD,EAAWL,EAAuBH,EAC5CU,EAASJ,EAAMI,QAAU,GAC3BsB,EAAW,GACX1B,EAAM0B,SACRA,EAAW1B,EAAM0B,SACRV,MAAMC,QAAQjB,EAAMC,OACxBA,EAAK0B,OAAS,IACjBD,EAAWd,OAAOgB,KAAK3B,EAAK,KAGhC,IAAMpC,EAAemC,EAAMnC,aAAemC,EAAMnC,aAAe,SAACI,GAAO,OAAQA,GACzEoC,EAAeL,EAAMK,aAAeL,EAAMK,aAAe,SAACvC,GAAD,OAAS,8BAAOuB,EAAgBvB,KAEzFwC,EAAY,kBAChB,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACCL,EAAOpB,KAAI,SAACI,GAAD,OACV,kBAACsB,EAAA,EAAD,KAAYtB,QAIhB,kBAACuB,EAAA,EAAD,KACGV,EAAKjB,KAAI,SAAA6C,GAAG,OACX,kBAACpB,EAAA,EAAD,CAAUM,IAAKc,EAAIH,EAAS,KACxBA,EAAS1C,KAAI,SAAAf,GACX,IAAM6C,EAAIe,EAAI5D,GACd,OACE,kBAACyC,EAAA,EAAD,KACGvB,EAAgB2B,GACbT,EAAaS,GACbE,MAAMC,QAAQH,GACd,kBAACW,EAAD,CACExB,KAAMa,EACNjD,aAAcA,EACdwC,aAAcA,EACdH,UAAU,IACC,kBAANY,EACP,kBAAC,EAAD,CACEb,KAAMa,EACNjD,aAAcA,EACdwC,aAAcA,EACdH,UAAU,IAEZG,EADa,oBAANS,EACMA,EAAErB,WAEFqB,cAWrC,OACEZ,EACE,kBAACgB,EAAA,EAAD,CAAOC,UAAWhB,EAAQR,MAAOyB,KAAK,QAAQC,aAAW,gBACtDf,KAGL,kBAACgB,EAAA,EAAD,CAAgBC,UAAWC,KACzB,kBAACN,EAAA,EAAD,CAAOC,UAAWhB,EAAQR,MAAOyB,KAAK,QAAQC,aAAW,gBACtDf,O,0FCzNHwB,GAAY1D,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJK,MAAO,OACP,YAAa,CACXE,UAAWR,EAAMK,QAAQ,SAKlBqD,GAAe,SAAC/B,GAE3B,IAAMgC,EAAKhC,EAAMgC,GACXC,EAAQjC,EAAMiC,MACdC,EAAWlC,EAAMkC,SAJc,EAKdC,oBAAS,GALK,mBAK9BC,EAL8B,KAKzBC,EALyB,OAMJF,oBAAS,GANL,mBAM9BG,EAN8B,KAMpBC,EANoB,KAO/BpC,EAAU2B,KACVU,EAAwB,YAAbN,EAAyB,OACV,YAAbA,EAAyB,UACZ,YAAbA,EAAyB,UACzB,QAKnB,OAJAO,qBAAU,kBACRJ,GAAQ,KACT,CAACH,IAGAA,EACE,yBAAKf,UAAWhB,EAAQ7B,MACtB,kBAACoE,EAAA,EAAD,CAAUC,GAAIP,GACZ,kBAACQ,EAAA,EAAD,CACEJ,SAAUA,EACVK,OACE,kBAACC,GAAA,EAAD,CACEzB,aAAW,QACX0B,MAAM,UACN3B,KAAK,QACL4B,QAAS,WAAOX,GAAQ,KACxB,kBAAC,IAAD,CAAWY,SAAS,cAM1B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,WAAW,UAEX,kBAACJ,EAAA,EAAD,CAAMK,MAAI,GACPrF,EAAoB+D,IAET,qBAAbA,GAAgD,YAAbA,EAEhC,kBAACiB,EAAA,EAAD,CAAMK,MAAI,GACR,kBAACC,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,IACxC,kBAACC,EAAA,EAAD,CAAQxC,KAAK,QAAQ4B,QAAS,kBAAIT,GAAa,KAA/C,SAIF,kBAAC,IAAMhC,SAAP,QAIS,YAAb2B,EACA,kBAAC,IAAM3B,SAAP,KACE,oDACA,uBAAGsD,KAAI,UAAKvH,YAAUM,YAAf,eAAiCoF,EAAG8B,OAA3C,iCAIa,YAAb5B,EACF,kBAAC,IAAM3B,SAAP,KACE,uBAAGsD,KAAI,UAAKvH,YAAUM,YAAf,eAAiCoF,EAAG8B,OAA3C,uCAIa,YAAb5B,EACF,kBAAC,IAAM3B,SAAP,KACE,uBAAGsD,KAAI,UAAKvH,YAAUM,YAAf,eAAiCoF,EAAG8B,OAA3C,sCAGA,6BACE,kBAACC,EAAA,EAAD,CACE3B,KAAME,EACN0B,QAAS,kBAAMzB,GAAa,KAE5B,kBAAC0B,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,EAAD,CAAuBjE,KAAMgC,QAKtB,YAAbC,EACF,kBAAC,IAAM3B,SAAP,KACE,uDACA,uBAAGsD,KAAI,UAAKvH,YAAUM,YAAf,eAAiCoF,EAAG8B,OAA3C,uCAIa,qBAAb5B,EACF,kBAAC,IAAM3B,SAAP,KACE,kBAAC4D,EAAA,EAAD,6EAGA,6BACE,kBAACJ,EAAA,EAAD,CACE3B,KAAME,EACN0B,QAAS,kBAAMzB,GAAa,KAE5B,kBAAC0B,EAAA,EAAD,CAAWC,SAAS,MAChB,kBAAC1C,EAAA,EAAD,KAAQS,EAAMxC,gBAMxB,kBAAC,IAAMc,SAAP,SAKR,kBAAC,IAAMA,SAAP,OCzGAuB,GAAY1D,aAAW,SAACC,GAAD,MAAY,CACvC+F,YAAa,CACX3F,OAAQ,WACRmB,SAAU,KAEZyE,YAAa,CACXxF,UAAW,iBAKTyF,GAAe,uCAAG,WACtBC,EACAC,EACAC,EACAC,EACAC,EAAMC,GALgB,qCAAA3F,EAAA,6DAKX4F,EALW,+BAKH,GALG,SASZC,EAAS,CACXC,SAAUH,EACVI,KAAMC,IAAKC,KAAKC,MAAM,cACH,qCADb,UAEgB7I,YAAUI,gBAF1B,aAGa,CAACiI,IACpBpH,SAAUjB,YAAUQ,KAAKS,SACzBP,QAASV,YAAUQ,KAAKE,QACxBQ,IAAKlB,YAAUQ,KAAKU,IACpBC,OAAQkH,EACRE,QAASA,GAEbO,QAAQC,IAAI,SAAUP,GArBJ,SAuBGG,IAAKK,OAAOC,KAAKT,GAvBpB,cAuBZU,EAvBY,OAwBlBJ,QAAQC,IAAI,SAAUG,GACtBjB,EAAMiB,GAzBY,UA2BMP,IAAKK,OAAOG,WAAWD,EAAQlJ,YAAUQ,KAAKT,MA3BpD,QA2BZqJ,EA3BY,OA4BlBN,QAAQC,IAAI,YAAaK,GAGzBlB,EAAY,WA/BM,UAoCZmB,EAAU,EACVC,EAAM,GArCM,aAsCTD,EAAU,GAtCD,kCAwCR,IAAIE,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAG,SAxCvB,yBAyCFb,IAAKe,MAAMC,KAAKP,EAAWpJ,YAAUQ,KAAKT,MAzCxC,QAyCduJ,EAzCc,OA0Cd,IACMA,EAAIJ,EAAO1B,MAAMoC,OAAOC,OAC1BR,GAAW,EAEXA,GAAoB,EAEtB,MAAMS,GACJT,GAAoB,EAjDV,wBAqDhBlB,EAASmB,GAC8B,YAAnCA,EAAIJ,EAAO1B,MAAMoC,OAAOC,QAC1Bf,QAAQC,IAAI,4BAEZb,EAAY,WACZE,KACqB,IAAZiB,GACTP,QAAQC,IAAI,4BACZb,EAAY,WACZE,MAEAU,QAAQC,IAAI,4BAEZb,EAAY,YAlEE,mDAsEhBY,QAAQC,IAAI,iBAAZ,MACAZ,EAAS,EAAD,IACRD,EAAY,WAxEI,0DA2ElBY,QAAQC,IAAI,oCAAZ,MAEAb,EAAY,oBA7EM,kEAAH,gEAiFR6B,GAAkB,SAACrG,GAC9B,OACE,kBAAC,EAAD,CACEI,OAAQ,CAAC,WAAW,gBAAgB,gBAAgB,gBAAgB,SACpEsB,SAAU,CAAC,IAAI,gBAAgB,gBAAgB,gBAAgB,SAC/DzB,KAAMD,EAAMsG,aAILC,GAAqB,SAACvG,GAAW,IAAD,EACrBmC,mBAAU,IADW,mBACpCqE,EADoC,KAC/BC,EAD+B,OAEftE,mBAAU,IAFK,mBAEpCuE,EAFoC,KAE5BC,EAF4B,OAGfxE,mBAAU,IAHK,mBAGpCyE,EAHoC,KAG5BC,EAH4B,OAIX1E,mBAAS,IAJE,mBAIpCD,EAJoC,KAI1BsC,EAJ0B,OAKvBrC,mBAAU,IALa,mBAKpCH,EALoC,KAKhCuC,EALgC,OAMjBpC,mBAAU,IANO,mBAMpCF,EANoC,KAM7BwC,EAN6B,OAOJtC,oBAAS,GAPL,mBAOpC2E,EAPoC,KAOvBC,EAPuB,KAQrC5G,EAAU2B,KAEhBW,qBAAU,kBAAIsE,GAAgB,KAAO,CAACP,EAAIE,EAAOE,IAkBjD,OACE,6BACE,0BACEI,aAAa,MACbC,SAAU,SAAAC,GAAG,OApBE,SAACA,GAClBA,EAAIC,iBACJ,IACE7C,GAAgBC,EAAMC,EAAYC,EAASzE,EAAM0E,QAC9C8B,EADY,WAERlK,YAAUI,gBAFF,iCAE0C8J,EAF1C,cAEmDE,EAFnD,yBAGZ,CAACU,GAAI7H,KAAK8H,MAAMT,KAEnB,MAAOR,GACPhB,QAAQC,IAAI,4CAA4Ce,EAAGA,EAAGI,EAAIE,EAAOE,GACzEnC,EAAS2B,GACT5B,EAAY,oBAEduC,GAAgB,GAOGO,CAAaJ,KAC5B,kBAACK,EAAA,EAAD,CACEC,GAAG,4BACHC,QAAM,EACNC,UAAQ,EACRC,WAAS,EACTxG,UAAWhB,EAAQiE,YACnBwD,QAAQ,WACRC,MAAM,kBACNC,SAAU,SAAA1B,GAAC,OAAIK,EAAOL,EAAE2B,OAAOC,SAE9BhI,EAAMsG,UAAUtH,KAAI,SAACiJ,GAAD,OACnB,kBAACC,EAAA,EAAD,CAAUnH,IAAKkH,EAAC,EAAOD,MAAOC,EAAC,GAC5BA,EAAC,OAIR,kBAACV,EAAA,EAAD,CACEG,UAAQ,EACRC,WAAS,EACTK,MAAOtB,EACPvF,UAAWhB,EAAQiE,YACnBwD,QAAQ,WACRC,MAAM,yBACNC,SAAU,SAAA1B,GAAC,OAAIO,EAAUP,EAAE2B,OAAOC,UAEpC,kBAACT,EAAA,EAAD,CACEG,UAAQ,EACRC,WAAS,EACTE,MAAM,2BACN1G,UAAWhB,EAAQiE,YACnB+D,WAAS,EACTC,KAAM,EACNR,QAAQ,WACRS,YAAa9I,KAAKC,UAAU,CAAC,KAAO,WAAW,KAAO,CAAC,0EAAqE8I,EAAU,GACtIN,MAAOpB,EACPkB,SAAU,SAAA1B,GAAC,OAAIS,EAAUT,EAAE2B,OAAOC,UAEtC,kBAACO,EAAA,EAAD,KACgB,YAAbrG,EACG,KACA,kBAAC0B,EAAA,EAAD,CAAQgE,QAAQ,WAAW7E,MAAM,UAAUyF,KAAK,SAASC,SAAU3B,GAAnE,YAMO,YAAb5E,EAAyB,kBAACwG,EAAA,EAAD,MAAqB,KAChD,kBAAC,GAAD,CAAc1G,GAAIA,EAAIC,MAAOA,EAAOC,SAAUA,MCrNvCyG,GAAoB,SAAC3I,GAChC,OACE,kBAAC,EAAD,CACEI,OAAQ,CAAC,aAAa,SAAS,kBAAkB,SACjDsB,SAAU,CAAC,IAAI,SAAS,kBAAkB,SAC1CzB,KAAMD,EAAM4I,eCNLC,GAAe,WAC1B,OACE,kBAAC,EAAD,CACE5I,KAAM3D,YACNuB,aAAcA,kBCFPiL,GAAgB,uCAAG,WAAOlE,GAAP,iBAAA3F,EAAA,sEAEVgG,IAAKe,MAAM+C,MAC3B,CACEhE,SAAS,IAAD,OAAMzI,YAAUI,gBAAhB,YAAmCkI,EAAnC,KAER9H,KAAMmI,IAAKC,KAAK8D,OACd1M,YAAUQ,KAAKW,OACfnB,YAAUQ,KAAKE,QACfV,YAAUQ,KAAKQ,SACfhB,YAAUQ,KAAKS,SACfjB,YAAUQ,KAAKG,eACfX,YAAUQ,KAAKU,MAGnBlB,YAAUQ,KAAKT,MAfW,cAEtBuJ,EAFsB,OAiBtBqD,EAAMrD,EAAIM,OAAOgD,KAEvB9D,QAAQC,IAAI,mBAAmB4D,GAnBH,kBAoBrBA,GApBqB,2CAAH,sDAuBhBE,GAAkB,SAACnJ,GAC9B,OACC,kBAAC,EAAD,CACCC,KAAMD,EAAMoJ,UACZhJ,OAAQ,CAAC,GAAG,UACZvC,aAAcM,K,uKCLZ2D,GAAY1D,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEX8K,OAAO,gBACJhL,EAAMiL,YAAYC,GAAG,MAAQ,CAC5B5K,MARc,IASd6K,WAAY,IAGhBC,OAAO,gBACJpL,EAAMiL,YAAYC,GAAG,MAAQ,CAC5BG,OAAQrL,EAAMqL,OAAOL,OAAS,IAGlCM,WAAW,cACTC,YAAavL,EAAMK,QAAQ,IAC1BL,EAAMiL,YAAYC,GAAG,MAAQ,CAC5BhL,QAAS,SAIbsL,QAASxL,EAAMyL,OAAOD,QACtBE,YAAa,CACXpL,MA1BgB,KA4BlBqL,QAAS,CACPC,SAAU,EACVC,QAAS7L,EAAMK,QAAQ,QAIrByL,GAAe,SAAfA,EAAgBnK,GAAW,IACvBoK,EAA+BpK,EAA/BoK,KAAMC,EAAyBrK,EAAzBqK,QAASC,EAAgBtK,EAAhBsK,GAAIC,EAAYvK,EAAZuK,QACrBC,EAAaD,GAAWvJ,MAAMC,QAAQsJ,GAFd,EAGNE,IAAMtI,UAAS,GAHT,mBAGvBC,EAHuB,KAGjBC,EAHiB,KAKxBqI,EAAaD,IAAME,SACvB,kBAAMF,IAAMG,YAAW,SAACC,EAAWC,GAAZ,OAAoB,kBAAC,IAAD,eAAYR,GAAIA,EAAIQ,IAAKA,GAASD,SAC7E,CAACP,IAGH,OACE,kBAAC,IAAM/J,SAAP,KACE,4BACE,kBAACwK,GAAA,EAAD,CAAUC,QAAM,EAACzJ,UAAWmJ,GACzBN,EAAO,kBAACa,GAAA,EAAD,KAAeb,GAAuB,KAC9C,kBAACc,GAAA,EAAD,CAAcb,QAASA,IACtBG,EACCpI,EAAO,kBAAC,KAAD,CAAYY,QAAS,kBAAIX,GAASD,MAClC,kBAAC,KAAD,CAAYY,QAAS,kBAAIX,GAASD,MACrC,OAGPoI,EACC,kBAAC9H,EAAA,EAAD,CAAUC,GAAIP,EAAM+I,QAAQ,OAAOC,eAAa,GAC9C,kBAACC,GAAA,EAAD,CAAM9J,UAAU,MAAM+J,gBAAc,GACjCf,EAAQvL,KAAI,SAAAuM,GAAK,OAChB,kBAACpB,EAAD,CACEC,KAAMmB,EAAMnB,KACZC,QAASkB,EAAMlB,QACfC,GAAIiB,EAAMjB,GACVC,QAASgB,EAAMhB,eAIvB,OAKGiB,GAAY,SAACxL,GAAW,IAC3ByL,EAA+BzL,EAA/ByL,OAAQC,EAAuB1L,EAAvB0L,YACVvL,GADiCH,EAAV2L,MACb7J,MACVzD,EAAQuN,eAHoB,EAIEnB,IAAMtI,UAAS,GAJjB,mBAI3B0J,EAJ2B,KAIfC,EAJe,KAM5BC,EAAqB,WACzBD,GAAeD,IAGXxC,EACJ,6BACE,yBAAKlI,UAAWhB,EAAQ0J,UACvB6B,EAAY1M,KAAI,SAAA6B,GAAO,OACtB,kBAAC,IAAMN,SAAP,KACE,kBAACkD,EAAA,EAAD,MACA,kBAAC4H,GAAA,EAAD,KACGxK,EAAQ7B,KAAI,SAAAuM,GAAK,OAChB,kBAAC,GAAD,CACEnB,KAAMmB,EAAMnB,KACZC,QAASkB,EAAMlB,QACfC,GAAIiB,EAAMjB,GACVC,QAASgB,EAAMhB,mBAQvBnH,OAAuBkF,IAAXmD,EAAuB,kBAAMA,IAASO,SAASC,WAAO3D,EAExE,OACE,yBAAKnH,UAAWhB,EAAQ7B,MACtB,kBAAC4N,EAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAQC,SAAS,QAAQjL,UAAWhB,EAAQsJ,QAC1C,kBAAC4C,GAAA,EAAD,KACE,kBAACvJ,GAAA,EAAD,CACEC,MAAM,UACN1B,aAAW,cACXiL,KAAK,QACLtJ,QAAS+I,EACT5K,UAAWhB,EAAQwJ,YAEnB,kBAAC,KAAD,OAEF,kBAAC4C,GAAA,EAAD,CAAY3E,QAAQ,KAAK4E,QAAM,GAC5BxM,EAAM2L,SAIb,yBAAKxK,UAAWhB,EAAQkJ,OAAQhI,aAAW,mBAEzC,kBAACoL,GAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OAC1B,kBAACC,GAAA,EAAD,CACExJ,UAAWA,EACXwE,QAAQ,YACRiF,OAA4B,QAApBxO,EAAMgF,UAAsB,QAAU,OAC9CjB,KAAMyJ,EACN7H,QAAS+H,EACT5L,QAAS,CACP2M,MAAO3M,EAAQ4J,aAEjBgD,WAAY,CACVC,aAAa,IAGd3D,IAGL,kBAACoD,GAAA,EAAD,CAAQQ,QAAM,EAACN,eAAe,OAC5B,kBAACC,GAAA,EAAD,CACEzM,QAAS,CACP2M,MAAO3M,EAAQ4J,aAEjBnC,QAAQ,YACRxF,MAAI,GAEHiH,KAIP,0BAAMlI,UAAWhB,EAAQ6J,SACvB,yBAAK7I,UAAWhB,EAAQ0J,UACvB7J,EAAMkN,Y,6BC/KTC,GAAW,SAACnN,GAAW,IACnBkN,EAAqClN,EAArCkN,SAAUlF,EAA2BhI,EAA3BgI,MAAOoF,EAAoBpN,EAApBoN,MAAUC,EADT,aACmBrN,EADnB,8BAG1B,OACE,uCACEsN,KAAK,WACLC,OAAQvF,IAAUoF,EAClB5F,GAAE,mCAA8B4F,GAChCI,kBAAA,8BAAwCJ,IACpCC,GAEHrF,IAAUoF,GACT,kBAACjJ,EAAA,EAAD,CAAKsJ,EAAG,GACN,kBAAClB,GAAA,EAAD,KAAaW,MAcvB,IAAMpL,GAAY1D,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ2L,SAAU,EACVtL,MAAO,OACP+O,gBAAiBrP,EAAMsP,QAAQC,WAAWd,MAC1CjO,UAAWR,EAAMK,QAAQ,QAIhBmP,GAAiB,SAAC7N,GAAW,IAChC8N,EAAe9N,EAAf8N,WACF3N,EAAU2B,KAFuB,EAGb2I,IAAMtI,SAAS,GAHF,mBAGhC6F,EAHgC,KAGzB+F,EAHyB,KASvC,OACE,yBAAK5M,UAAWhB,EAAQ7B,MACtB,kBAAC6N,GAAA,EAAD,CAAQC,SAAS,SAASrJ,MAAM,WAC9B,kBAACiL,GAAA,EAAD,CACEhG,MAAOA,EACPF,SATa,SAACmG,EAAOC,GAC3BH,EAASG,IASHC,eAAe,UACfC,UAAU,UACVxG,QAAQ,aACRyG,cAAc,OACdhN,aAAW,gCAEVyM,EAAW9O,KAAI,SAACuM,EAAM+C,GAAP,OACd,kBAACC,GAAA,EAAD,eAAK1G,MAAO0D,EAAM1D,OArCrB,CACLL,GAAG,uBAAD,OAFa4F,EAsCgCkB,GAnC/C,gBAAgB,4BAAhB,OAA6ClB,MAHjD,IAAmBA,OA0CZU,EAAW9O,KAAI,SAACuM,EAAM+C,GAAP,OACd,kBAAC,GAAD,CAAUtG,MAAOA,EAAOoF,MAAOkB,GAC5B/C,EAAMhK,gBCgGFiN,GAvIH,WACV,IAAMnQ,EAAQoM,IAAME,SAChB,kBACE8D,YAAe,CACbd,QAAS,CACPtD,QAAS,CACPqE,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,aAItB,IAnBY,EAsBkB1M,mBAAU,IAtB5B,mBAsBTiH,EAtBS,KAsBE2F,EAtBF,OAuBkB5M,mBAAU,IAvB5B,mBAuBTmE,EAvBS,KAuBE0I,EAvBF,OAwBsB7M,mBAAU,IAxBhC,mBAwBTyG,EAxBS,KAwBIqG,EAxBJ,KA0BVC,EAAY,uCAAG,4BAAAjQ,EAAA,sEACD6J,GAAiB,cADhB,OACblD,EADa,OAEnBmJ,EAAanJ,GAFM,2CAAH,qDAKZuJ,EAAc,uCAAG,4BAAAlQ,EAAA,sEACH6J,GAAiB,oBADd,OACflD,EADe,OAErBqJ,EAAerJ,GAFM,2CAAH,qDAKdwJ,EAAY,uCAAG,4BAAAnQ,EAAA,sEACD6J,GAAiB,kBADhB,OACblD,EADa,OAEnBoJ,EAAapJ,GAFM,2CAAH,qDAYlB,OAPAnD,qBAAU,WACR2M,IACAF,IACAC,IACA/J,QAAQC,IAAI,eAAeiB,EAAUsC,KACpC,IAGD,kBAACyG,EAAA,EAAD,CAAehR,MAAOA,GACpB,kBAACiR,EAAA,EAAD,KACE,kBAACpD,EAAA,EAAD,MACA,kBAAC,IAAD,CAAQqD,SAAUC,sBAChB,kBAAC,GAAD,CAAW7D,MAAM,WACfD,YAAa,CACX,CAAC,CACCrB,QAAQ,SACRC,GAAG,WACH,CACAD,QAAQ,aACRC,GAAG,cACH,CACAD,QAAQ,cACRC,GAAG,gBACH,CACAD,QAAQ,YACRC,GAAG,iBAIT,kBAACrG,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwL,KAAK,UAAUlO,UAAY,kBAChC,kBAACmO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYhE,MAAM,kCAClB,kBAACiE,EAAA,EAAD,KACE,kBAAC,GAAD,WAIR,kBAAC,IAAD,CAAOH,KAAK,aAAalO,UAAY,kBACjC,kBAACmO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYhE,MAAM,mBAClB,kBAACiE,EAAA,EAAD,KACE,kBAAC,GAAD,CAAiBxG,UAAWA,SAIpC,kBAAC,IAAD,CAAOqG,KAAK,aAAalO,UAAY,kBACnC,kBAACmO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYhE,MAAM,cAClB,kBAACiE,EAAA,EAAD,KACE,kBAAC,GAAD,CAAiBtJ,UAAWA,SAIlC,kBAAC,IAAD,CAAOmJ,KAAK,eAAelO,UAAY,kBACrC,kBAACmO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYhE,MAAM,gBAClB,kBAACiE,EAAA,EAAD,KACE,kBAAC,GAAD,CAAmBhH,YAAaA,IAChC,kBAAC,GAAD,CACEkF,WAAY,CACZ,CACEjG,MAAM,sBACNtG,UACE,kBAAC,GAAD,CACE+E,UAAWA,EACX5B,QAAS,kBAAMyK,uBCnIrBU,QACW,cAA7BpE,OAAOqE,SAASC,UAEe,UAA7BtE,OAAOqE,SAASC,UAEhBtE,OAAOqE,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAGFnE,SAASoE,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxL,QAAQwL,MAAMA,EAAMC,c","file":"static/js/main.b20fb6b0.chunk.js","sourcesContent":["/*\n\nBLOCKCHAIN CONFIGURATION FILE\n\n  initalize all data for pact-lang-api kadena blockchain calls\n\n  modify this file to interact with different\n    chains, networks, contracts\n\n  documentation:\n    https://pact-language.readthedocs.io/en/stable/\n\n  pact tutorials:\n    https://pactlang.org/\n\n*/\n\n//chain that contract lives on\nvar chainId = \"0\";\n\n//id of network version\nvar networkId = \"testnet04\";\n\n//network node\nvar node = \"api.testnet.chainweb.com\";\n\n//unique contract name\nvar contractName = \"init\";\n\n//unique gas station contract name\nvar gasStationName = \"memory-wall-gas-station\";\n\n//namespace that precedes contract name\nvar namespace = \"free\";\n\n//api host to send requests\nvar host = `https://${node}/chainweb/0.0/${networkId}/chain/${chainId}/pact`;\n\n//creation time for request\nvar creationTime = () => Math.round(new Date().getTime() / 1000) - 15;\n\n//JSON with all necessary blockchain call data\nvar kadenaAPI = {\n  contractName: contractName,\n  gasStationName: gasStationName,\n  namespace: namespace,\n  contractAddress: `${namespace}.${contractName}`,\n  gasStationAddress: `${namespace}.${gasStationName}`,\n  explorerURL: `https://explorer.chainweb.com/${networkId.slice(0, -2)}`,\n  meta: {\n    networkId: networkId,\n    chainId: chainId,\n    host: host,\n    creationTime: creationTime,\n    //gas price at lowest possible denomination\n    gasPrice: 0.00000000001,\n    //high gas limit for tx\n    gasLimit: 10000,\n    //time a tx lives in mempool since creationTime\n    ttl: 28800,\n    //sender === gas payer of the transaction\n    //  set to our gas station account defined in memory-wall-gas-station.pact\n    sender: \"mw-free-gas\",\n    //nonce here doesnt matter since the tx will never have the same hash\n    nonce: \"some nonce that doesnt matter\",\n  },\n};\n\nconst keyFormatter = (str) =>\n  str.replace(new RegExp(\"[A-Z]+\",\"gm\"),\" $&\").replace(new RegExp(\"^[a-z]\",\"gm\"),k => k.toUpperCase());\n\nmodule.exports = { kadenaAPI: kadenaAPI, keyFormatter: keyFormatter }\n","// For util functions\nimport React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n//Table Stuff\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n//Collapse-able Stuff\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nexport const useInputStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '25ch',\n  },\n}));\n\n//config file for blockchain calls\n\nexport const dashStyleNames2Text = str => str.split(\"-\").map(k=>k.replace(new RegExp(\"^.\",\"gm\"),a=>a.toUpperCase())).join(' ');\n\nconst isRootPactValue = (val) => {\n  if (val && typeof val === 'object' ) {\n    if ('timep' in val || 'int' in val || 'decimal' in val || 'time' in val ) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return true;\n  }\n};\n\nconst isPactKeyset = (val) => {\n  if (val && typeof val === 'object' ) {\n    if (Object.keys(val).length === 2 &&'pred' in val && 'keys' in val) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n};\n\n\nexport const renderPactValue = (val) => {\n  if (val && typeof val === 'object') {\n    if ('time' in val) {\n      return val['time'];\n    } else if ('timep' in val) {\n      return val['timep'];\n    } else if ('int' in val) {\n      return typeof val['int'] === 'string' ? val['int'] : val['int'].toLocaleString();\n    } else if ('decimal' in val) {\n      return typeof val['decimal'] === 'string' ? val['decimal'] : val['decimal'].toLocaleString();\n    } else if ('pred' in val && 'keys' in val) {\n      return JSON.stringify(val);\n    } else {\n      return JSON.stringify(val);\n    }\n  } else if (typeof val === 'boolean') {\n    return val.toString();\n  } else if (typeof val === 'string') {\n    return val;\n  } else if (typeof val === 'number'){\n    return val.toLocaleString()\n  } else {\n    return JSON.stringify(val);\n  }\n};\n\nconst useToplevelTableStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst useNestedTableStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nexport const PactSingleJsonAsTable = (props) => {\n  const json = props.json || {};\n  const isNested = props.isNested || false;\n  const classes = isNested ? useNestedTableStyles : useToplevelTableStyles;\n  const header = props.header || [];\n  const keyFormatter = props.keyFormatter ? props.keyFormatter : (k) => {return (k)};\n  const valFormatter = props.valFormatter ? props.valFormatter : (str) => <code>{renderPactValue(str)}</code>;\n  const internals = () =>\n    <React.Fragment>\n      <TableHead>\n        <TableRow>\n        {header.map((val) => {\n          return <TableCell>{val}</TableCell>;\n        })}\n        </TableRow>\n      </TableHead>\n\n      <TableBody>\n        {Object.entries(json).map(([k,v]) => {\n          return (\n          <TableRow key={k}>\n            { Array.isArray(json) === false ? (\n              <TableCell>{keyFormatter(k)}</TableCell>\n            ) : (\n              <React.Fragment></React.Fragment>\n            )}\n            { isRootPactValue(v) ? (\n              <TableCell>{valFormatter(v)}</TableCell>\n            ) : typeof v === \"object\" ? (\n              <PactSingleJsonAsTable\n                json={v}\n                keyFormatter={keyFormatter}\n                valFormatter={valFormatter}\n                isNested={true}/>\n            ) : typeof v === \"function\" ? (\n              <TableCell>{valFormatter(v.toString())}</TableCell>\n            ) : (\n              <TableCell>{valFormatter(v)}</TableCell>\n            )}\n          </TableRow>\n          )\n        })}\n      </TableBody>\n    </React.Fragment>;\n\n  return (\n    isNested ? (\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    ) : (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    </TableContainer>\n    )\n)};\n\nexport const PactJsonListAsTable = (props) => {\n  const json = props.json || {};\n  const isNested = props.isNested || false;\n  const classes = isNested ? useNestedTableStyles : useToplevelTableStyles;\n  const header = props.header || [];\n  let keyOrder = [];\n  if (props.keyOrder) {\n    keyOrder = props.keyOrder;\n  } else if (Array.isArray(props.json)) {\n    if ( json.length > 0 ) {\n      keyOrder = Object.keys(json[0]);\n    }\n  }\n  const keyFormatter = props.keyFormatter ? props.keyFormatter : (k) => {return (k)};\n  const valFormatter = props.valFormatter ? props.valFormatter : (str) => <code>{renderPactValue(str)}</code>;\n\n  const internals = () =>\n    <React.Fragment>\n        <TableHead>\n          <TableRow>\n          {header.map((val) => (\n            <TableCell>{val}</TableCell>\n          ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {json.map(obj => (\n            <TableRow key={obj[keyOrder[0]]}>\n              { keyOrder.map(k => {\n                  const v = obj[k];\n                  return (\n                    <TableCell>\n                      {isRootPactValue(v) ? (\n                          valFormatter(v)\n                      ) : Array.isArray(v) ? (\n                          <PactJsonListAsTable\n                            json={v}\n                            keyFormatter={keyFormatter}\n                            valFormatter={valFormatter}\n                            isNested={true}/>\n                      ) : typeof v === \"object\" ? (\n                          <PactSingleJsonAsTable\n                            json={v}\n                            keyFormatter={keyFormatter}\n                            valFormatter={valFormatter}\n                            isNested={true}/>\n                      ) : typeof v === \"function\" ? (\n                          valFormatter(v.toString())\n                      ) : (\n                          valFormatter(v)\n                      )}\n                    </TableCell>\n                  )\n                }\n            )}\n            </TableRow>\n          ))}\n      </TableBody>\n    </React.Fragment>;\n\n  return (\n    isNested ? (\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    ) : (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    </TableContainer>\n    )\n)};\n","//basic React api imports\nimport React, {useState, useEffect} from \"react\";\nimport Icon from '@material-ui/core/Icon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  Container,\n  Paper,\n  Box,\n  Grid,\n  Divider,\n} from '@material-ui/core';\nimport { Modal, Button } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { kadenaAPI } from \"./kadena-config.js\";\nimport {dashStyleNames2Text, PactSingleJsonAsTable} from \"./util.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport const PactTxStatus = (props) => {\n  // TODO: make these msgs hideable\n  const tx = props.tx;\n  const txRes = props.txRes;\n  const txStatus = props.txStatus;\n  const [open,setOpen] = useState(true);\n  const [modalOpen,setModalOpen] = useState(false);\n  const classes = useStyles();\n  const severity = txStatus === \"pending\" ? 'info'\n                   : txStatus === \"success\" ? 'success'\n                   : txStatus === \"timeout\" ? 'warning'\n                   : 'error' ;\n  useEffect(()=>\n    setOpen(true)\n  ,[txStatus]);\n\n  return (\n    txStatus ?\n      <div className={classes.root}>\n        <Collapse in={open}>\n          <Alert\n            severity={severity}\n            action={\n              <IconButton\n                aria-label=\"close\"\n                color=\"inherit\"\n                size=\"small\"\n                onClick={() => {setOpen(false);}}>\n                <CloseIcon fontSize=\"inherit\" />\n              </IconButton>\n\n            }\n          >\n\n          <AlertTitle>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                {dashStyleNames2Text(txStatus)}\n              </Grid>\n              {txStatus === 'validation-error' || txStatus === 'failure'\n                ?\n                  <Grid item>\n                    <Divider orientation=\"vertical\" flexItem />\n                    <Button size='small' onClick={()=>setModalOpen(true)}>\n                      View\n                    </Button>\n                  </Grid>\n                : <React.Fragment/>}\n            </Grid>\n\n          </AlertTitle>\n            { txStatus === \"pending\" ? (\n              <React.Fragment>\n                <p>Awaiting Confirmation</p>\n                <a href={`${kadenaAPI.explorerURL}/tx/${tx.hash}`}>\n                  Eventual Block Explorer Link\n                </a>\n              </React.Fragment>\n            ) : txStatus === \"success\" ? (\n              <React.Fragment>\n                <a href={`${kadenaAPI.explorerURL}/tx/${tx.hash}`}>\n                  View transaction in Block Explorer\n                </a>\n              </React.Fragment>\n            ) : txStatus === \"failure\" ? (\n              <React.Fragment>\n                <a href={`${kadenaAPI.explorerURL}/tx/${tx.hash}`}>\n                  View transaction in Block Explorer\n                </a>\n                <div>\n                  <Modal\n                    open={modalOpen}\n                    onClose={() => setModalOpen(false)}\n                  >\n                    <Container maxWidth=\"lg\">\n                      <PactSingleJsonAsTable json={txRes}/>\n                    </Container>\n                  </Modal>\n                </div>\n              </React.Fragment>\n            ) : txStatus === \"timeout\" ? (\n              <React.Fragment>\n                <p>...but your tx was sent.</p>\n                <a href={`${kadenaAPI.explorerURL}/tx/${tx.hash}`}>\n                  View transaction in Block Explorer\n                </a>\n              </React.Fragment>\n            ) : txStatus === \"validation-error\" ? (\n              <React.Fragment>\n                <Box>\n                  Transaction was not sent to Blockchain. Check your keys or metadata.\n                </Box>\n                <div>\n                  <Modal\n                    open={modalOpen}\n                    onClose={() => setModalOpen(false)}\n                  >\n                    <Container maxWidth=\"md\">\n                        <Paper>{txRes.toString()}</Paper>\n                    </Container>\n                  </Modal>\n                </div>\n              </React.Fragment>\n            ) : (\n              <React.Fragment/>\n            )}\n          </Alert>\n        </Collapse>\n      </div>\n    : <React.Fragment/>\n  );\n};\n","//basic React api imports\nimport React, { useState, useEffect } from \"react\";\nimport clsx from 'clsx';\n//Material Stuff\nimport {FormControl as Form} from '@material-ui/core';\nimport {\n  Button,\n  Box,\n  Typography,\n  IconButton,\n  Input,\n  FilledInput,\n  LinearProgress,\n  OutlinedInput,\n  InputLabel,\n  InputAdornment,\n  FormHelperText,\n  FormControl,\n  TextField,\n  MenuItem,\n  Card, CardHeader, CardContent, CardActions,\n  Grid,\n} from '@material-ui/core';\nimport {\n  makeStyles,\n} from '@material-ui/styles';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n//pact-lang-api for blockchain calls\nimport Pact from \"pact-lang-api\";\n//config file for blockchain calls\nimport { kadenaAPI } from \"./kadena-config.js\";\nimport {\n  PactJsonListAsTable,\n  useInputStyles,\n } from \"./util.js\";\nimport { PactTxStatus } from \"./PactTxStatus.js\"\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: \"5px auto\",\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: \"10px auto\",\n  },\n}));\n\n\nconst sendGuardianCmd = async (\n  setTx,\n  setTxStatus,\n  setTxRes,\n  refresh,\n  user, cmd, envData={}\n) => {\n    try {\n      //creates transaction to send to wallet\n      const toSign = {\n          pactCode: cmd,\n          caps: Pact.lang.mkCap(\"Guadian Cap\"\n                           , \"Authenticates that your a guardian\"\n                           , `${kadenaAPI.contractAddress}.GUARDIAN`\n                           , [user]),\n          gasLimit: kadenaAPI.meta.gasLimit,\n          chainId: kadenaAPI.meta.chainId,\n          ttl: kadenaAPI.meta.ttl,\n          sender: user,\n          envData: envData\n      }\n      console.log(\"toSign\", toSign)\n      //sends transaction to wallet to sign and awaits signed transaction\n      const signed = await Pact.wallet.sign(toSign)\n      console.log(\"signed\", signed)\n      setTx(signed)\n      //sends signed transaction to blockchain\n      const txReqKeys = await Pact.wallet.sendSigned(signed, kadenaAPI.meta.host)\n      console.log(\"txReqKeys\", txReqKeys)\n      //set html to wait for transaction response\n      //set state to wait for transaction response\n      setTxStatus('pending')\n      try {\n        //listens to response to transaction sent\n        //  note method will timeout in two minutes\n        //    for lower level implementations checkout out Pact.fetch.poll() in pact-lang-api\n        let retries = 8;\n        let res = {};\n        while (retries > 0) {\n          //sleep the polling\n          await new Promise(r => setTimeout(r, 15000));\n          res = await Pact.fetch.poll(txReqKeys, kadenaAPI.meta.host);\n          try {\n            if (res[signed.hash].result.status) {\n              retries = -1;\n            } else {\n              retries = retries - 1;\n            }\n          } catch(e) {\n              retries = retries - 1;\n          }\n        };\n        //keep transaction response in local state\n        setTxRes(res)\n        if (res[signed.hash].result.status === \"success\"){\n          console.log(\"tx status set to success\");\n          //set state for transaction success\n          setTxStatus('success');\n          refresh();\n        } else if (retries === 0) {\n          console.log(\"tx status set to timeout\");\n          setTxStatus('timeout');\n          refresh();\n        } else {\n          console.log(\"tx status set to failure\");\n          //set state for transaction failure\n          setTxStatus('failure');\n        }\n      } catch(e) {\n        // TODO: use break in the while loop to capture if timeout occured\n        console.log(\"tx api failure\",e);\n        setTxRes(e);\n        setTxStatus('failure');\n      }\n    } catch(e) {\n      console.log(\"tx status set to validation error\",e);\n      //set state for transaction construction error\n      setTxStatus('validation-error');\n    }\n};\n\nexport const RenderGuardians = (props) => {\n  return (\n    <PactJsonListAsTable\n      header={[\"Guardian\",\"Committed KDA\",\"Approved Hash\",\"Approval Date\",\"Guard\"]}\n      keyOrder={[\"k\",\"committed-kda\",\"approved-hash\",\"approved-date\",\"guard\"]}\n      json={props.guardians}\n    />\n)};\n\nexport const RegisterAmbassador = (props) => {\n  const [grd, setGrd] = useState( \"\" );\n  const [newAmb, setNewAmb] = useState( \"\" );\n  const [ambGrd, setAmbGrd] = useState( \"\" );\n  const [txStatus, setTxStatus] = useState(\"\");\n  const [tx, setTx] = useState( {} );\n  const [txRes, setTxRes] = useState( {} );\n  const [wasSubmitted,setWasSubmitted] = useState(false);\n  const classes = useStyles();\n\n  useEffect(()=>setWasSubmitted(false),[grd,newAmb,ambGrd]);\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,props.refresh\n          ,grd\n          ,`(${kadenaAPI.contractAddress}.register-ambassador \"${grd}\" \"${newAmb}\" (read-keyset 'ks))`\n          ,{ks: JSON.parse(ambGrd)}\n        );\n      } catch (e) {\n        console.log(\"Guardian Registration Submit Error\",typeof e, e, grd,newAmb,ambGrd);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n      setWasSubmitted(true);\n    };\n\n  return (\n    <div>\n      <form\n        autoComplete=\"off\"\n        onSubmit={evt => handleSubmit(evt)}>\n          <TextField\n            id=\"outlined-multiline-static\"\n            select\n            required\n            fullWidth\n            className={classes.formControl}\n            variant=\"outlined\"\n            label=\"Select Guardian\"\n            onChange={e => setGrd(e.target.value)}\n            >\n            {props.guardians.map((g) =>\n              <MenuItem key={g['k']} value={g['k']}>\n                {g.['k']}\n              </MenuItem>\n            )}\n          </TextField>\n          <TextField\n            required\n            fullWidth\n            value={newAmb}\n            className={classes.formControl}\n            variant='outlined'\n            label=\"Ambassador Accout Name\"\n            onChange={e => setNewAmb(e.target.value)}\n            />\n          <TextField\n            required\n            fullWidth\n            label=\"Ambassador Account Guard\"\n            className={classes.formControl}\n            multiline\n            rows={4}\n            variant=\"outlined\"\n            placeholder={JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2)}\n            value={ambGrd}\n            onChange={e => setAmbGrd(e.target.value)}\n          />\n        <CardActions>\n          {txStatus === 'pending'\n            ? null\n            : <Button variant=\"outlined\" color=\"default\" type=\"submit\" disabled={wasSubmitted}>\n                Submit\n              </Button>\n          }\n        </CardActions>\n      </form>\n      { txStatus === 'pending' ? <LinearProgress /> : null }\n      <PactTxStatus tx={tx} txRes={txRes} txStatus={txStatus}/>\n    </div>\n  );\n};\n//\n// export const DeactivateAmbassador = (props) => {\n//   const [grd, setGrd] = useState( \"\" );\n//   const [newAmb, setNewAmb] = useState( \"\" );\n//   const [txStatus, setTxStatus] = useState(\"\");\n//   const [tx, setTx] = useState( {} );\n//   const [txRes, setTxRes] = useState( {} );\n//\n//   const handleSubmit = (evt) => {\n//       evt.preventDefault();\n//       // console.log(grd,newAmb);\n//       sendGuardianCmd(setTx,setTxStatus,setTxRes,props.refresh\n//         ,grd\n//         ,`(${kadenaAPI.contractAddress}.deactivate-ambassador \"${grd}\" \"${newAmb}\")`\n//         )\n//       };\n//\n//   return (\n//     <div>\n//       <Message attached header=\"Deactivate Ambassador\"/>\n//       <Form onSubmit={(evt)=>handleSubmit(evt)} className=\"attached fluid segment\">\n//         <Form.Select\n//           label=\"Select Guardian\"\n//           required\n//           options={props.guardians.map((g) => {return {key: g['k'], value:g['k'], text:g['k']};})}\n//           onChange={(e,d) => {setGrd(d.value)}}\n//           />\n//         <Form.Select\n//           label=\"Select Ambassador\"\n//           required\n//           options={props.ambassadors.map((g) => {return {key: g['k'], value:g['k'], text:g['k']};})}\n//           onChange={e => setNewAmb(e.target.value)}/>\n//         <Button color='blue' type='submit'>Submit</Button>\n//       </Form>\n//       <PactTxStatus tx={tx} txRes={txRes} txStatus={txStatus}/>\n//     </div>\n//\n//   );\n// };\n//\n// export const ReactivateAmbassador = (props) => {\n//   const [grd, setGrd] = useState( \"\" );\n//   const [amb, setAmb] = useState( \"\" );\n//   const [txStatus, setTxStatus] = useState(\"\");\n//   const [tx, setTx] = useState( {} );\n//   const [txRes, setTxRes] = useState( {} );\n//\n//   const handleSubmit = (evt) => {\n//       evt.preventDefault();\n//       // console.log(grd,newAmb);\n//       sendGuardianCmd(setTx,setTxStatus,setTxRes,props.refresh\n//         ,grd\n//         ,`(${kadenaAPI.contractAddress}.reactivate-ambassador \"${grd}\" \"${amb}\")`\n//         )\n//       };\n//\n//   return (\n//     <div>\n//       <Message attached header=\"Reactivate Ambassador\"/>\n//       <Form onSubmit={evt => handleSubmit(evt)} className=\"attached fluid segment\">\n//         <Form.Select\n//           label=\"Select Guardian\"\n//           required\n//           options={props.guardians.map((g) => {return {key: g['k'], value:g['k'], text:g['k']};})}\n//           onChange={(e,d) => {setGrd(d.value)}}\n//           />\n//         <Form.Select\n//           label=\"Select Ambassador\"\n//           required\n//           options={props.ambassadors.map((g) => {return {key: g['k'], value:g['k'], text:g['k']};})}\n//           onChange={(e,d) => setAmb(d.value)}/>\n//         <Button color='blue' type='submit'>Submit</Button>\n//       </Form>\n//       <PactTxStatus tx={tx} txRes={txRes} txStatus={txStatus}/>\n//     </div>\n//\n//   );\n// }\n//\n// export const RotateGuardian = (props) => {\n//   const [grd, setGrd] = useState( \"\" );\n//   const [ks, setKs] = useState( \"\" );\n//   const [txStatus, setTxStatus] = useState( \"\" );\n//   const [tx, setTx] = useState( {} );\n//   const [txRes, setTxRes] = useState( {} );\n//\n//   const handleSubmit = (evt) => {\n//       evt.preventDefault();\n//       // console.log(grd,newAmb);\n//       sendGuardianCmd(setTx,setTxStatus,setTxRes,props.refresh\n//         ,grd\n//         ,`(${kadenaAPI.contractAddress}.reactivate-ambassador \"${grd}\" (read-keyset 'ks))`\n//         ,{ks: JSON.parse(ks)})\n//       };\n//\n//   return (\n//     <div>\n//       <Message attached header=\"Rotate Guardian\"/>\n//       <Form onSubmit={evt => handleSubmit(evt)} className=\"attached fluid segment\">\n//         <Form.Select\n//           label=\"Select Guardian\"\n//           required\n//           options={props.guardians.map((g) => {return {key: g['k'], value:g['k'], text:g['k']};})}\n//           onChange={(e,d) => {setGrd(d.value)}}\n//           />\n//         <Form.TextArea required\n//           label=\"Enter new KeySet\"\n//           placeholder={JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2)}\n//           value={ks}\n//           onChange={e => setKs(e.target.value)}\n//           />\n//         <Button color='blue' type='submit'>Submit</Button>\n//       </Form>\n//       <PactTxStatus tx={tx} txRes={txRes} txStatus={txStatus}/>\n//     </div>\n//\n//   );\n// }\n","//basic React api imports\nimport React from \"react\";\n//config file for blockchain calls\nimport { PactJsonListAsTable } from \"./util.js\";\n\n\nexport const RenderAmbassadors = (props) => {\n  return (\n    <PactJsonListAsTable\n      header={[\"Ambassador\",\"Active\",\"Voted to Freeze\",\"Guard\"]}\n      keyOrder={[\"k\",\"active\",\"voted-to-freeze\",\"guard\"]}\n      json={props.ambassadors}\n    />\n)};\n","//basic React api imports\nimport React from \"react\";\nimport { kadenaAPI, keyFormatter } from \"./kadena-config.js\";\nimport { PactSingleJsonAsTable } from \"./util.js\";\n\nexport const KadenaConfig = () => {\n  return (\n    <PactSingleJsonAsTable\n      json={kadenaAPI}\n      keyFormatter={keyFormatter}\n      />\n  )\n};\n","//basic React api imports\nimport React from \"react\";\n//config file for blockchain calls\nimport Pact from \"pact-lang-api\";\nimport { kadenaAPI } from \"./kadena-config.js\";\nimport { PactSingleJsonAsTable, dashStyleNames2Text } from \"./util.js\";\n\nexport const getContractState = async (cmd) => {\n  //calling get-all() function from smart contract\n    const res = await Pact.fetch.local(\n      {\n        pactCode: `(${kadenaAPI.contractAddress}.${cmd})`,\n        //pact-lang-api function to construct transaction meta data\n        meta: Pact.lang.mkMeta(\n          kadenaAPI.meta.sender,\n          kadenaAPI.meta.chainId,\n          kadenaAPI.meta.gasPrice,\n          kadenaAPI.meta.gasLimit,\n          kadenaAPI.meta.creationTime(),\n          kadenaAPI.meta.ttl\n        ),\n      },\n      kadenaAPI.meta.host\n    );\n    const all = res.result.data;\n    //sorts memories by least recent\n    console.log(\"local query data\",all);\n    return(all);\n};\n\nexport const RenderInitState = (props) => {\n  return (\n   <PactSingleJsonAsTable\n    json={props.initState}\n    header={[\"\",\"Status\"]}\n    keyFormatter={dashStyleNames2Text}\n    />\n  )\n};\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  AppBar,\n  Box,\n  CssBaseline,\n  Collapse,\n  Divider,\n  Drawer,\n  Hidden,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst ListItemLink = (props) => {\n  const { icon, primary, to, subList } = props;\n  const hasSubList = subList && Array.isArray(subList) ;\n  const [open, setOpen] = React.useState(false);\n\n  const renderLink = React.useMemo(\n    () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n    [to],\n  );\n\n  return (\n    <React.Fragment>\n      <li>\n        <ListItem button component={renderLink}>\n          {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n          <ListItemText primary={primary} />\n          {hasSubList ? (\n            open ? <ExpandLess onClick={()=>setOpen(!open)} />\n                 : <ExpandMore onClick={()=>setOpen(!open)} />\n            ) : null}\n        </ListItem>\n      </li>\n        {hasSubList ?\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {subList.map(entry =>\n                <ListItemLink\n                  icon={entry.icon}\n                  primary={entry.primary}\n                  to={entry.to}\n                  subList={entry.subList}/>\n              )}\n            </List>\n          </Collapse>\n        : null }\n    </React.Fragment>\n  );\n};\n\nexport const NavDrawer = (props) => {\n  const { window, entriesList, title } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      {entriesList.map(entries =>\n        <React.Fragment>\n          <Divider />\n          <List>\n            {entries.map(entry =>\n              <ListItemLink\n                icon={entry.icon}\n                primary={entry.primary}\n                to={entry.to}\n                subList={entry.subList}/>\n            )}\n          </List>\n        </React.Fragment>\n       )}\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            {props.title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {props.children}\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Tab,\n  Tabs,\n  Typography,\n  Box,\n} from '@material-ui/core';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport const ScrollableTabs = (props) => {\n  const { tabEntries } = props;\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          {tabEntries.map((entry,idx)=>\n            <Tab label={entry.label} {...a11yProps(idx)}/>\n          )}\n        </Tabs>\n      </AppBar>\n      {tabEntries.map((entry,idx)=>\n        <TabPanel value={value} index={idx}>\n          {entry.component}\n        </TabPanel>\n      )}\n    </div>\n  );\n}\n","//basic React api imports\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n } from '@material-ui/core/styles';\nimport NoSsr from '@material-ui/core/NoSsr';\n//semantic ui for styling\nimport {\n  Container,\n  Card, CardHeader, CardContent, CardActions,\n  Typography,\n} from '@material-ui/core';\n//config file for blockchain calls\nimport  {\n  RenderGuardians,\n  RegisterAmbassador,\n  // DeactivateAmbassador,\n  // ReactivateAmbassador,\n  // RotateGuardian,\n} from \"./Guardians.js\";\nimport { RenderAmbassadors } from \"./Ambassadors.js\";\nimport { KadenaConfig } from \"./KadenaConfig.js\"\nimport { RenderInitState, getContractState } from \"./InitState.js\";\nimport { NavDrawer } from \"./NavDrawer.js\";\nimport { ScrollableTabs } from \"./ScrollableTabs.js\";\n\n\nconst App = () => {\n  const theme = React.useMemo(\n      () =>\n        createMuiTheme({\n          palette: {\n            primary: {\n              light: '#cb4584',\n              main: '#960057',\n              dark: '#cb4584',\n              contrastText: '#fff',\n            },\n            secondary: {\n              light: '#ffffff',\n              main: '#e3e8ed',\n              dark: '#b1b6bb',\n              contrastText: '#000',\n            },\n          },\n        }),\n      [],\n    );\n\n  const [initState, setInitState] = useState( {} );\n  const [guardians, setGuardians] = useState( [] );\n  const [ambassadors, setAmbassadors] = useState( [] );\n\n  const getInitState = async () => {\n    const res = await getContractState(\"view-state\");\n    setInitState(res);\n  };\n\n  const getAmbassadors = async () => {\n    const res = await getContractState(\"view-ambassadors\");\n    setAmbassadors(res);\n  };\n\n  const getGuardians = async () => {\n    const res = await getContractState(\"view-guardians\");\n    setGuardians(res);\n  };\n\n  useEffect(() => {\n    getGuardians();\n    getInitState();\n    getAmbassadors();\n    console.log('useEffect []',guardians,ambassadors)\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <NoSsr>\n        <CssBaseline/>\n        <Router basename={process.env.PUBLIC_URL}>\n          <NavDrawer title=\"dao.init\"\n            entriesList={[\n              [{\n                primary:\"Config\",\n                to:\"/config\"\n              },{\n                primary:\"Init State\",\n                to:\"/initState\"\n              },{\n                primary:\"Ambassadors\",\n                to:\"/ambassadors\"\n              },{\n                primary:\"Guardians\",\n                to:\"/guardians\",\n              }\n            ]\n          ]}>\n          <Container>\n            <Switch>\n              <Route path=\"/config\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Contract and UI Configuration\"/>\n                  <CardContent>\n                    <KadenaConfig/>\n                  </CardContent>\n                </Card>\n              }/>\n            <Route path=\"/initState\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Contract State\"/>\n                  <CardContent>\n                    <RenderInitState initState={initState}/>\n                  </CardContent>\n                </Card>\n              }/>\n            <Route path=\"/guardians\" component={ () =>\n              <Card>\n                <CardHeader title=\"Guardians\"/>\n                <CardContent>\n                  <RenderGuardians guardians={guardians}/>\n                </CardContent>\n              </Card>\n              }/>\n            <Route path=\"/ambassadors\" component={ () =>\n              <Card>\n                <CardHeader title=\"Ambassadors\"/>\n                <CardContent>\n                  <RenderAmbassadors ambassadors={ambassadors}/>\n                  <ScrollableTabs\n                    tabEntries={[\n                    {\n                      label:\"Register Ambassador\",\n                      component:\n                        <RegisterAmbassador\n                          guardians={guardians}\n                          refresh={() => getAmbassadors()}/>\n                    }\n                    ]}/>\n                </CardContent>\n              </Card>\n              }/>\n            </Switch>\n          </Container>\n          </NavDrawer>\n        </Router>\n      </NoSsr>\n    </ThemeProvider>\n  );\n};\n\n      // <ReactivateAmbassador\n      //   guardians={guardians}\n      //   ambassadors={ambassadors}\n      //   refresh={() => getAmbassadors()}/>\n      // <DeactivateAmbassador\n      //   guardians={guardians}\n      //   ambassadors={ambassadors}\n      //   refresh={() => getAmbassadors()}/>\n      // <RotateGuardian\n      //   guardians={guardians}\n      //   refresh={() => getGuardians()}/>\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}