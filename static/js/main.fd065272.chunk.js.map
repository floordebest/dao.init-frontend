{"version":3,"sources":["PactTxStatus.js","util.js","Guardians.js","Ambassadors.js","KadenaConfig.js","InitState.js","NavDrawer.js","ScrollableTabs.js","App.js","serviceWorker.js","index.js","kadena-config.js"],"names":["useStyles","makeStyles","theme","root","width","marginTop","spacing","PactTxStatus","props","tx","txRes","txStatus","setTxStatus","useState","open","setOpen","modalOpen","setModalOpen","classes","severity","useEffect","className","Collapse","in","Alert","action","IconButton","aria-label","color","size","onClick","fontSize","AlertTitle","Grid","container","direction","justify","alignItems","item","dashStyleNames2Text","Divider","orientation","flexItem","Button","Fragment","href","kadenaAPI","explorerURL","hash","Modal","onClose","Container","maxWidth","json","Box","Paper","toString","display","flexWrap","margin","withoutLabel","textField","str","split","map","k","replace","RegExp","a","toUpperCase","join","isRootPactValue","val","renderPactValue","toLocaleString","JSON","stringify","useToplevelTableStyles","table","minWidth","useNestedTableStyles","borderBottom","PactSingleJsonAsTable","isNested","header","keyFormatter","valFormatter","internals","TableHead","TableRow","TableCell","TableBody","Object","entries","v","key","Array","isArray","Table","TableContainer","component","PactJsonListAsTable","keyOrder","length","keys","obj","MakeInputField","inputField","type","label","options","placeholder","onChange","value","TextField","id","select","required","fullWidth","variant","e","target","MenuItem","multiline","rows","MakeForm","inputFields","onSubmit","wasSubmitted","setWasSubmitted","autoComplete","f","CardActions","disabled","LinearProgress","formControl","selectEmpty","sendGuardianCmd","setTx","setTxRes","refresh","user","cmd","envData","caps","toSign","pactCode","Pact","lang","mkCap","contractAddress","gasLimit","meta","chainId","ttl","sender","console","log","wallet","sign","signed","sendSigned","host","txReqKeys","retries","res","Promise","r","setTimeout","fetch","poll","result","status","RenderGuardians","guardians","RegisterAmbassador","grd","setGrd","newAmb","setNewAmb","ambGrd","setAmbGrd","g","undefined","evt","preventDefault","ks","parse","DeactivateAmbassador","amb","setAmb","ambassadors","ReactivateAmbassador","ProposeDaoUpgrade","acct","setAcct","hsh","setHsh","GuardianApproveHash","RenderAmbassadors","sendAmbassadorCmd","VoteToFreeze","Freeze","KadenaConfig","getContractState","local","mkMeta","gasPrice","creationTime","all","data","RenderInitState","initState","drawer","breakpoints","up","flexShrink","appBar","zIndex","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","ListItemLink","icon","primary","to","subList","hasSubList","React","renderLink","useMemo","forwardRef","itemProps","ref","ListItem","button","ListItemIcon","ListItemText","timeout","unmountOnExit","List","disablePadding","entry","NavDrawer","window","entriesList","title","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","document","body","CssBaseline","AppBar","position","Toolbar","edge","Typography","noWrap","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","keepMounted","xsDown","children","TabPanel","index","other","role","hidden","aria-labelledby","p","backgroundColor","palette","background","ScrollableTabs","tabEntries","setValue","Tabs","event","newValue","indicatorColor","textColor","scrollButtons","idx","Tab","App","createMuiTheme","light","main","dark","contrastText","secondary","setInitState","setGuardians","setAmbassadors","getInitState","getAmbassadors","getGuardians","ThemeProvider","NoSsr","basename","process","path","Card","CardHeader","CardContent","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","contractName","gasStationName","namespace","gasStationAddress","slice","networkId","Math","round","Date","getTime","nonce","module","exports"],"mappings":"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","file":"static/js/main.fd065272.chunk.js","sourcesContent":["//basic React api imports\nimport React, {useState, useEffect} from \"react\";\nimport Icon from '@material-ui/core/Icon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  Container,\n  Paper,\n  Box,\n  Grid,\n  Divider,\n} from '@material-ui/core';\nimport { Modal, Button } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { kadenaAPI } from \"./kadena-config.js\";\nimport {dashStyleNames2Text, PactSingleJsonAsTable} from \"./util.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport const PactTxStatus = (props) => {\n  // TODO: make these msgs hideable\n  const tx = props.tx;\n  const txRes = props.txRes;\n  const txStatus = props.txStatus;\n  const setTxStatus = props.setTxStatus;\n  const [open,setOpen] = useState(true);\n  const [modalOpen,setModalOpen] = useState(false);\n  const classes = useStyles();\n  const severity = txStatus === \"pending\" ? 'info'\n                   : txStatus === \"success\" ? 'success'\n                   : txStatus === \"timeout\" ? 'warning'\n                   : 'error' ;\n  useEffect(()=>\n    setOpen(true)\n  ,[txStatus]);\n\n  return (\n    txStatus ?\n      <div className={classes.root}>\n        <Collapse in={open}>\n          <Alert\n            severity={severity}\n            action={\n              <IconButton\n                aria-label=\"close\"\n                color=\"inherit\"\n                size=\"small\"\n                onClick={() => {setOpen(false); setTxStatus(\"\");}}>\n                <CloseIcon fontSize=\"inherit\" />\n              </IconButton>\n\n            }\n          >\n\n          <AlertTitle>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                {dashStyleNames2Text(txStatus)}\n              </Grid>\n              {txStatus === 'validation-error' || txStatus === 'failure'\n                ?\n                  <Grid item>\n                    <Divider orientation=\"vertical\" flexItem />\n                    <Button size='small' onClick={()=>setModalOpen(true)}>\n                      View\n                    </Button>\n                  </Grid>\n                : <React.Fragment/>}\n            </Grid>\n\n          </AlertTitle>\n            { txStatus === \"pending\" ? (\n              <React.Fragment>\n                <p>Awaiting Confirmation</p>\n                <a href={`${kadenaAPI.explorerURL}/tx/${tx.hash}`}>\n                  Eventual Block Explorer Link\n                </a>\n              </React.Fragment>\n            ) : txStatus === \"success\" ? (\n              <React.Fragment>\n                <a href={`${kadenaAPI.explorerURL}/tx/${tx.hash}`}>\n                  View transaction in Block Explorer\n                </a>\n              </React.Fragment>\n            ) : txStatus === \"failure\" ? (\n              <React.Fragment>\n                <a href={`${kadenaAPI.explorerURL}/tx/${tx.hash}`}>\n                  View transaction in Block Explorer\n                </a>\n                <div>\n                  <Modal\n                    open={modalOpen}\n                    onClose={() => setModalOpen(false)}\n                  >\n                    <Container maxWidth=\"lg\">\n                      <PactSingleJsonAsTable json={txRes}/>\n                    </Container>\n                  </Modal>\n                </div>\n              </React.Fragment>\n            ) : txStatus === \"timeout\" ? (\n              <React.Fragment>\n                <p>...but your tx was sent.</p>\n                <a href={`${kadenaAPI.explorerURL}/tx/${tx.hash}`}>\n                  View transaction in Block Explorer\n                </a>\n              </React.Fragment>\n            ) : txStatus === \"validation-error\" ? (\n              <React.Fragment>\n                <Box>\n                  Transaction was not sent to Blockchain. Check your keys or metadata.\n                </Box>\n                <div>\n                  <Modal\n                    open={modalOpen}\n                    onClose={() => setModalOpen(false)}\n                  >\n                    <Container maxWidth=\"md\">\n                        <Paper>{txRes.toString()}</Paper>\n                    </Container>\n                  </Modal>\n                </div>\n              </React.Fragment>\n            ) : (\n              <React.Fragment/>\n            )}\n          </Alert>\n        </Collapse>\n      </div>\n    : <React.Fragment/>\n  );\n};\n","// For util functions\nimport React, {useState, useEffect} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n//Table Stuff\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Box,\n  Collapse,\n  IconButton,\n} from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport {FormControl as Form} from '@material-ui/core';\nimport {\n  Button,\n  Typography,\n  Input,\n  FilledInput,\n  LinearProgress,\n  OutlinedInput,\n  InputLabel,\n  InputAdornment,\n  FormHelperText,\n  FormControl,\n  TextField,\n  MenuItem,\n  Card, CardHeader, CardContent, CardActions,\n  Grid,\n} from '@material-ui/core';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n//pact-lang-api for blockchain calls\nimport Pact from \"pact-lang-api\";\n//config file for blockchain calls\nimport { kadenaAPI } from \"./kadena-config.js\";\nimport { PactTxStatus } from \"./PactTxStatus.js\";\n\nexport const useInputStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '25ch',\n  },\n}));\n\n//config file for blockchain calls\n\nexport const dashStyleNames2Text = str => str.split(\"-\").map(k=>k.replace(new RegExp(\"^.\",\"gm\"),a=>a.toUpperCase())).join(' ');\n\nconst isRootPactValue = (val) => {\n  if (val && typeof val === 'object' ) {\n    if ('timep' in val || 'int' in val || 'decimal' in val || 'time' in val ) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return true;\n  }\n};\n\nconst isPactKeyset = (val) => {\n  if (val && typeof val === 'object' ) {\n    if (Object.keys(val).length === 2 &&'pred' in val && 'keys' in val) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n};\n\n\nexport const renderPactValue = (val) => {\n  if (val && typeof val === 'object') {\n    if ('time' in val) {\n      return val['time'];\n    } else if ('timep' in val) {\n      return val['timep'];\n    } else if ('int' in val) {\n      return typeof val['int'] === 'string' ? val['int'] : val['int'].toLocaleString();\n    } else if ('decimal' in val) {\n      return typeof val['decimal'] === 'string' ? val['decimal'] : val['decimal'].toLocaleString();\n    } else if ('pred' in val && 'keys' in val) {\n      return JSON.stringify(val);\n    } else {\n      return JSON.stringify(val);\n    }\n  } else if (typeof val === 'boolean') {\n    return val.toString();\n  } else if (typeof val === 'string') {\n    return val;\n  } else if (typeof val === 'number'){\n    return val.toLocaleString()\n  } else {\n    return JSON.stringify(val);\n  }\n};\n\nconst useToplevelTableStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst useNestedTableStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nexport const PactSingleJsonAsTable = (props) => {\n  const json = props.json || {};\n  const isNested = props.isNested || false;\n  const classes = isNested ? useNestedTableStyles : useToplevelTableStyles;\n  const header = props.header || [];\n  const keyFormatter = props.keyFormatter ? props.keyFormatter : (k) => {return (k)};\n  const valFormatter = props.valFormatter ? props.valFormatter : (str) => <code>{renderPactValue(str)}</code>;\n  const internals = () =>\n    <React.Fragment>\n      <TableHead>\n        <TableRow>\n        {header.map((val) => {\n          return <TableCell>{val}</TableCell>;\n        })}\n        </TableRow>\n      </TableHead>\n\n      <TableBody>\n        {Object.entries(json).map(([k,v]) => {\n          return (\n          <TableRow key={k}>\n            { Array.isArray(json) === false ? (\n              <TableCell>{keyFormatter(k)}</TableCell>\n            ) : (\n              <React.Fragment></React.Fragment>\n            )}\n            { isRootPactValue(v) ? (\n              <TableCell>{valFormatter(v)}</TableCell>\n            ) : typeof v === \"object\" ? (\n              <PactSingleJsonAsTable\n                json={v}\n                keyFormatter={keyFormatter}\n                valFormatter={valFormatter}\n                isNested={true}/>\n            ) : typeof v === \"function\" ? (\n              <TableCell>{valFormatter(v.toString())}</TableCell>\n            ) : (\n              <TableCell>{valFormatter(v)}</TableCell>\n            )}\n          </TableRow>\n          )\n        })}\n      </TableBody>\n    </React.Fragment>;\n\n  return (\n    isNested ? (\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    ) : (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    </TableContainer>\n    )\n)};\n\nexport const PactJsonListAsTable = (props) => {\n  const json = props.json || {};\n  const isNested = props.isNested || false;\n  const classes = isNested ? useNestedTableStyles : useToplevelTableStyles;\n  const header = props.header || [];\n  let keyOrder = [];\n  if (props.keyOrder) {\n    keyOrder = props.keyOrder;\n  } else if (Array.isArray(props.json)) {\n    if ( json.length > 0 ) {\n      keyOrder = Object.keys(json[0]);\n    }\n  }\n  const keyFormatter = props.keyFormatter ? props.keyFormatter : (k) => {return (k)};\n  const valFormatter = props.valFormatter ? props.valFormatter : (str) => <code>{renderPactValue(str)}</code>;\n\n  const internals = () =>\n    <React.Fragment>\n        <TableHead>\n          <TableRow>\n          {header.map((val) => (\n            <TableCell>{val}</TableCell>\n          ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {json.map(obj => (\n            <TableRow key={obj[keyOrder[0]]}>\n              { keyOrder.map(k => {\n                  const v = obj[k];\n                  return (\n                    <TableCell>\n                      {isRootPactValue(v) ? (\n                          valFormatter(v)\n                      ) : Array.isArray(v) ? (\n                          <PactJsonListAsTable\n                            json={v}\n                            keyFormatter={keyFormatter}\n                            valFormatter={valFormatter}\n                            isNested={true}/>\n                      ) : typeof v === \"object\" ? (\n                          <PactSingleJsonAsTable\n                            json={v}\n                            keyFormatter={keyFormatter}\n                            valFormatter={valFormatter}\n                            isNested={true}/>\n                      ) : typeof v === \"function\" ? (\n                          valFormatter(v.toString())\n                      ) : (\n                          valFormatter(v)\n                      )}\n                    </TableCell>\n                  )\n                }\n            )}\n            </TableRow>\n          ))}\n      </TableBody>\n    </React.Fragment>;\n\n  return (\n    isNested ? (\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    ) : (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    </TableContainer>\n    )\n)};\n\nconst MakeInputField = (props) => {\n  const {\n    type,\n    label,\n    options,\n    placeholder,\n    className,\n    onChange,\n    value,\n  } = props.inputField;\n\n  return ( type === 'select'\n    ? <TextField\n        id=\"outlined-multiline-static\"\n        select\n        required\n        fullWidth\n        className={className}\n        variant=\"outlined\"\n        label={label}\n        onChange={e => onChange(e.target.value)}\n        >\n        {options.map(k =>\n          <MenuItem key={k} value={k}>\n            {k}\n          </MenuItem>\n        )}\n      </TextField>\n    : type === 'textFieldSingle' ?\n      <TextField\n        required\n        fullWidth\n        value={value}\n        className={className}\n        variant='outlined'\n        label={label}\n        onChange={e => onChange(e.target.value)}\n      />\n    : type === 'textFieldMulti' ?\n      <TextField\n        required\n        fullWidth\n        label={label}\n        className={className}\n        multiline\n        rows={4}\n        variant=\"outlined\"\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n    : null\n  )\n\n};\n\nexport const MakeForm = (props) => {\n  const {\n    inputFields,\n    onSubmit,\n    tx, txRes, txStatus, setTxStatus\n  } = props;\n  const [wasSubmitted,setWasSubmitted] = useState(false);\n  useEffect(()=>setWasSubmitted(false),[inputFields]);\n  useEffect(()=>txStatus !== \"\" ? setWasSubmitted(true) : setWasSubmitted(wasSubmitted), [txStatus])\n\n  return (\n    <div>\n      <form\n        autoComplete=\"off\"\n        onSubmit={e => onSubmit(e)}>\n        {inputFields.map(f =>\n          <MakeInputField inputField={f}/>\n        )}\n        <CardActions>\n          {txStatus === 'pending'\n            ? null\n            : <Button variant=\"outlined\" color=\"default\" type=\"submit\" disabled={wasSubmitted}>\n                Submit\n              </Button>\n          }\n        </CardActions>\n      </form>\n      { txStatus === 'pending' ? <LinearProgress /> : null }\n      <PactTxStatus tx={tx} txRes={txRes} txStatus={txStatus} setTxStatus={setTxStatus}/>\n    </div>\n  )\n};\n","//basic React api imports\nimport React, { useState, useEffect } from \"react\";\nimport clsx from 'clsx';\n//Material Stuff\nimport {FormControl as Form} from '@material-ui/core';\nimport {\n  Button,\n  Box,\n  Typography,\n  IconButton,\n  Input,\n  FilledInput,\n  LinearProgress,\n  OutlinedInput,\n  InputLabel,\n  InputAdornment,\n  FormHelperText,\n  FormControl,\n  TextField,\n  MenuItem,\n  Card, CardHeader, CardContent, CardActions,\n  Grid,\n} from '@material-ui/core';\nimport {\n  makeStyles,\n} from '@material-ui/styles';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n//pact-lang-api for blockchain calls\nimport Pact from \"pact-lang-api\";\n//config file for blockchain calls\nimport { kadenaAPI } from \"./kadena-config.js\";\nimport {\n  PactJsonListAsTable,\n  useInputStyles,\n  MakeForm,\n } from \"./util.js\";\nimport { PactTxStatus } from \"./PactTxStatus.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: \"5px auto\",\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: \"10px auto\",\n  },\n}));\n\n\nconst sendGuardianCmd = async (\n  setTx,\n  setTxStatus,\n  setTxRes,\n  refresh,\n  user, cmd, envData={}, caps=[]\n) => {\n    try {\n      //creates transaction to send to wallet\n      const toSign = {\n          pactCode: cmd,\n          caps: (caps\n            ? caps :\n            Pact.lang.mkCap(\"Guadian Cap\"\n                           , \"Authenticates that you're a guardian\"\n                           , `${kadenaAPI.contractAddress}.GUARDIAN`\n                           , [user])),\n          gasLimit: kadenaAPI.meta.gasLimit,\n          chainId: kadenaAPI.meta.chainId,\n          ttl: kadenaAPI.meta.ttl,\n          sender: user,\n          envData: envData\n      }\n      console.log(\"toSign\", toSign)\n      //sends transaction to wallet to sign and awaits signed transaction\n      const signed = await Pact.wallet.sign(toSign)\n      console.log(\"signed\", signed)\n      setTx(signed)\n      //sends signed transaction to blockchain\n      const txReqKeys = await Pact.wallet.sendSigned(signed, kadenaAPI.meta.host)\n      console.log(\"txReqKeys\", txReqKeys)\n      //set html to wait for transaction response\n      //set state to wait for transaction response\n      setTxStatus('pending')\n      try {\n        //listens to response to transaction sent\n        //  note method will timeout in two minutes\n        //    for lower level implementations checkout out Pact.fetch.poll() in pact-lang-api\n        let retries = 8;\n        let res = {};\n        while (retries > 0) {\n          //sleep the polling\n          await new Promise(r => setTimeout(r, 15000));\n          res = await Pact.fetch.poll(txReqKeys, kadenaAPI.meta.host);\n          try {\n            if (res[signed.hash].result.status) {\n              retries = -1;\n            } else {\n              retries = retries - 1;\n            }\n          } catch(e) {\n              retries = retries - 1;\n          }\n        };\n        //keep transaction response in local state\n        setTxRes(res)\n        if (res[signed.hash].result.status === \"success\"){\n          console.log(\"tx status set to success\");\n          //set state for transaction success\n          setTxStatus('success');\n          refresh();\n        } else if (retries === 0) {\n          console.log(\"tx status set to timeout\");\n          setTxStatus('timeout');\n          refresh();\n        } else {\n          console.log(\"tx status set to failure\");\n          //set state for transaction failure\n          setTxStatus('failure');\n        }\n      } catch(e) {\n        // TODO: use break in the while loop to capture if timeout occured\n        console.log(\"tx api failure\",e);\n        setTxRes(e);\n        setTxStatus('failure');\n      }\n    } catch(e) {\n      console.log(\"tx status set to validation error\",e);\n      //set state for transaction construction error\n      setTxStatus('validation-error');\n    }\n};\n\nexport const RenderGuardians = (props) => {\n  return (\n    <PactJsonListAsTable\n      header={[\"Guardian\",\"Committed KDA\",\"Approved Hash\",\"Approval Date\",\"Guard\"]}\n      keyOrder={[\"k\",\"committed-kda\",\"approved-hash\",\"approved-date\",\"guard\"]}\n      json={props.guardians}\n    />\n)};\n\nexport const RegisterAmbassador = (props) => {\n  const {\n    refresh,\n    guardians,\n  } = props;\n  const [grd, setGrd] = useState( \"\" );\n  const [newAmb, setNewAmb] = useState( \"\" );\n  const [ambGrd, setAmbGrd] = useState( \"\" );\n  const [txStatus, setTxStatus] = useState(\"\");\n  const [tx, setTx] = useState( {} );\n  const [txRes, setTxRes] = useState( {} );\n  const [wasSubmitted,setWasSubmitted] = useState(false);\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setGrd,\n      options:guardians.map((g)=>g['k']),\n    },\n    {\n      type:'textFieldSingle',\n      label:'Ambassador Account Name',\n      className:classes.formControl,\n      value:newAmb,\n      onChange:setNewAmb\n    },\n    {\n      type:'textFieldMulti',\n      label:'Ambassador Account Guard',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:ambGrd,\n      onChange:setAmbGrd,\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n          ,grd\n          ,`(${kadenaAPI.contractAddress}.register-ambassador \"${grd}\" \"${newAmb}\" (read-keyset 'ks))`\n          ,{ks: JSON.parse(ambGrd)}\n        );\n      } catch (e) {\n        console.log(\"Ambassador Registration Submit Error\",typeof e, e, grd,newAmb,ambGrd);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const DeactivateAmbassador = (props) => {\n  const {refresh} = props;\n  const [grd, setGrd] = useState( \"\" );\n  const [amb, setAmb] = useState( \"\" );\n  const [txStatus, setTxStatus] = useState(\"\");\n  const [tx, setTx] = useState( {} );\n  const [txRes, setTxRes] = useState( {} );\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      // console.log(grd,newAmb);\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n        ,grd\n        ,`(${kadenaAPI.contractAddress}.deactivate-ambassador \"${grd}\" \"${amb}\")`\n        )\n      } catch (e) {\n        console.log(\"deactivate-ambassador Submit Error\",typeof e, e, grd,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n      };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setGrd,\n      options:props.guardians.map((g)=>g['k']),\n    },\n    {\n      type:'select',\n      label:'Select Ambassador',\n      className:classes.formControl,\n      onChange:setAmb,\n      options:props.ambassadors.map((g)=>g['k']),\n    },\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nexport const ReactivateAmbassador = (props) => {\n  const {\n    refresh,\n    guardians,\n    ambassadors,\n  } = props;\n  const [grd, setGrd] = useState( \"\" );\n  const [amb, setAmb] = useState( \"\" );\n  const [txStatus, setTxStatus] = useState(\"\");\n  const [tx, setTx] = useState( {} );\n  const [txRes, setTxRes] = useState( {} );\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      // console.log(grd,newAmb);\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n        ,grd\n        ,`(${kadenaAPI.contractAddress}.reactivate-ambassador \"${grd}\" \"${amb}\")`\n        )\n      } catch (e) {\n        console.log(\"reactivate-ambassador Submit Error\",typeof e, e, grd,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n    };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setGrd,\n      options:props.guardians.map((g)=>g['k']),\n    },\n    {\n      type:'select',\n      label:'Select Ambassador',\n      className:classes.formControl,\n      onChange:setAmb,\n      options:props.ambassadors.map((g)=>g['k']),\n    },\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n}\n\nexport const RotateGuardian = (props) => {\n  const {\n    refresh,\n    guardians,\n  } = props;\n  const [grd, setGrd] = useState( \"\" );\n  const [ks, setKs] = useState( \"\" );\n  const [txStatus, setTxStatus] = useState( \"\" );\n  const [tx, setTx] = useState( {} );\n  const [txRes, setTxRes] = useState( {} );\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      // console.log(grd,newAmb);\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n        ,grd\n        ,`(${kadenaAPI.contractAddress}.rotate-guardian \"${grd}\" (read-keyset 'ks))`\n        ,{ks: JSON.parse(ks)})\n      } catch (e) {\n        console.log(\"rotate-guardian Submit Error\",typeof e, e, grd,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n    };\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setGrd,\n      options:guardians.map((g)=>g['k']),\n    },{\n      type:'textFieldMulti',\n      label:'Guardian Account Guard',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:ks,\n      onChange:setKs,\n    }\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nexport const ProposeDaoUpgrade = (props) => {\n  const {\n    refresh,\n    guardians,\n  } = props;\n  const [acct, setAcct] = useState( \"\" );\n  const [hsh, setHsh] = useState( \"\" );\n  const [txStatus, setTxStatus] = useState(\"\");\n  const [tx, setTx] = useState( {} );\n  const [txRes, setTxRes] = useState( {} );\n  const [wasSubmitted,setWasSubmitted] = useState(false);\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setAcct,\n      options:guardians.map((g)=>g['k']),\n    },\n    {\n      type:'textFieldSingle',\n      label:'Proposed Upgrade Hash',\n      className:classes.formControl,\n      value:hsh,\n      onChange:setHsh\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n          ,acct\n          ,`(${kadenaAPI.contractAddress}.propose-dao-upgrade \"${acct}\" \"${hsh}\")`\n        );\n      } catch (e) {\n        console.log(\"propose-dao-upgrade Submit Error\",typeof e, e, acct,hsh,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const GuardianApproveHash = (props) => {\n  const {\n    refresh,\n    guardians,\n  } = props;\n  const [acct, setAcct] = useState( \"\" );\n  const [hsh, setHsh] = useState( \"\" );\n  const [txStatus, setTxStatus] = useState(\"\");\n  const [tx, setTx] = useState( {} );\n  const [txRes, setTxRes] = useState( {} );\n  const [wasSubmitted,setWasSubmitted] = useState(false);\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setAcct,\n      options:guardians.map((g)=>g['k']),\n    },\n    {\n      type:'select',\n      label:'Proposed Upgrade Hash',\n      className:classes.formControl,\n      value:setHsh,\n      options:guardians.map((g)=>g['approved-hash']),\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n          ,acct\n          ,`(${kadenaAPI.contractAddress}.guardian-approve-hash \"${acct}\" \"${hsh}\")`\n        );\n      } catch (e) {\n        console.log(\"guardian-approve-hash Submit Error\",typeof e, e, acct,hsh,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n","//basic React api imports\nimport React, { useState, useEffect } from \"react\";\nimport clsx from 'clsx';\n//Material Stuff\nimport {FormControl as Form} from '@material-ui/core';\nimport {\n  Button,\n  Box,\n  Typography,\n  IconButton,\n  Input,\n  FilledInput,\n  LinearProgress,\n  OutlinedInput,\n  InputLabel,\n  InputAdornment,\n  FormHelperText,\n  FormControl,\n  TextField,\n  MenuItem,\n  Card, CardHeader, CardContent, CardActions,\n  Grid,\n} from '@material-ui/core';\nimport {\n  makeStyles,\n} from '@material-ui/styles';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n//pact-lang-api for blockchain calls\nimport Pact from \"pact-lang-api\";\n//config file for blockchain calls\nimport { kadenaAPI } from \"./kadena-config.js\";\nimport {\n  PactJsonListAsTable,\n  useInputStyles,\n  MakeForm,\n } from \"./util.js\";\nimport { PactTxStatus } from \"./PactTxStatus.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: \"5px auto\",\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: \"10px auto\",\n  },\n}));\n\nexport const RenderAmbassadors = (props) => {\n  return (\n    <PactJsonListAsTable\n      header={[\"Ambassador\",\"Active\",\"Voted to Freeze\",\"Guard\"]}\n      keyOrder={[\"k\",\"active\",\"voted-to-freeze\",\"guard\"]}\n      json={props.ambassadors}\n    />\n)};\n\nconst sendAmbassadorCmd = async (\n  setTx,\n  setTxStatus,\n  setTxRes,\n  refresh,\n  user, cmd, envData={}\n) => {\n    try {\n      //creates transaction to send to wallet\n      const toSign = {\n          pactCode: cmd,\n          caps: Pact.lang.mkCap(\"Ambassador Cap\"\n                           , \"Authenticates that you're an ambassador\"\n                           , `${kadenaAPI.contractAddress}.AMBASSADOR`\n                           , [user]),\n          gasLimit: kadenaAPI.meta.gasLimit,\n          chainId: kadenaAPI.meta.chainId,\n          ttl: kadenaAPI.meta.ttl,\n          sender: user,\n          envData: envData\n      }\n      console.log(\"toSign\", toSign)\n      //sends transaction to wallet to sign and awaits signed transaction\n      const signed = await Pact.wallet.sign(toSign)\n      console.log(\"signed\", signed)\n      setTx(signed)\n      //sends signed transaction to blockchain\n      const txReqKeys = await Pact.wallet.sendSigned(signed, kadenaAPI.meta.host)\n      console.log(\"txReqKeys\", txReqKeys)\n      //set html to wait for transaction response\n      //set state to wait for transaction response\n      setTxStatus('pending')\n      try {\n        //listens to response to transaction sent\n        //  note method will timeout in two minutes\n        //    for lower level implementations checkout out Pact.fetch.poll() in pact-lang-api\n        let retries = 8;\n        let res = {};\n        while (retries > 0) {\n          //sleep the polling\n          await new Promise(r => setTimeout(r, 15000));\n          res = await Pact.fetch.poll(txReqKeys, kadenaAPI.meta.host);\n          try {\n            if (res[signed.hash].result.status) {\n              retries = -1;\n            } else {\n              retries = retries - 1;\n            }\n          } catch(e) {\n              retries = retries - 1;\n          }\n        };\n        //keep transaction response in local state\n        setTxRes(res)\n        if (res[signed.hash].result.status === \"success\"){\n          console.log(\"tx status set to success\");\n          //set state for transaction success\n          setTxStatus('success');\n          refresh();\n        } else if (retries === 0) {\n          console.log(\"tx status set to timeout\");\n          setTxStatus('timeout');\n          refresh();\n        } else {\n          console.log(\"tx status set to failure\");\n          //set state for transaction failure\n          setTxStatus('failure');\n        }\n      } catch(e) {\n        // TODO: use break in the while loop to capture if timeout occured\n        console.log(\"tx api failure\",e);\n        setTxRes(e);\n        setTxStatus('failure');\n      }\n    } catch(e) {\n      console.log(\"tx status set to validation error\",e);\n      //set state for transaction construction error\n      setTxStatus('validation-error');\n    }\n};\n\nexport const VoteToFreeze = (props) => {\n  const {\n    refresh,\n    ambassadors,\n  } = props;\n  const [amb, setAmb] = useState( \"\" );\n  const [txStatus, setTxStatus] = useState(\"\");\n  const [tx, setTx] = useState( {} );\n  const [txRes, setTxRes] = useState( {} );\n  const [wasSubmitted,setWasSubmitted] = useState(false);\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Ambassador',\n      className:classes.formControl,\n      onChange:setAmb,\n      options:ambassadors.map((g)=>g['k']),\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendAmbassadorCmd(setTx,setTxStatus,setTxRes,refresh\n          ,amb\n          ,`(${kadenaAPI.contractAddress}.vote-to-freeze \"${amb}\")`\n        );\n      } catch (e) {\n        console.log(\"vote to freeze Submit Error\",typeof e, e, amb);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const Freeze = (props) => {\n  const {\n    refresh,\n    ambassadors,\n  } = props;\n  const [amb, setAmb] = useState( \"\" );\n  const [txStatus, setTxStatus] = useState(\"\");\n  const [tx, setTx] = useState( {} );\n  const [txRes, setTxRes] = useState( {} );\n  const [wasSubmitted,setWasSubmitted] = useState(false);\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Ambassador',\n      className:classes.formControl,\n      onChange:setAmb,\n      options:ambassadors.map((g)=>g['k']),\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendAmbassadorCmd(setTx,setTxStatus,setTxRes,refresh\n          ,amb\n          ,`(${kadenaAPI.contractAddress}.freeze \"${amb}\")`\n        );\n      } catch (e) {\n        console.log(\"freeze Submit Error\",typeof e, e, amb);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n","//basic React api imports\nimport React from \"react\";\nimport { kadenaAPI, keyFormatter } from \"./kadena-config.js\";\nimport { PactSingleJsonAsTable } from \"./util.js\";\n\nexport const KadenaConfig = () => {\n  return (\n    <PactSingleJsonAsTable\n      json={kadenaAPI}\n      keyFormatter={keyFormatter}\n      />\n  )\n};\n","//basic React api imports\nimport React from \"react\";\n//config file for blockchain calls\nimport Pact from \"pact-lang-api\";\nimport { kadenaAPI } from \"./kadena-config.js\";\nimport { PactSingleJsonAsTable, dashStyleNames2Text } from \"./util.js\";\n\nexport const getContractState = async (cmd) => {\n  //calling get-all() function from smart contract\n    const res = await Pact.fetch.local(\n      {\n        pactCode: `(${kadenaAPI.contractAddress}.${cmd})`,\n        //pact-lang-api function to construct transaction meta data\n        meta: Pact.lang.mkMeta(\n          kadenaAPI.meta.sender,\n          kadenaAPI.meta.chainId,\n          kadenaAPI.meta.gasPrice,\n          kadenaAPI.meta.gasLimit,\n          kadenaAPI.meta.creationTime(),\n          kadenaAPI.meta.ttl\n        ),\n      },\n      kadenaAPI.meta.host\n    );\n    const all = res.result.data;\n    //sorts memories by least recent\n    console.log(\"local query data\",all);\n    return(all);\n};\n\nexport const RenderInitState = (props) => {\n  return (\n   <PactSingleJsonAsTable\n    json={props.initState}\n    header={[\"\",\"Status\"]}\n    keyFormatter={dashStyleNames2Text}\n    />\n  )\n};\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  AppBar,\n  Box,\n  CssBaseline,\n  Collapse,\n  Divider,\n  Drawer,\n  Hidden,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst ListItemLink = (props) => {\n  const { icon, primary, to, subList } = props;\n  const hasSubList = subList && Array.isArray(subList) ;\n  const [open, setOpen] = React.useState(false);\n\n  const renderLink = React.useMemo(\n    () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n    [to],\n  );\n\n  return (\n    <React.Fragment>\n      <li>\n        <ListItem button component={renderLink}>\n          {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n          <ListItemText primary={primary} />\n          {hasSubList ? (\n            open ? <ExpandLess onClick={()=>setOpen(!open)} />\n                 : <ExpandMore onClick={()=>setOpen(!open)} />\n            ) : null}\n        </ListItem>\n      </li>\n        {hasSubList ?\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {subList.map(entry =>\n                <ListItemLink\n                  icon={entry.icon}\n                  primary={entry.primary}\n                  to={entry.to}\n                  subList={entry.subList}/>\n              )}\n            </List>\n          </Collapse>\n        : null }\n    </React.Fragment>\n  );\n};\n\nexport const NavDrawer = (props) => {\n  const { window, entriesList, title } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      {entriesList.map(entries =>\n        <React.Fragment>\n          <Divider />\n          <List>\n            {entries.map(entry =>\n              <ListItemLink\n                icon={entry.icon}\n                primary={entry.primary}\n                to={entry.to}\n                subList={entry.subList}/>\n            )}\n          </List>\n        </React.Fragment>\n       )}\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            {props.title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {props.children}\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Tab,\n  Tabs,\n  Typography,\n  Box,\n} from '@material-ui/core';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport const ScrollableTabs = (props) => {\n  const { tabEntries } = props;\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          {tabEntries.map((entry,idx)=>\n            <Tab label={entry.label} {...a11yProps(idx)}/>\n          )}\n        </Tabs>\n      </AppBar>\n      {tabEntries.map((entry,idx)=>\n        <TabPanel value={value} index={idx}>\n          {entry.component}\n        </TabPanel>\n      )}\n    </div>\n  );\n}\n","//basic React api imports\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n } from '@material-ui/core/styles';\nimport NoSsr from '@material-ui/core/NoSsr';\n//semantic ui for styling\nimport {\n  Container,\n  Card, CardHeader, CardContent, CardActions,\n  Typography,\n} from '@material-ui/core';\n//config file for blockchain calls\nimport  {\n  RenderGuardians,\n  RegisterAmbassador,\n  DeactivateAmbassador,\n  ReactivateAmbassador,\n  RotateGuardian,\n  ProposeDaoUpgrade,\n  GuardianApproveHash,\n} from \"./Guardians.js\";\nimport {\n  RenderAmbassadors,\n  VoteToFreeze,\n  Freeze,\n} from \"./Ambassadors.js\";\nimport { KadenaConfig } from \"./KadenaConfig.js\"\nimport { RenderInitState, getContractState } from \"./InitState.js\";\nimport { NavDrawer } from \"./NavDrawer.js\";\nimport { ScrollableTabs } from \"./ScrollableTabs.js\";\n\n\nconst App = () => {\n  const theme = React.useMemo(\n      () =>\n        createMuiTheme({\n          palette: {\n            primary: {\n              light: '#cb4584',\n              main: '#960057',\n              dark: '#cb4584',\n              contrastText: '#fff',\n            },\n            secondary: {\n              light: '#ffffff',\n              main: '#e3e8ed',\n              dark: '#b1b6bb',\n              contrastText: '#000',\n            },\n          },\n        }),\n      [],\n    );\n\n  const [initState, setInitState] = useState( {} );\n  const [guardians, setGuardians] = useState( [] );\n  const [ambassadors, setAmbassadors] = useState( [] );\n\n  const getInitState = async () => {\n    const res = await getContractState(\"view-state\");\n    setInitState(res);\n  };\n\n  const getAmbassadors = async () => {\n    const res = await getContractState(\"view-ambassadors\");\n    setAmbassadors(res);\n  };\n\n  const getGuardians = async () => {\n    const res = await getContractState(\"view-guardians\");\n    setGuardians(res);\n  };\n\n  useEffect(() => {\n    getGuardians();\n    getInitState();\n    getAmbassadors();\n    console.log('useEffect []',guardians,ambassadors)\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <NoSsr>\n        <CssBaseline/>\n        <Router basename={process.env.PUBLIC_URL}>\n          <NavDrawer title=\"dao.init\"\n            entriesList={[\n              [{\n                primary:\"Config\",\n                to:\"/config\"\n              },{\n                primary:\"Init State\",\n                to:\"/initState\"\n              },{\n                primary:\"Ambassadors\",\n                to:\"/ambassadors\"\n              },{\n                primary:\"Guardians\",\n                to:\"/guardians\",\n              }\n            ]\n          ]}>\n          <Container>\n            <Switch>\n              <Route path=\"/config\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Contract and UI Configuration\"/>\n                  <CardContent>\n                    <KadenaConfig/>\n                  </CardContent>\n                </Card>\n              }/>\n            <Route path=\"/initState\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Contract State\"/>\n                  <CardContent>\n                    <RenderInitState initState={initState}/>\n                  </CardContent>\n                </Card>\n              }/>\n            <Route path=\"/guardians\" component={ () =>\n              <Card>\n                <CardHeader title=\"Guardians\"/>\n                <CardContent>\n                  <RenderGuardians guardians={guardians}/>\n                  <ScrollableTabs\n                    tabEntries={[\n                      {\n                        label:\"Rotate Guardian\",\n                        component:\n                          <DeactivateAmbassador\n                            guardians={guardians}\n                            ambassadors={ambassadors}\n                            refresh={() => getAmbassadors()}/>\n                        },{\n                          label:\"Propose DAO Upgrade\",\n                          component:\n                            <ProposeDaoUpgrade\n                              guardians={guardians}\n                              refresh={() => getAmbassadors()}/>\n                        },{\n                          label:\"Approve DAO Upgrade\",\n                          component:\n                            <GuardianApproveHash\n                              guardians={guardians}\n                              refresh={() => getAmbassadors()}/>\n                        }\n                    ]}/>\n                </CardContent>\n              </Card>\n              }/>\n            <Route path=\"/ambassadors\" component={ () =>\n              <Card>\n                <CardHeader title=\"Ambassadors\"/>\n                <CardContent>\n                  <RenderAmbassadors ambassadors={ambassadors}/>\n                  <ScrollableTabs\n                    tabEntries={[\n                      {\n                        label:\"Register Ambassador\",\n                        component:\n                          <RegisterAmbassador\n                            guardians={guardians}\n                            refresh={() => getAmbassadors()}/>\n                      },{\n                        label:\"Deactivate Ambassador\",\n                        component:\n                          <DeactivateAmbassador\n                            guardians={guardians}\n                            ambassadors={ambassadors}\n                            refresh={() => getAmbassadors()}/>\n                      },{\n                        label:\"Reactivate Ambassador\",\n                        component:\n                          <ReactivateAmbassador\n                            guardians={guardians}\n                            ambassadors={ambassadors}\n                            refresh={() => getAmbassadors()}/>\n                      },{\n                        label:\"Vote to Freeze\",\n                        component:\n                          <VoteToFreeze\n                            ambassadors={ambassadors}\n                            refresh={() => getAmbassadors()}/>\n                      },{\n                        label:\"Freeze\",\n                        component:\n                          <Freeze\n                            ambassadors={ambassadors}\n                            refresh={() => getAmbassadors()}/>\n                      }\n                    ]}/>\n                </CardContent>\n              </Card>\n              }/>\n            </Switch>\n          </Container>\n          </NavDrawer>\n        </Router>\n      </NoSsr>\n    </ThemeProvider>\n  );\n};\n\n      // <ReactivateAmbassador\n      //   guardians={guardians}\n      //   ambassadors={ambassadors}\n      //   refresh={() => getAmbassadors()}/>\n      // <DeactivateAmbassador\n      //   guardians={guardians}\n      //   ambassadors={ambassadors}\n      //   refresh={() => getAmbassadors()}/>\n      // <RotateGuardian\n      //   guardians={guardians}\n      //   refresh={() => getGuardians()}/>\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/*\n\nBLOCKCHAIN CONFIGURATION FILE\n\n  initalize all data for pact-lang-api kadena blockchain calls\n\n  modify this file to interact with different\n    chains, networks, contracts\n\n  documentation:\n    https://pact-language.readthedocs.io/en/stable/\n\n  pact tutorials:\n    https://pactlang.org/\n\n*/\n\n//chain that contract lives on\nvar chainId = \"0\";\n\n//id of network version\nvar networkId = \"testnet04\";\n\n//network node\nvar node = \"api.testnet.chainweb.com\";\n\n//unique contract name\nvar contractName = \"init\";\n\n//unique gas station contract name\nvar gasStationName = \"memory-wall-gas-station\";\n\n//namespace that precedes contract name\nvar namespace = \"free\";\n\n//api host to send requests\nvar host = `https://${node}/chainweb/0.0/${networkId}/chain/${chainId}/pact`;\n\n//creation time for request\nvar creationTime = () => Math.round(new Date().getTime() / 1000) - 15;\n\n//JSON with all necessary blockchain call data\nvar kadenaAPI = {\n  contractName: contractName,\n  gasStationName: gasStationName,\n  namespace: namespace,\n  contractAddress: `${namespace}.${contractName}`,\n  gasStationAddress: `${namespace}.${gasStationName}`,\n  explorerURL: `https://explorer.chainweb.com/${networkId.slice(0, -2)}`,\n  meta: {\n    networkId: networkId,\n    chainId: chainId,\n    host: host,\n    creationTime: creationTime,\n    //gas price at lowest possible denomination\n    gasPrice: 0.00000000001,\n    //high gas limit for tx\n    gasLimit: 10000,\n    //time a tx lives in mempool since creationTime\n    ttl: 28800,\n    //sender === gas payer of the transaction\n    //  set to our gas station account defined in memory-wall-gas-station.pact\n    sender: \"mw-free-gas\",\n    //nonce here doesnt matter since the tx will never have the same hash\n    nonce: \"some nonce that doesnt matter\",\n  },\n};\n\nconst keyFormatter = (str) =>\n  str.replace(new RegExp(\"[A-Z]+\",\"gm\"),\" $&\").replace(new RegExp(\"^[a-z]\",\"gm\"),k => k.toUpperCase());\n\nmodule.exports = { kadenaAPI: kadenaAPI, keyFormatter: keyFormatter }\n"],"sourceRoot":""}