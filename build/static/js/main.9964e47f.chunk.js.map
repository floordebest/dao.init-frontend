{"version":3,"sources":["kadena_r_rev_3_whi_lor.png","NavDrawer.js","ScrollableTabs.js","Markdown.js","util.js","PactTxStatus.js","Guardians.js","Ambassadors.js","InitConfig.js","InitState.js","Forum/ForumConfig.js","Forum/Mjolnir.js","Forum/Members.js","Forum/ModLog.js","Forum/Topics.js","App.js","serviceWorker.js","index.js","kadena-config.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","zIndex","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","nested","paddingLeft","logo","height","ListItemLink","props","icon","primary","to","subList","hasSubList","Array","isArray","React","useState","open","setOpen","classes","renderLink","useMemo","forwardRef","itemProps","ref","Fragment","ListItem","button","component","ListItemIcon","ListItemText","onClick","Collapse","in","timeout","unmountOnExit","List","disablePadding","className","dense","map","entry","NavDrawer","window","entriesList","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","entries","Divider","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","color","aria-label","edge","src","alt","Hidden","smUp","implementation","Drawer","variant","anchor","direction","onClose","paper","ModalProps","keepMounted","xsDown","children","TabPanel","value","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","backgroundColor","palette","background","marginTop","ScrollableTabs","tabEntries","tabIdx","setValue","Tabs","onChange","event","newValue","indicatorColor","textColor","scrollButtons","idx","Tab","label","MDEditor","selectedTab","setSelectedTab","saveImage","data","a","alert","onTabChange","generateMarkdownPreview","markdown","res","Promise","resolve","remarkPlugins","gfm","console","log","childProps","writeButton","tabIndex","paste","dashStyleNames2Text","flexWrap","margin","withoutLabel","textField","str","split","k","replace","RegExp","toUpperCase","join","isRootPactValue","val","renderPactValue","toLocaleString","JSON","stringify","toString","useToplevelTableStyles","table","minWidth","useNestedTableStyles","borderBottom","PactSingleJsonAsTable","json","isNested","header","keyFormatter","valFormatter","internals","TableHead","TableRow","TableCell","TableBody","Object","v","key","Table","size","TableContainer","Paper","PactJsonListAsTable","_","keyOrder","length","keys","obj","MakeInputField","inputField","type","options","placeholder","TextField","select","required","fullWidth","e","target","MenuItem","multiline","rows","Checkbox","checked","MakeForm","inputFields","onSubmit","tx","txRes","txStatus","setTxStatus","wasSubmitted","setWasSubmitted","useEffect","autoComplete","f","CardActions","Button","disabled","LinearProgress","PactTxStatus","modalOpen","setModalOpen","severity","Alert","action","fontSize","AlertTitle","Grid","justify","alignItems","item","orientation","flexItem","href","daoAPI","explorerURL","hash","Modal","Container","maxWidth","formControl","selectEmpty","sendGuardianCmd","setTx","setTxRes","refresh","user","cmd","envData","caps","toSign","pactCode","Pact","lang","mkCap","contractAddress","gasLimit","meta","chainId","ttl","sender","wallet","sign","signed","Error","sendSigned","host","txReqKeys","retries","r","setTimeout","fetch","poll","result","status","RenderGuardians","guardians","RegisterAmbassador","grd","setGrd","newAmb","setNewAmb","ambGrd","setAmbGrd","pactTxStatus","g","evt","preventDefault","ks","parse","DeactivateAmbassador","amb","setAmb","ambassadors","ReactivateAmbassador","RotateGuardian","voteKs","setVoteKs","ProposeDaoUpgrade","acct","setAcct","hsh","setHsh","GuardianApproveHash","RegisterGuardian","constants","RenderAmbassadors","sendAmbassadorCmd","VoteToFreeze","Freeze","RotateAmbassador","setKs","InitConfig","getContractState","local","mkMeta","gasPrice","creationTime","all","RenderInitState","initState","getForumContractState","forumAPI","RenderForumState","forumState","ForumConfig","sendMjolnirCmd","RotateMjolnir","newGrd","setNewGrd","DisableModerator","moderators","mod","setMod","EnableModerator","MjolnirWriteMember","members","setUser","newKs","setNewKs","isMod","setIsMod","name","concat","m","MjolnirActionForms","getForumState","getMembers","RenderMembers","RenderModerators","sendMemberCmd","BecomeModerator","BecomeMember","ModeratorActionForms","MemberActionForms","RenderModLog","modLog","RenderTopics","topics","PostTopic","author","setAuthor","headline","setHeadline","setBody","TopicActionForms","getTopics","App","createMuiTheme","light","main","dark","contrastText","secondary","setInitState","setGuardians","setAmbassadors","ambTabIdx","grdTabIdx","getInitState","getAmbassadors","getGuardians","setForumState","setMembers","setModerators","setModLog","setTopics","setComments","mjolnirTabIdx","memberTabIdx","moderatorTabIdx","topicTabIdx","filter","moderator","getModLog","getComments","ThemeProvider","NoSsr","basename","process","path","Card","CardHeader","title","CardContent","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","gasStationName","Math","round","Date","getTime","contractName","namespace","gasStationAddress","slice","networkId","nonce"],"mappings":"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","file":"static/js/main.9964e47f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kadena_r_rev_3_whi_lor.184cc2aa.png\";","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  AppBar,\n  Collapse,\n  CssBaseline,\n  Divider,\n  Drawer,\n  Hidden,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SendIcon from '@material-ui/icons/Send';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport logo from \"./kadena_r_rev_3_whi_lor.png\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  logo: {\n    height: \"60px\",\n  }\n}));\n\nconst ListItemLink = (props) => {\n  const { icon, primary, to, subList } = props;\n  const hasSubList = subList && Array.isArray(subList) ;\n  const [open, setOpen] = React.useState(true);\n  const classes = useStyles();\n\n  const renderLink = React.useMemo(\n    () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n    [to],\n  );\n\n  return (\n    <React.Fragment>\n      <li>\n        <ListItem button component={renderLink}>\n          {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n          <ListItemText primary={primary} />\n          {hasSubList ? (\n            open ? <ExpandLess onClick={()=>setOpen(!open)} />\n                 : <ExpandMore onClick={()=>setOpen(!open)} />\n            ) : null}\n        </ListItem>\n      </li>\n        {hasSubList ?\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding className={classes.nested} dense>\n              {subList.map(entry =>\n                <ListItemLink\n                  icon={entry.icon}\n                  primary={entry.primary}\n                  to={entry.to}\n                  subList={entry.subList}\n                  />\n              )}\n            </List>\n          </Collapse>\n        : null }\n    </React.Fragment>\n  );\n};\n\nexport const NavDrawer = (props) => {\n  const { window, entriesList } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      {entriesList.map(entries =>\n        <React.Fragment>\n          <Divider />\n          <List>\n            {entries.map(entry =>\n              <ListItemLink\n                icon={entry.icon}\n                primary={entry.primary}\n                to={entry.to}\n                subList={entry.subList}/>\n            )}\n          </List>\n        </React.Fragment>\n       )}\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <img src={logo} alt=\"logo\" className={classes.logo}/>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {props.children}\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Tab,\n  Tabs,\n  Typography,\n  Box,\n} from '@material-ui/core';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport const ScrollableTabs = (props) => {\n  const { tabEntries } = props;\n  const classes = useStyles();\n  const [value, setValue] = props.tabIdx;\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          {tabEntries.map((entry,idx)=>\n            <Tab label={entry.label} {...a11yProps(idx)}/>\n          )}\n        </Tabs>\n      </AppBar>\n      {tabEntries.map((entry,idx)=>\n        <TabPanel value={value} index={idx}>\n          {entry.component}\n        </TabPanel>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport ReactMde from \"react-mde\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from 'remark-gfm';\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\n\nimport {\n  Paper,\n} from '@material-ui/core';\n\nexport const MDEditor = (props) => {\n  const {value, onChange} = props;\n  const [selectedTab, setSelectedTab] = useState(\"write\");\n\n  const saveImage = async function (data) {\n    // Promise that waits for \"time\" milliseconds\n    alert(\"No attachments!\");\n    // returns true meaning that the save was successful\n    return \"No Attachments\";\n  };\n\n  return (\n      <ReactMde\n        value={value}\n        onChange={onChange}\n        selectedTab={selectedTab}\n        onTabChange={setSelectedTab}\n        generateMarkdownPreview={(markdown) => {\n          const res = Promise.resolve(<ReactMarkdown remarkPlugins={[gfm]} children={markdown}/>);\n          console.log(`react-mde-preview=${res}`, res);\n          return res;\n        }}\n        childProps={{\n          writeButton: {\n            tabIndex: -1\n          }\n        }}\n        paste={{\n          saveImage: saveImage\n        }}\n      />\n  );\n}\n\nexport const RenderMD = (props) => {\n  console.log(`renderMD mdText=${props.mdText}`);\n\n  return  <Paper>\n            <ReactMarkdown remarkPlugins={[gfm]} children={props.mdText}/>\n          </Paper>\n}\n","// For util functions\nimport React, {useState, useEffect} from \"react\";\n//make JS less terrible\nimport _ from \"lodash\";\nimport { makeStyles } from '@material-ui/core/styles';\n//Table Stuff\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Checkbox,\n} from '@material-ui/core';\nimport {\n  Button,\n  LinearProgress,\n  TextField,\n  MenuItem,\n  CardActions,\n} from '@material-ui/core';\n//pact-lang-api for blockchain calls\n//config file for blockchain calls\nimport { PactTxStatus } from \"./PactTxStatus.js\";\nimport { MDEditor } from \"./Markdown\";\n\nexport const useInputStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '25ch',\n  },\n}));\n\n//config file for blockchain calls\n\nexport const dashStyleNames2Text = str => str.split(\"-\").map(k=>k.replace(new RegExp(\"^.\",\"gm\"),a=>a.toUpperCase())).join(' ');\n\nconst isRootPactValue = (val) => {\n  if (val && typeof val === 'object' ) {\n    if ('timep' in val || 'int' in val || 'decimal' in val || 'time' in val ) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return true;\n  }\n};\n\nexport const isPactKeyset = (val) => {\n  if (val && typeof val === 'object' ) {\n    if (Object.keys(val).length === 2 &&'pred' in val && 'keys' in val) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n};\n\n\nexport const renderPactValue = (val) => {\n  if (val && typeof val === 'object') {\n    if ('time' in val) {\n      return val['time'];\n    } else if ('timep' in val) {\n      return val['timep'];\n    } else if ('int' in val) {\n      return typeof val['int'] === 'string' ? val['int'] : val['int'].toLocaleString();\n    } else if ('decimal' in val) {\n      return typeof val['decimal'] === 'string' ? val['decimal'] : val['decimal'].toLocaleString();\n    } else if ('pred' in val && 'keys' in val) {\n      return JSON.stringify(val);\n    } else {\n      return JSON.stringify(val);\n    }\n  } else if (typeof val === 'boolean') {\n    return val.toString();\n  } else if (typeof val === 'string') {\n    return val;\n  } else if (typeof val === 'number'){\n    return val.toLocaleString()\n  } else {\n    return JSON.stringify(val);\n  }\n};\n\nconst useToplevelTableStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst useNestedTableStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nexport const PactSingleJsonAsTable = (props) => {\n  const json = props.json || {};\n  const isNested = props.isNested || false;\n  const classes = isNested ? useNestedTableStyles : useToplevelTableStyles;\n  const header = props.header || [];\n  const keyFormatter = props.keyFormatter ? props.keyFormatter : (k) => {return (k)};\n  const valFormatter = props.valFormatter ? props.valFormatter : (str) => <code>{renderPactValue(str)}</code>;\n  const internals = () =>\n    <React.Fragment>\n      <TableHead>\n        <TableRow>\n        {header.map((val) => {\n          return <TableCell>{val}</TableCell>;\n        })}\n        </TableRow>\n      </TableHead>\n\n      <TableBody>\n        {Object.entries(json).map(([k,v]) => {\n          return (\n          <TableRow key={k}>\n            { Array.isArray(json) === false ? (\n              <TableCell>{keyFormatter(k)}</TableCell>\n            ) : (\n              <React.Fragment></React.Fragment>\n            )}\n            { isRootPactValue(v) ? (\n              <TableCell>{valFormatter(v)}</TableCell>\n            ) : typeof v === \"object\" ? (\n              <PactSingleJsonAsTable\n                json={v}\n                keyFormatter={keyFormatter}\n                valFormatter={valFormatter}\n                isNested={true}/>\n            ) : typeof v === \"function\" ? (\n              <TableCell>{valFormatter(v.toString())}</TableCell>\n            ) : (\n              <TableCell>{valFormatter(v)}</TableCell>\n            )}\n          </TableRow>\n          )\n        })}\n      </TableBody>\n    </React.Fragment>;\n\n  return (\n    isNested ? (\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    ) : (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    </TableContainer>\n    )\n)};\n\nexport const PactJsonListAsTable = (props) => {\n  const json = _.isArray(props.json) ? props.json : [];\n  const isNested = props.isNested || false;\n  const classes = isNested ? useNestedTableStyles : useToplevelTableStyles;\n  const header = props.header || [];\n  let keyOrder = [];\n  if (props.keyOrder) {\n    keyOrder = props.keyOrder;\n  } else if (Array.isArray(props.json)) {\n    if ( json.length > 0 ) {\n      keyOrder = Object.keys(json[0]);\n    }\n  }\n  const keyFormatter = props.keyFormatter ? props.keyFormatter : (k) => {return (k)};\n  const valFormatter = props.valFormatter ? props.valFormatter : (str) => <code>{renderPactValue(str)}</code>;\n\n  const internals = () =>\n    <React.Fragment>\n        <TableHead>\n          <TableRow>\n          {header.map((val) => (\n            <TableCell key={val}>{val}</TableCell>\n          ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {json.map(obj => (\n            <TableRow key={obj[keyOrder[0]]}>\n              { keyOrder.map(k => {\n                  const v = obj[k];\n                  return (\n                    <TableCell key={k}>\n                      {isRootPactValue(v) ? (\n                          valFormatter(v)\n                      ) : Array.isArray(v) ? (\n                          <PactJsonListAsTable\n                            json={v}\n                            keyFormatter={keyFormatter}\n                            valFormatter={valFormatter}\n                            isNested={true}/>\n                      ) : typeof v === \"object\" ? (\n                          <PactSingleJsonAsTable\n                            json={v}\n                            keyFormatter={keyFormatter}\n                            valFormatter={valFormatter}\n                            isNested={true}/>\n                      ) : typeof v === \"function\" ? (\n                          valFormatter(v.toString())\n                      ) : (\n                          valFormatter(v)\n                      )}\n                    </TableCell>\n                  )\n                }\n            )}\n            </TableRow>\n          ))}\n      </TableBody>\n    </React.Fragment>;\n\n  return (\n    isNested ? (\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    ) : (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    </TableContainer>\n    )\n)};\n\nconst MakeInputField = (props) => {\n  const {\n    type,\n    label,\n    options,\n    placeholder,\n    className,\n    onChange,\n    value,\n  } = props.inputField;\n\n  return ( type === 'select'\n    ? <TextField\n        id=\"outlined-multiline-static\"\n        select\n        required\n        fullWidth\n        className={className}\n        variant=\"outlined\"\n        label={label}\n        onChange={e => {\n          // console.log(`Selected ${e.target.value}`,e); \n          onChange(e.target.value)}\n          }\n        >\n        \n        { options.map(k =>\n            <MenuItem key={k} value={k}>\n              {k}\n            </MenuItem>\n          )\n        }\n      </TextField>\n    : type === 'textFieldSingle' ?\n      <TextField\n        required\n        fullWidth\n        value={value}\n        className={className}\n        variant='outlined'\n        label={label}\n        onChange={e => onChange(e.target.value)}\n      />\n    : type === 'textFieldMulti' ?\n      <TextField\n        required\n        fullWidth\n        label={label}\n        className={className}\n        multiline\n        rows={4}\n        variant=\"outlined\"\n        placeholder={placeholder}\n        onChange={e => onChange(e.target.value)}\n      />\n    : type === 'checkbox' ? \n        <Checkbox\n          checked={value}\n          onChange={e=>onChange(e.target.value)}\n          color=\"primary\"\n          label={label}\n        />\n    : type === 'markdown' ?\n        <MDEditor\n          value={value}\n          onChange={onChange}/>\n    : null\n  )\n\n};\n\nexport const MakeForm = (props) => {\n  const {\n    inputFields,\n    onSubmit,\n    tx, txRes, txStatus, setTxStatus\n  } = props;\n  const [wasSubmitted,setWasSubmitted] = useState(false);\n  useEffect(()=>setWasSubmitted(false),[inputFields]);\n  useEffect(()=>txStatus !== \"\" ? setWasSubmitted(true) : setWasSubmitted(wasSubmitted), [txStatus])\n\n  return (\n    <div>\n      <form\n        autoComplete=\"off\"\n        onSubmit={e => onSubmit(e)}>\n        {inputFields.map(f =>\n          <MakeInputField inputField={f}/>\n        )}\n        <CardActions>\n          {txStatus === 'pending'\n            ? null\n            : <Button variant=\"outlined\" color=\"default\" type=\"submit\" disabled={wasSubmitted}>\n                Submit\n              </Button>\n          }\n        </CardActions>\n      </form>\n      { txStatus === 'pending' ? <LinearProgress /> : null }\n      <PactTxStatus tx={tx} txRes={txRes} txStatus={txStatus} setTxStatus={setTxStatus}/>\n    </div>\n  )\n};\n","//basic React api imports\nimport React, {useState, useEffect} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  Container,\n  Paper,\n  Box,\n  Grid,\n  Divider,\n} from '@material-ui/core';\nimport { Modal, Button } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { daoAPI } from \"./kadena-config.js\";\nimport {dashStyleNames2Text, PactSingleJsonAsTable} from \"./util.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport const PactTxStatus = (props) => {\n  // TODO: make these msgs hideable\n  const tx = props.tx;\n  const txRes = props.txRes;\n  const txStatus = props.txStatus;\n  const [open,setOpen] = useState(true);\n  const [modalOpen,setModalOpen] = useState(false);\n  const classes = useStyles();\n  const severity = txStatus === \"pending\" ? 'info'\n                   : txStatus === \"success\" ? 'success'\n                   : txStatus === \"timeout\" ? 'warning'\n                   : 'error' ;\n  useEffect(()=>\n    setOpen(true)\n  ,[txStatus]);\n\n  return (\n    txStatus ?\n      <div className={classes.root}>\n        <Collapse in={open}>\n          <Alert\n            severity={severity}\n            action={\n              <IconButton\n                aria-label=\"close\"\n                color=\"inherit\"\n                size=\"small\"\n                onClick={() => setOpen(false)}>\n                <CloseIcon fontSize=\"inherit\" />\n              </IconButton>\n\n            }\n          >\n\n          <AlertTitle>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                {dashStyleNames2Text(txStatus)}\n              </Grid>\n              {txStatus === 'validation-error' || txStatus === 'failure'\n                ?\n                  <Grid item>\n                    <Divider orientation=\"vertical\" flexItem />\n                    <Button size='small' onClick={()=>setModalOpen(true)}>\n                      View\n                    </Button>\n                  </Grid>\n                : <React.Fragment/>}\n            </Grid>\n\n          </AlertTitle>\n            { txStatus === \"pending\" ? (\n              <React.Fragment>\n                <p>Awaiting Confirmation</p>\n                <a href={`${daoAPI.explorerURL}/tx/${tx.hash}`}>\n                  Eventual Block Explorer Link\n                </a>\n              </React.Fragment>\n            ) : txStatus === \"success\" ? (\n              <React.Fragment>\n                <a href={`${daoAPI.explorerURL}/tx/${tx.hash}`}>\n                  View transaction in Block Explorer\n                </a>\n              </React.Fragment>\n            ) : txStatus === \"failure\" ? (\n              <React.Fragment>\n                <a href={`${daoAPI.explorerURL}/tx/${tx.hash}`}>\n                  View transaction in Block Explorer\n                </a>\n                <div>\n                  <Modal\n                    open={modalOpen}\n                    onClose={() => setModalOpen(false)}\n                  >\n                    <Container maxWidth=\"lg\">\n                      <PactSingleJsonAsTable json={txRes}/>\n                    </Container>\n                  </Modal>\n                </div>\n              </React.Fragment>\n            ) : txStatus === \"timeout\" ? (\n              <React.Fragment>\n                <p>...but your tx was sent.</p>\n                <a href={`${daoAPI.explorerURL}/tx/${tx.hash}`}>\n                  View transaction in Block Explorer\n                </a>\n              </React.Fragment>\n            ) : txStatus === \"validation-error\" ? (\n              <React.Fragment>\n                <Box>\n                  Transaction was not sent to Blockchain. Check your keys or metadata.\n                </Box>\n                <div>\n                  <Modal\n                    open={modalOpen}\n                    onClose={() => setModalOpen(false)}\n                  >\n                    <Container maxWidth=\"md\">\n                        <Paper>{txRes.toString()}</Paper>\n                    </Container>\n                  </Modal>\n                </div>\n              </React.Fragment>\n            ) : (\n              <React.Fragment/>\n            )}\n          </Alert>\n        </Collapse>\n      </div>\n    : <React.Fragment/>\n  );\n};\n","//basic React api imports\nimport React, { useState } from \"react\";\n//Material Stuff\nimport {\n  makeStyles,\n} from '@material-ui/styles';\n//pact-lang-api for blockchain calls\nimport Pact from \"pact-lang-api\";\n//config file for blockchain calls\nimport { daoAPI } from \"./kadena-config.js\";\nimport {\n  PactJsonListAsTable,\n  MakeForm,\n } from \"./util.js\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    margin: \"5px auto\",\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: \"10px auto\",\n  },\n}));\n\n\nconst sendGuardianCmd = async (\n  setTx,\n  setTxStatus,\n  setTxRes,\n  refresh,\n  user, cmd, envData={}, caps=[]\n) => {\n    try {\n      //creates transaction to send to wallet\n      const toSign = {\n          pactCode: cmd,\n          caps: (Array.isArray(caps) && caps.length\n            ? caps :\n            Pact.lang.mkCap(\"Guadian Cap\"\n                           , \"Authenticates that you're a guardian\"\n                           , `${daoAPI.contractAddress}.GUARDIAN`\n                           , [user])),\n          gasLimit: daoAPI.meta.gasLimit,\n          chainId: daoAPI.meta.chainId,\n          ttl: daoAPI.meta.ttl,\n          sender: user,\n          envData: envData\n      }\n      console.log(\"toSign\", toSign)\n      //sends transaction to wallet to sign and awaits signed transaction\n      const signed = await Pact.wallet.sign(toSign)\n      console.log(\"signed\", signed)\n      if ( typeof signed === 'object' && 'hash' in signed ) {\n        setTx(signed);\n      } else {\n        throw new Error(\"Signing API Failed\");\n      }\n\n      //sends signed transaction to blockchain\n      const txReqKeys = await Pact.wallet.sendSigned(signed, daoAPI.meta.host)\n      console.log(\"txReqKeys\", txReqKeys)\n      //set html to wait for transaction response\n      //set state to wait for transaction response\n      setTxStatus('pending')\n      try {\n        //listens to response to transaction sent\n        //  note method will timeout in two minutes\n        //    for lower level implementations checkout out Pact.fetch.poll() in pact-lang-api\n        let retries = 8;\n        let res = {};\n        while (retries > 0) {\n          //sleep the polling\n          await new Promise(r => setTimeout(r, 15000));\n          res = await Pact.fetch.poll(txReqKeys, daoAPI.meta.host);\n          try {\n            if (res[signed.hash].result.status) {\n              retries = -1;\n            } else {\n              retries = retries - 1;\n            }\n          } catch(e) {\n              retries = retries - 1;\n          }\n        };\n        //keep transaction response in local state\n        setTxRes(res)\n        if (res[signed.hash].result.status === \"success\"){\n          console.log(\"tx status set to success\");\n          //set state for transaction success\n          setTxStatus('success');\n          refresh();\n        } else if (retries === 0) {\n          console.log(\"tx status set to timeout\");\n          setTxStatus('timeout');\n          refresh();\n        } else {\n          console.log(\"tx status set to failure\");\n          //set state for transaction failure\n          setTxStatus('failure');\n        }\n      } catch(e) {\n        // TODO: use break in the while loop to capture if timeout occured\n        console.log(\"tx api failure\",e);\n        setTxRes(e);\n        setTxStatus('failure');\n      }\n    } catch(e) {\n      console.log(\"tx status set to validation error\",e);\n      //set state for transaction construction error\n      setTxStatus('validation-error');\n    }\n};\n\nexport const RenderGuardians = (props) => {\n  return (\n    <PactJsonListAsTable\n      header={[\"Guardian\",\"Committed KDA\",\"Approved Hash\",\"Approval Date\",\"Voting Guard\",\"Forum Moderation Guard\"]}\n      keyOrder={[\"k\",\"committed-kda\",\"approved-hash\",\"approved-date\",\"guard\",\"moderate-guard\"]}\n      json={props.guardians}\n    />\n)};\n\nexport const RegisterAmbassador = (props) => {\n  const {\n    refresh,\n    guardians,\n  } = props;\n  const [grd, setGrd] = useState( \"\" );\n  const [newAmb, setNewAmb] = useState( \"\" );\n  const [ambGrd, setAmbGrd] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setGrd,\n      options:guardians.map((g)=>g['k']),\n    },\n    {\n      type:'textFieldSingle',\n      label:'Ambassador Account Name',\n      className:classes.formControl,\n      value:newAmb,\n      onChange:setNewAmb\n    },\n    {\n      type:'textFieldMulti',\n      label:'Ambassador Account Guard',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:ambGrd,\n      onChange:setAmbGrd,\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n          ,grd\n          ,`(${daoAPI.contractAddress}.register-ambassador \"${grd}\" \"${newAmb}\" (read-keyset 'ks))`\n          ,{ks: JSON.parse(ambGrd)}\n        );\n      } catch (e) {\n        console.log(\"Ambassador Registration Submit Error\",typeof e, e, grd,newAmb,ambGrd);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const DeactivateAmbassador = (props) => {\n  const {refresh} = props;\n  const [grd, setGrd] = useState( \"\" );\n  const [amb, setAmb] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      // console.log(grd,newAmb);\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n        ,grd\n        ,`(${daoAPI.contractAddress}.deactivate-ambassador \"${grd}\" \"${amb}\")`\n        )\n      } catch (e) {\n        console.log(\"deactivate-ambassador Submit Error\",typeof e, e, grd,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n      };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setGrd,\n      options:props.guardians.map((g)=>g['k']),\n    },\n    {\n      type:'select',\n      label:'Select Ambassador',\n      className:classes.formControl,\n      onChange:setAmb,\n      options:props.ambassadors.map((g)=>g['k']),\n    },\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nexport const ReactivateAmbassador = (props) => {\n  const {\n    refresh,\n  } = props;\n  const [grd, setGrd] = useState( \"\" );\n  const [amb, setAmb] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      // console.log(grd,newAmb);\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n        ,grd\n        ,`(${daoAPI.contractAddress}.reactivate-ambassador \"${grd}\" \"${amb}\")`\n        )\n      } catch (e) {\n        console.log(\"reactivate-ambassador Submit Error\",typeof e, e, grd,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n    };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setGrd,\n      options:props.guardians.map((g)=>g['k']),\n    },\n    {\n      type:'select',\n      label:'Select Ambassador',\n      className:classes.formControl,\n      onChange:setAmb,\n      options:props.ambassadors.map((g)=>g['k']),\n    },\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n}\n\nexport const RotateGuardian = (props) => {\n  const {\n    refresh,\n    guardians,\n  } = props;\n  const [grd, setGrd] = useState( \"\" );\n  const [voteKs, setVoteKs] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      // console.log(grd,newAmb);\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n        ,grd\n        ,`(${daoAPI.contractAddress}.rotate-guardian \"${grd}\" (read-keyset 'voteKs))`\n        ,{voteKs: JSON.parse(voteKs)})\n      } catch (e) {\n        console.log(\"rotate-guardian Submit Error\",typeof e, e, grd, voteKs,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n    };\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setGrd,\n      options:guardians.map((g)=>g['k']),\n    },{\n      type:'textFieldMulti',\n      label:'Guardian Voting Guard',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:voteKs,\n      onChange:setVoteKs,\n    }\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nexport const ProposeDaoUpgrade = (props) => {\n  const {\n    refresh,\n    guardians,\n  } = props;\n  const [acct, setAcct] = useState( \"\" );\n  const [hsh, setHsh] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setAcct,\n      options:guardians.map((g)=>g['k']),\n    },\n    {\n      type:'textFieldSingle',\n      label:'Proposed Upgrade Hash',\n      className:classes.formControl,\n      value:hsh,\n      onChange:setHsh\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n          ,acct\n          ,`(${daoAPI.contractAddress}.propose-dao-upgrade \"${acct}\" \"${hsh}\")`\n        );\n      } catch (e) {\n        console.log(\"propose-dao-upgrade Submit Error\",typeof e, e, acct,hsh,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const GuardianApproveHash = (props) => {\n  const {\n    refresh,\n    guardians,\n  } = props;\n  const [acct, setAcct] = useState( \"\" );\n  const [hsh, setHsh] = useState( \"\" );\n  const {txStatus, setTxStatus,\n         tx, setTx,\n         txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setAcct,\n      options:guardians.map((g)=>g['k']),\n    },\n    {\n      type:'select',\n      label:'Proposed Upgrade Hash',\n      className:classes.formControl,\n      value:setHsh,\n      options:guardians.map((g)=>g['approved-hash']),\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n          ,acct\n          ,`(${daoAPI.contractAddress}.guardian-approve-hash \"${acct}\" \"${hsh}\")`\n        );\n      } catch (e) {\n        console.log(\"guardian-approve-hash Submit Error\",typeof e, e, acct,hsh,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const RegisterGuardian = (props) => {\n  const {\n    refresh,\n  } = props;\n  const [grd, setGrd] = useState( \"\" );\n  const [voteKs, setVoteKs] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'textFieldSingle',\n      label:'Guardian Account Name',\n      className:classes.formControl,\n      value:grd,\n      onChange:setGrd\n    },\n    {\n      type:'textFieldMulti',\n      label:'Guardian Voting Guard',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:voteKs,\n      onChange:setVoteKs,\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n          ,grd\n          ,`(${daoAPI.contractAddress}.register-guardian \"${grd}\" (read-keyset 'voteKs))`\n          ,{voteKs: JSON.parse(voteKs)}\n          ,[Pact.lang.mkCap(\"TRANSFER Cap\"\n                           , \"Stake the needed amount\"\n                           , `coin.TRANSFER`\n                           , [grd, daoAPI.constants[\"DAO_ACCT_NAME\"], daoAPI.constants[\"GUARDIAN_KDA_REQUIRED\"]])]\n        );\n      } catch (e) {\n        console.log(\"Guardian Registration Submit Error\",typeof e, e, grd,voteKs);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n","//basic React api imports\nimport React, { useState } from \"react\";\n//Material Stuff\nimport {\n  makeStyles,\n} from '@material-ui/styles';\n//pact-lang-api for blockchain calls\nimport Pact from \"pact-lang-api\";\n//config file for blockchain calls\nimport { daoAPI } from \"./kadena-config.js\";\nimport {\n  PactJsonListAsTable,\n  MakeForm,\n } from \"./util.js\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    margin: \"5px auto\",\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: \"10px auto\",\n  },\n}));\n\nexport const RenderAmbassadors = (props) => {\n  return (\n    <PactJsonListAsTable\n      header={[\"Ambassador\",\"Active\",\"Voted to Freeze\",\"Guard\"]}\n      keyOrder={[\"k\",\"active\",\"voted-to-freeze\",\"guard\"]}\n      json={props.ambassadors}\n    />\n)};\n\nconst sendAmbassadorCmd = async (\n  setTx,\n  setTxStatus,\n  setTxRes,\n  refresh,\n  user, cmd, envData={}, caps=[]\n) => {\n    try {\n      //creates transaction to send to wallet\n      const toSign = {\n          pactCode: cmd,\n          caps: (Array.isArray(caps) && caps.length\n            ? caps :\n            Pact.lang.mkCap(\"Ambassador Cap\"\n                           , \"Authenticates that you're an ambassador\"\n                           , `${daoAPI.contractAddress}.AMBASSADOR`\n                           , [user])),\n          gasLimit: daoAPI.meta.gasLimit,\n          chainId: daoAPI.meta.chainId,\n          ttl: daoAPI.meta.ttl,\n          sender: user,\n          envData: envData\n      }\n      console.log(\"toSign\", toSign)\n      //sends transaction to wallet to sign and awaits signed transaction\n      const signed = await Pact.wallet.sign(toSign)\n      console.log(\"signed\", signed)\n      setTx(signed)\n      //sends signed transaction to blockchain\n      const txReqKeys = await Pact.wallet.sendSigned(signed, daoAPI.meta.host)\n      console.log(\"txReqKeys\", txReqKeys)\n      //set html to wait for transaction response\n      //set state to wait for transaction response\n      setTxStatus('pending')\n      try {\n        //listens to response to transaction sent\n        //  note method will timeout in two minutes\n        //    for lower level implementations checkout out Pact.fetch.poll() in pact-lang-api\n        let retries = 8;\n        let res = {};\n        while (retries > 0) {\n          //sleep the polling\n          await new Promise(r => setTimeout(r, 15000));\n          res = await Pact.fetch.poll(txReqKeys, daoAPI.meta.host);\n          try {\n            if (res[signed.hash].result.status) {\n              retries = -1;\n            } else {\n              retries = retries - 1;\n            }\n          } catch(e) {\n              retries = retries - 1;\n          }\n        };\n        //keep transaction response in local state\n        setTxRes(res)\n        if (res[signed.hash].result.status === \"success\"){\n          console.log(\"tx status set to success\");\n          //set state for transaction success\n          setTxStatus('success');\n          refresh();\n        } else if (retries === 0) {\n          console.log(\"tx status set to timeout\");\n          setTxStatus('timeout');\n          refresh();\n        } else {\n          console.log(\"tx status set to failure\");\n          //set state for transaction failure\n          setTxStatus('failure');\n        }\n      } catch(e) {\n        // TODO: use break in the while loop to capture if timeout occured\n        console.log(\"tx api failure\",e);\n        setTxRes(e);\n        setTxStatus('failure');\n      }\n    } catch(e) {\n      console.log(\"tx status set to validation error\",e);\n      //set state for transaction construction error\n      setTxStatus('validation-error');\n    }\n};\n\nexport const VoteToFreeze = (props) => {\n  const {\n    refresh,\n    ambassadors,\n  } = props;\n  const [amb, setAmb] = useState( \"\" );\n  const {txStatus, setTxStatus,\n         tx, setTx,\n         txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Ambassador',\n      className:classes.formControl,\n      onChange:setAmb,\n      options:ambassadors.map((g)=>g['k']),\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendAmbassadorCmd(setTx,setTxStatus,setTxRes,refresh\n          ,amb\n          ,`(${daoAPI.contractAddress}.vote-to-freeze \"${amb}\")`\n        );\n      } catch (e) {\n        console.log(\"vote to freeze Submit Error\",typeof e, e, amb);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const Freeze = (props) => {\n  const {\n    refresh,\n    ambassadors,\n  } = props;\n  const [amb, setAmb] = useState( \"\" );\n  const {txStatus, setTxStatus,\n         tx, setTx,\n         txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Ambassador',\n      className:classes.formControl,\n      onChange:setAmb,\n      options:ambassadors.map((g)=>g['k']),\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendAmbassadorCmd(setTx,setTxStatus,setTxRes,refresh\n          ,amb\n          ,`(${daoAPI.contractAddress}.freeze \"${amb}\")`\n        );\n      } catch (e) {\n        console.log(\"freeze Submit Error\",typeof e, e, amb);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const RotateAmbassador = (props) => {\n  const {\n    refresh,\n    ambassadors,\n  } = props;\n  const [acct, setAcct] = useState( \"\" );\n  const [ks, setKs] = useState( \"\" );\n  const {txStatus, setTxStatus,\n         tx, setTx,\n         txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      // console.log(grd,newAmb);\n      try {\n        sendAmbassadorCmd(setTx,setTxStatus,setTxRes,refresh\n        ,acct\n        ,`(${daoAPI.contractAddress}.rotate-ambassador \"${acct}\" (read-keyset 'ks))`\n        ,{ks: JSON.parse(ks)})\n      } catch (e) {\n        console.log(\"rotate-ambassador Submit Error\",typeof e, e, acct,ks);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n    };\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Ambassador',\n      className:classes.formControl,\n      onChange:setAcct,\n      options:ambassadors.map((g)=>g['k']),\n    },{\n      type:'textFieldMulti',\n      label:'Guardian Account Guard',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:ks,\n      onChange:setKs,\n    }\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n","//basic React api imports\nimport React from \"react\";\nimport { daoAPI, keyFormatter } from \"./kadena-config.js\";\nimport { PactSingleJsonAsTable } from \"./util.js\";\n\nexport const InitConfig = () => {\n  return (\n    <PactSingleJsonAsTable\n      json={daoAPI}\n      keyFormatter={keyFormatter}\n      />\n  )\n};\n","//basic React api imports\nimport React from \"react\";\n//config file for blockchain calls\nimport Pact from \"pact-lang-api\";\nimport { daoAPI } from \"./kadena-config.js\";\nimport { PactSingleJsonAsTable, dashStyleNames2Text } from \"./util.js\";\n\nexport const getContractState = async (cmd) => {\n  //calling get-all() function from smart contract\n    const res = await Pact.fetch.local(\n      {\n        pactCode: `(${daoAPI.contractAddress}.${cmd})`,\n        //pact-lang-api function to construct transaction meta data\n        meta: Pact.lang.mkMeta(\n          daoAPI.meta.sender,\n          daoAPI.meta.chainId,\n          daoAPI.meta.gasPrice,\n          daoAPI.meta.gasLimit,\n          daoAPI.meta.creationTime(),\n          daoAPI.meta.ttl\n        ),\n      },\n      daoAPI.meta.host\n    );\n    const all = res.result.data;\n    //sorts memories by least recent\n    console.log(\"local query data\",all);\n    return(all);\n};\n\nexport const RenderInitState = (props) => {\n  return (\n   <PactSingleJsonAsTable\n    json={props.initState}\n    header={[\"\",\"Status\"]}\n    keyFormatter={dashStyleNames2Text}\n    />\n  )\n};\n","//basic React api imports\nimport React from \"react\";\n\nimport Pact from \"pact-lang-api\";\nimport { forumAPI, keyFormatter } from \"../kadena-config.js\";\nimport { PactSingleJsonAsTable, dashStyleNames2Text } from \"../util.js\";\n\nexport const getForumContractState = async (cmd) => {\n  //calling get-all() function from smart contract\n    const res = await Pact.fetch.local(\n      {\n        pactCode: `(${forumAPI.contractAddress}.${cmd})`,\n        //pact-lang-api function to construct transaction meta data\n        meta: Pact.lang.mkMeta(\n          forumAPI.meta.sender,\n          forumAPI.meta.chainId,\n          forumAPI.meta.gasPrice,\n          forumAPI.meta.gasLimit,\n          forumAPI.meta.creationTime(),\n          forumAPI.meta.ttl\n        ),\n      },\n      forumAPI.meta.host\n    );\n    const all = res.result.data;\n    //sorts memories by least recent\n    console.log(`local query data: (${forumAPI.contractAddress}.${cmd})`, res);\n    return(all);\n};\n\nexport const RenderForumState = (props) => {\n  return (\n   <PactSingleJsonAsTable\n    json={props.forumState}\n    header={[\"\",\"Status\"]}\n    keyFormatter={dashStyleNames2Text}\n    />\n  )\n};\nexport const ForumConfig = () => {\n  return (\n    <PactSingleJsonAsTable\n      json={forumAPI}\n      keyFormatter={keyFormatter}\n      />\n  )\n};\n","//basic React api imports\nimport React, { useState } from \"react\";\n//Material Stuff\nimport {\n  makeStyles,\n} from '@material-ui/styles';\n//pact-lang-api for blockchain calls\nimport Pact from \"pact-lang-api\";\n//config file for blockchain calls\nimport { forumAPI } from \"../kadena-config.js\";\nimport {\n  PactJsonListAsTable,\n  MakeForm,\n } from \"../util.js\";\nimport { ScrollableTabs } from \"../ScrollableTabs.js\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    margin: \"5px auto\",\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: \"10px auto\",\n  },\n}));\n\n\nconst sendMjolnirCmd = async (\n  setTx,\n  setTxStatus,\n  setTxRes,\n  refresh,\n  cmd, envData={}, caps=[]\n) => {\n    try {\n      //creates transaction to send to wallet\n      const toSign = {\n          pactCode: cmd,\n          caps: (Array.isArray(caps) && caps.length\n            ? caps :\n            Pact.lang.mkCap(\"Mjonlir Cap\"\n                           , \"Authenticates that you're Mjonir\"\n                           , `${forumAPI.contractAddress}.MJOLNIR`)),\n          gasLimit: forumAPI.meta.gasLimit,\n          chainId: forumAPI.meta.chainId,\n          ttl: forumAPI.meta.ttl,\n          envData: envData\n      }\n      console.log(\"toSign\", toSign)\n      //sends transaction to wallet to sign and awaits signed transaction\n      const signed = await Pact.wallet.sign(toSign)\n      console.log(\"signed\", signed)\n      if ( typeof signed === 'object' && 'hash' in signed ) {\n        setTx(signed);\n      } else {\n        throw new Error(\"Signing API Failed\");\n      }\n\n      //sends signed transaction to blockchain\n      const txReqKeys = await Pact.wallet.sendSigned(signed, forumAPI.meta.host)\n      console.log(\"txReqKeys\", txReqKeys)\n      //set html to wait for transaction response\n      //set state to wait for transaction response\n      setTxStatus('pending')\n      try {\n        //listens to response to transaction sent\n        //  note method will timeout in two minutes\n        //    for lower level implementations checkout out Pact.fetch.poll() in pact-lang-api\n        let retries = 8;\n        let res = {};\n        while (retries > 0) {\n          //sleep the polling\n          await new Promise(r => setTimeout(r, 15000));\n          res = await Pact.fetch.poll(txReqKeys, forumAPI.meta.host);\n          try {\n            if (res[signed.hash].result.status) {\n              retries = -1;\n            } else {\n              retries = retries - 1;\n            }\n          } catch(e) {\n              retries = retries - 1;\n          }\n        };\n        //keep transaction response in local state\n        setTxRes(res)\n        if (res[signed.hash].result.status === \"success\"){\n          console.log(\"tx status set to success\");\n          //set state for transaction success\n          setTxStatus('success');\n          refresh();\n        } else if (retries === 0) {\n          console.log(\"tx status set to timeout\");\n          setTxStatus('timeout');\n          refresh();\n        } else {\n          console.log(\"tx status set to failure\");\n          //set state for transaction failure\n          setTxStatus('failure');\n        }\n      } catch(e) {\n        // TODO: use break in the while loop to capture if timeout occured\n        console.log(\"tx api failure\",e);\n        setTxRes(e);\n        setTxStatus('failure');\n      }\n    } catch(e) {\n      console.log(\"tx status set to validation error\",e);\n      //set state for transaction construction error\n      setTxStatus('validation-error');\n    }\n};\n\nconst RotateMjolnir = (props) => {\n  const {\n    refresh,\n  } = props;\n  const [newGrd, setNewGrd] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'textFieldMulti',\n      label:'New Mjolnir Guard',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:newGrd,\n      onChange:setNewGrd,\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      console.log(forumAPI);\n      try {\n        sendMjolnirCmd(setTx,setTxStatus,setTxRes,refresh\n          ,`(${forumAPI.contractAddress}.rotate-mjolnir (read-keyset 'ks))`\n          ,{ks: JSON.parse(newGrd)}\n        );\n      } catch (e) {\n        console.log(\"Mjonir Registration Submit Error\",typeof e, e, newGrd);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const DisableModerator = (props) => {\n  const {refresh, moderators} = props;\n  const [mod, setMod] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendMjolnirCmd(setTx,setTxStatus,setTxRes,refresh\n        ,`(${forumAPI.contractAddress}.disable-moderator \"${mod}\")`\n        )\n      } catch (e) {\n        console.log(\"disable-moderator Submit Error\",typeof e, e, mod,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n      };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Moderator',\n      className:classes.formControl,\n      onChange:setMod,\n      options:moderators.map((g)=>g['name']),\n    }\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nconst EnableModerator = (props) => {\n  const {refresh, moderators} = props;\n  const [mod, setMod] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendMjolnirCmd(setTx,setTxStatus,setTxRes,refresh\n        ,`(${forumAPI.contractAddress}.enable-moderator \"${mod}\")`\n        )\n      } catch (e) {\n        console.log(\"disable-moderator Submit Error\",typeof e, e, mod,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n      };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Moderator',\n      className:classes.formControl,\n      onChange:setMod,\n      options:moderators.map((g)=>g['name']),\n    }\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nconst MjolnirWriteMember = (props) => {\n  const {refresh, moderators, members} = props;\n  const [user, setUser] = useState( \"\" );\n  const [newKs, setNewKs] = useState({});\n  const [isMod,setIsMod] = useState(false);\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendMjolnirCmd(setTx,setTxStatus,setTxRes,refresh\n        ,`(${forumAPI.contractAddress}.mjolnir-write-member \"${user}\" (read-keyset 'ks) ${isMod})`\n        ,{ks: JSON.parse(newKs)})\n      } catch (e) {\n        console.log(\"mjolnir-write-member Submit Error\",typeof e, e, user, newKs, isMod);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n      };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select User',\n      className:classes.formControl,\n      onChange:setUser,\n      options:moderators.map(g=>g.name).concat(members.map(m=>m.name)),\n    },{\n      type:'textFieldMulti',\n      label:'New Guard',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:newKs,\n      onChange:setNewKs,\n    },{\n      type:'checkbox',\n      label:'Moderator',\n      className:classes.formControl,\n      value:isMod,\n      onChange:setIsMod,\n    }\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nexport const MjolnirActionForms = (props) => {\n  const {\n    members,\n    moderators,\n    tabIdx,\n    pactTxStatus,\n  } = props;\n  const {\n    getForumState,\n    getMembers,\n  } = props.refresh;\n\n  return (\n    <ScrollableTabs\n      tabIdx={tabIdx}\n      tabEntries={[\n          {\n            label:\"Rotate Mjolnir Guard\",\n            component:\n              <RotateMjolnir\n                pactTxStatus={pactTxStatus}\n                refresh={()=>getForumState()}/>\n          },{\n            label:\"Enable Moderator\",\n            component:\n              <EnableModerator\n                pactTxStatus={pactTxStatus}\n                moderators={moderators}\n                refresh={() => getMembers()}/>\n          },{\n            label:\"Disable Moderator\",\n            component:\n              <DisableModerator\n                pactTxStatus={pactTxStatus}\n                moderators={moderators}\n                refresh={() => getMembers()}/>\n          },{\n            label:\"Mjolnir Write Member\",\n            component:\n              <MjolnirWriteMember\n                pactTxStatus={pactTxStatus}\n                moderators={moderators}\n                members={members}\n                refresh={() => getMembers()}/>\n          }\n      ]}/>\n  );\n}","//basic React api imports\nimport React, { useState } from \"react\";\n//Material Stuff\nimport {\n  makeStyles,\n} from '@material-ui/styles';\n//pact-lang-api for blockchain calls\nimport Pact from \"pact-lang-api\";\n//config file for blockchain calls\nimport { daoAPI, forumAPI } from \"../kadena-config.js\";\nimport {\n  PactJsonListAsTable,\n  MakeForm,\n } from \"../util.js\";\nimport { ScrollableTabs } from \"../ScrollableTabs.js\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    margin: \"5px auto\",\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: \"10px auto\",\n  },\n}));\n\nexport const RenderMembers = (props) => {\n  return (\n    <PactJsonListAsTable\n      header={[\"Name\",\"Disabled\",\"Guard\"]}\n      keyOrder={[\"name\",\"disabled\",\"guard\"]}\n      json={props.members}\n    />\n)};\n\nexport const RenderModerators = (props) => {\n  return (\n    <PactJsonListAsTable\n      header={[\"Name\",\"Disabled\",\"Guard\"]}\n      keyOrder={[\"name\",\"disabled\",\"guard\"]}\n      json={props.moderators}\n    />\n)};\n\nexport const sendMemberCmd = async (\n  setTx,\n  setTxStatus,\n  setTxRes,\n  refresh,\n  user,\n  cmd, envData={}, role=\"member\", caps=[]\n) => {\n    try {\n      //creates transaction to send to wallet\n      const toSign = {\n          pactCode: cmd,\n          caps: (\n            Array.isArray(caps) && caps.length ?\n              caps :\n            role === \"moderator\" ?\n              Pact.lang.mkCap(\"MODERATOR Cap\"\n                            , \"Authenticates that you're a MODERATOR\"\n                            , `${forumAPI.contractAddress}.MODERATOR`\n                            , [user]) :\n            role === \"member\" ? \n              Pact.lang.mkCap(\"MEMBER Cap\"\n              , \"Authenticates that you're a MEMBER\"\n              , `${forumAPI.contractAddress}.MEMBER`\n              , [user]) \n            : Error(`sendForumCmd(role=[\"member\"|\"moderator\"]), got role=${role}`)),\n          gasLimit: forumAPI.meta.gasLimit,\n          chainId: forumAPI.meta.chainId,\n          ttl: forumAPI.meta.ttl,\n          sender: user,\n          envData: envData\n      }\n      console.log(\"toSign\", toSign)\n      //sends transaction to wallet to sign and awaits signed transaction\n      const signed = await Pact.wallet.sign(toSign)\n      console.log(\"signed\", signed)\n      if ( typeof signed === 'object' && 'hash' in signed ) {\n        setTx(signed);\n      } else {\n        throw new Error(\"Signing API Failed\");\n      }\n\n      //sends signed transaction to blockchain\n      const txReqKeys = await Pact.wallet.sendSigned(signed, forumAPI.meta.host)\n      console.log(\"txReqKeys\", txReqKeys)\n      //set html to wait for transaction response\n      //set state to wait for transaction response\n      setTxStatus('pending')\n      try {\n        //listens to response to transaction sent\n        //  note method will timeout in two minutes\n        //    for lower level implementations checkout out Pact.fetch.poll() in pact-lang-api\n        let retries = 8;\n        let res = {};\n        while (retries > 0) {\n          //sleep the polling\n          await new Promise(r => setTimeout(r, 15000));\n          res = await Pact.fetch.poll(txReqKeys, forumAPI.meta.host);\n          try {\n            if (res[signed.hash].result.status) {\n              retries = -1;\n            } else {\n              retries = retries - 1;\n            }\n          } catch(e) {\n              retries = retries - 1;\n          }\n        };\n        //keep transaction response in local state\n        setTxRes(res)\n        if (res[signed.hash].result.status === \"success\"){\n          console.log(\"tx status set to success\");\n          //set state for transaction success\n          setTxStatus('success');\n          refresh();\n        } else if (retries === 0) {\n          console.log(\"tx status set to timeout\");\n          setTxStatus('timeout');\n          refresh();\n        } else {\n          console.log(\"tx status set to failure\");\n          //set state for transaction failure\n          setTxStatus('failure');\n        }\n      } catch(e) {\n        // TODO: use break in the while loop to capture if timeout occured\n        console.log(\"tx api failure\",e);\n        setTxRes(e);\n        setTxStatus('failure');\n      }\n    } catch(e) {\n      console.log(\"tx status set to validation error\",e);\n      //set state for transaction construction error\n      setTxStatus('validation-error');\n    }\n};\n\nconst BecomeModerator = (props) => {\n  const {refresh, guardians} = props;\n  const [user, setUser] = useState( \"\" );\n  const [newKs, setNewKs] = useState({});\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendMemberCmd(setTx,setTxStatus,setTxRes,refresh\n          ,user\n          ,`(${forumAPI.contractAddress}.become-moderator \"${user}\" (read-keyset 'ks))`\n          ,{ks: JSON.parse(newKs)}\n          ,\"moderator\"\n          ,[Pact.lang.mkCap(\"GUARDIAN Cap\"\n            , \"Authenticates that you're a GUARDIAN\"\n            , `${daoAPI.contractAddress}.GUARDIAN`\n            , [user])]);\n      } catch (e) {\n        console.log(\"mjolnir-write-member Submit Error\",typeof e, e, user, newKs);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n      };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select your Guardian Account',\n      className:classes.formControl,\n      onChange:setUser,\n      options:guardians.map((g)=>g['k']),\n    },{\n      type:'textFieldMulti',\n      label:'Moderator Keyset',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:newKs,\n      onChange:setNewKs,\n    }\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nconst BecomeMember = (props) => {\n  const {refresh, ambassadors} = props;\n  const [user, setUser] = useState( \"\" );\n  const [newKs, setNewKs] = useState({});\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendMemberCmd(setTx,setTxStatus,setTxRes,refresh\n          ,user\n          ,`(${forumAPI.contractAddress}.become-member \"${user}\" (read-keyset 'ks))`\n          ,{ks: JSON.parse(newKs)}\n          ,\"member\"\n          ,[Pact.lang.mkCap(\"AMBASSADOR Cap\"\n            , \"Authenticates that you're a AMBASSADOR\"\n            , `${daoAPI.contractAddress}.AMBASSADOR`\n            , [user])] \n        );\n      } catch (e) {\n        console.log(\"mjolnir-write-member Submit Error\",typeof e, e, user, newKs);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n      };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select your Ambassador Account',\n      className:classes.formControl,\n      onChange:setUser,\n      options:ambassadors.map((g)=>g['k']),\n    },{\n      type:'textFieldMulti',\n      label:'Member Keyset',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:newKs,\n      onChange:setNewKs,\n    }\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nexport const ModeratorActionForms = (props) => {\n  const {\n    members,\n    moderators,\n    guardians,\n    tabIdx,\n    pactTxStatus,\n  } = props;\n  const {\n    getForumState,\n    getMembers,\n  } = props.refresh;\n\n  return (\n    <ScrollableTabs\n      tabIdx={tabIdx}\n      tabEntries={[\n          {\n            label:\"Become Moderator\",\n            component:\n              <BecomeModerator\n                guardians={guardians}\n                pactTxStatus={pactTxStatus}\n                refresh={()=>getMembers()}/>\n          }\n      ]}/>\n  );\n}\n\nexport const MemberActionForms = (props) => {\n  const {\n    members,\n    moderators,\n    guardians,\n    ambassadors,\n    tabIdx,\n    pactTxStatus,\n  } = props;\n  const {\n    getForumState,\n    getMembers,\n  } = props.refresh;\n\n  return (\n    <ScrollableTabs\n      tabIdx={tabIdx}\n      tabEntries={[\n          {\n            label:\"Become Member\",\n            component:\n              <BecomeMember\n                ambassadors={ambassadors}\n                pactTxStatus={pactTxStatus}\n                refresh={()=>getMembers()}/>\n          }\n      ]}/>\n  );\n}","//basic React api imports\nimport React from \"react\";\n\n//config file for blockchain calls\nimport {\n  PactJsonListAsTable,\n } from \"../util.js\";\n\nexport const RenderModLog = (props) => {\n  return (\n    <PactJsonListAsTable\n      header={[\"Author\",\"Timestamp\",\"Action\"]}\n      keyOrder={[\"author\",\"timestamp\",\"action\"]}\n      json={props.modLog}\n    />\n)};\n","//basic React api imports\nimport React, { useState } from \"react\";\n//make JS less terrible\nimport _ from \"lowdash\";\n//Material Stuff\nimport {\n  makeStyles,\n} from '@material-ui/styles';\n//pact-lang-api for blockchain calls\nimport Pact from \"pact-lang-api\";\n//config file for blockchain calls\nimport { daoAPI, forumAPI } from \"../kadena-config.js\";\nimport {\n  PactJsonListAsTable,\n  PactSingleJsonAsTable,\n  MakeForm,\n } from \"../util.js\";\nimport { sendMemberCmd } from \"./Members.js\";\nimport { ScrollableTabs } from \"../ScrollableTabs.js\";\nimport { RenderMD } from \"../Markdown.js\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    margin: \"5px auto\",\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: \"10px auto\",\n  },\n}));\n\nexport const RenderTopics = (props) => {\n  return (\n    <PactJsonListAsTable\n      header={[\"Index\",\"Author\",\"Headline\",\"Timestamp\",\"Modified\",\"Locked\"]}\n      keyOrder={[\"index\",\"author\",\"headline\",\"timestamp\",\"modified\",\"locked\"]}\n      json={props.topics}\n    />\n)};\n\nexport const RenderTopic = (props) => {\n  const {topicID,topics} = props;\n  return <RenderMD mdText=\"**Hellow world**\\n- fo\" />\n}\n\nconst PostTopic = (props) => {\n  const {refresh, members, moderators} = props;\n  const [author, setAuthor] = useState( \"\" );\n  const [headline, setHeadline] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendMemberCmd(setTx,setTxStatus,setTxRes,refresh\n          ,author\n          ,`(${forumAPI.contractAddress}.post-topic (read-msg 'headline) \"${author}\" (read-msg 'body))`\n          ,{headline: headline, body: body}\n          );\n      } catch (e) {\n        console.log(\"post-topic Submit Error\",typeof e, e, author, headline, body);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n      };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Author',\n      className:classes.formControl,\n      onChange:setAuthor,\n      options:moderators.map(g=>g.name).concat(members.map(m=>m.name)),\n    },{\n      type:'textFieldSingle',\n      label:'Headline',\n      className:classes.formControl,\n      onChange:setHeadline,\n    },{\n      type:'markdown',\n      label:\"Contents\",\n      value:body,\n      onChange:setBody,\n    }\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nexport const TopicActionForms = (props) => {\n  const {\n    members,\n    moderators,\n    topics,\n    tabIdx,\n    pactTxStatus,\n  } = props;\n  const {\n    getTopics,\n  } = props.refresh;\n\n  return (\n    <ScrollableTabs\n      tabIdx={tabIdx}\n      tabEntries={[\n          {\n            label:\"Post Topic\",\n            component:\n              <PostTopic\n                members={members}\n                moderators={moderators}\n                pactTxStatus={pactTxStatus}\n                refresh={()=>getTopics()}/>\n          }\n      ]}/>\n  );\n}\n","//basic React api imports\nimport React, { useState, useEffect } from \"react\";\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n } from '@material-ui/core/styles';\n//semantic ui for styling\nimport {\n  Button,\n  Container,\n  Card, CardHeader, CardContent,\n  CssBaseline, NoSsr\n} from '@material-ui/core';\nimport { NavDrawer } from \"./NavDrawer.js\";\nimport { ScrollableTabs } from \"./ScrollableTabs.js\";\nimport { BookTwoTone } from \"@material-ui/icons\";\nimport { PactTxStatus } from \"./PactTxStatus.js\";\n\n//config file for blockchain calls\nimport  {\n  RegisterGuardian,\n  RenderGuardians,\n  RegisterAmbassador,\n  DeactivateAmbassador,\n  ReactivateAmbassador,\n  RotateGuardian,\n  ProposeDaoUpgrade,\n  GuardianApproveHash,\n} from \"./Guardians.js\";\nimport {\n  RenderAmbassadors,\n  RotateAmbassador,\n  VoteToFreeze,\n  Freeze,\n} from \"./Ambassadors.js\";\nimport { InitConfig } from \"./InitConfig.js\"\nimport { RenderInitState, getContractState } from \"./InitState.js\";\n\nimport { ForumConfig, RenderForumState, getForumContractState } from \"./Forum/ForumConfig.js\";\nimport { MjolnirActionForms } from \"./Forum/Mjolnir.js\";\nimport { \n  RenderModerators,\n  RenderMembers,\n  MemberActionForms,\n  ModeratorActionForms,\n} from \"./Forum/Members.js\";\nimport { RenderModLog } from \"./Forum/ModLog.js\";\nimport {\n  RenderTopics,\n  RenderTopic,\n  TopicActionForms,\n} from \"./Forum/Topics.js\";\n\n\nconst App = () => {\n  const theme = React.useMemo(\n      () =>\n        createMuiTheme({\n          palette: {\n            primary: {\n              light: '#cb4584',\n              main: '#960057',\n              dark: '#cb4584',\n              contrastText: '#fff',\n            },\n            secondary: {\n              light: '#ffffff',\n              main: '#e3e8ed',\n              dark: '#b1b6bb',\n              contrastText: '#000',\n            },\n          },\n        }),\n      [],\n    );\n  \n  //Init Top Level States\n  const [initState, setInitState] = useState( {} );\n  const [guardians, setGuardians] = useState( [] );\n  const [ambassadors, setAmbassadors] = useState( [] );\n  const ambTabIdx = useState(0);\n  const grdTabIdx = useState(0);\n  \n  const getInitState = async () => {\n    const res = await getContractState(\"view-state\");\n    setInitState(res);\n  };\n\n  const getAmbassadors = async () => {\n    const res = await getContractState(\"view-ambassadors\");\n    setAmbassadors(res);\n  };\n\n  const getGuardians = async () => {\n    const res = await getContractState(\"view-guardians\");\n    setGuardians(res);\n  };\n\n  // Tx Status Top Level State\n  const [txStatus, setTxStatus] = useState(\"\");\n  const [tx, setTx] = useState( {} );\n  const [txRes, setTxRes] = useState( {} );\n  const pactTxStatus = {\n    tx:tx,setTx:setTx,\n    txStatus:txStatus,setTxStatus:setTxStatus,\n    txRes:txRes,setTxRes:setTxRes,\n  };\n\n  //Forum Top Level States\n  const [forumState, setForumState] = useState( {} );\n  const [members, setMembers] = useState([]);\n  const [moderators, setModerators] = useState([]);\n  const [modLog, setModLog] = useState( [] );\n  const [topics,setTopics] = useState( {} );\n  const [comments, setComments] = useState( {} );\n   \n  //Forum UI States\n  const mjolnirTabIdx = useState(0);\n  const memberTabIdx = useState(0);\n  const moderatorTabIdx = useState(0);\n  const topicTabIdx = useState(0);\n\n  const getForumState = async () => {\n    const res = await getForumContractState(\"view-forum-state\");\n    setForumState(res);\n  };\n\n  const getMembers = async () => {\n    const res = await getForumContractState(\"view-members\");\n    setMembers(res.filter(m=>m.moderator === false));\n    setModerators(res.filter(m=>m.moderator === true));\n  };\n\n  const getModLog = async () => {\n    const res = await getForumContractState(\"view-modlogs\");\n    setModLog(res);\n  };\n\n  const getTopics = async () => {\n    const res = await getForumContractState(\"view-topics\");\n    setTopics(res);\n  };\n\n  const getComments = async () => {\n    const res = await getForumContractState(\"view-comments\");\n    setComments(res);\n  };\n\n  const refresh = {\n    getForumState: getForumState,\n    getMembers: getMembers,\n    getTopics: getTopics,\n    getComments: getComments,\n  };\n\n  useEffect(() => {\n    getGuardians();\n    getInitState();\n    getAmbassadors();\n    getForumState();\n    getMembers();\n    getModLog();\n    getTopics();\n    getComments();\n    console.log('useEffect App.js Fired');\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <NoSsr>\n        <CssBaseline/>\n        <Router basename={process.env.PUBLIC_URL}>\n          <NavDrawer\n            entriesList={[\n                [{\n                  primary:\"dao.init\",\n                  subList:  \n                    [{\n                      primary:\"Config\",\n                      to:\"/daoConfig\"\n                    },{\n                      primary:\"Init State\",\n                      to:\"/initState\"\n                    },{\n                      primary:\"Ambassadors\",\n                      to:\"/ambassadors\"\n                    },{\n                      primary:\"Guardians\",\n                      to:\"/guardians\",\n                    }\n                  ]\n                },{\n                  primary:\"dao.forum\",\n                  subList:  \n                    [{\n                      primary:\"Config\",\n                      to:\"/forumConfig\"\n                    },{\n                      primary:\"Forum State\",\n                      to:\"/forumState\"\n                    },{\n                      primary:\"Mod Log\",\n                      to:\"/modlog\"\n                    },{\n                      primary:\"Mjolnir\",\n                      to:\"/mjolnir\"\n                    },{\n                      primary:\"Moderators\",\n                      to:\"/moderators\"\n                    },{\n                      primary:\"Members\",\n                      to:\"/members\"\n                    },{\n                      primary:\"Topics\",\n                      to:\"/topics\"\n                    }\n                  ]\n                }]\n          ]}>\n          <Container>\n            <Switch>\n              <Route path=\"/initConfig\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Contract and UI Configuration\"/>\n                  <CardContent>\n                    <InitConfig/>\n                  </CardContent>\n                </Card>\n              }/>\n            <Route path=\"/initState\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Contract State\"/>\n                  <CardContent>\n                    <RenderInitState initState={initState}/>\n                  </CardContent>\n                </Card>\n              }/>\n            <Route path=\"/guardians\" component={ () =>\n              <Card>\n                <CardHeader title=\"Guardians\"/>\n                <CardContent>\n                  <RenderGuardians guardians={guardians}/>\n                  <ScrollableTabs\n                    tabIdx={grdTabIdx}\n                    tabEntries={[\n                        {\n                          label:\"Register Guardian\",\n                          component:\n                            <RegisterGuardian\n                              pactTxStatus={pactTxStatus}\n                              refresh={() => getGuardians()}/>\n                        },{\n                          label:\"Rotate Guardian\",\n                          component:\n                            <RotateGuardian\n                              guardians={guardians}\n                              ambassadors={ambassadors}\n                              pactTxStatus={pactTxStatus}\n                              refresh={() => getAmbassadors()}/>\n                        },{\n                          label:\"Propose DAO Upgrade\",\n                          component:\n                            <ProposeDaoUpgrade\n                              guardians={guardians}\n                              pactTxStatus={pactTxStatus}\n                              refresh={() => getAmbassadors()}/>\n                        },{\n                          label:\"Approve DAO Upgrade\",\n                          component:\n                            <GuardianApproveHash\n                              guardians={guardians}\n                              pactTxStatus={pactTxStatus}\n                              refresh={() => getAmbassadors()}/>\n                        }\n                    ]}/>\n                </CardContent>\n              </Card>\n              }/>\n            <Route path=\"/ambassadors\" component={ () =>\n              <Card>\n                <CardHeader title=\"Ambassadors\"/>\n                <CardContent>\n                  <RenderAmbassadors ambassadors={ambassadors}/>\n                  <ScrollableTabs\n                    tabIdx={ambTabIdx}\n                    tabEntries={[\n                      {\n                        label:\"Register Ambassador\",\n                        component:\n                          <RegisterAmbassador\n                            guardians={guardians}\n                            pactTxStatus={pactTxStatus}\n                            refresh={() => getAmbassadors()}/>\n                      },{\n                        label:\"Deactivate Ambassador\",\n                        component:\n                          <DeactivateAmbassador\n                            guardians={guardians}\n                            ambassadors={ambassadors}\n                            pactTxStatus={pactTxStatus}\n                            refresh={() => getAmbassadors()}/>\n                      },{\n                        label:\"Reactivate Ambassador\",\n                        component:\n                          <ReactivateAmbassador\n                            guardians={guardians}\n                            ambassadors={ambassadors}\n                            pactTxStatus={pactTxStatus}\n                            refresh={() => getAmbassadors()}/>\n                      },{\n                        label:\"Rotate Ambassador\",\n                        component:\n                          <RotateAmbassador\n                            ambassadors={ambassadors}\n                            pactTxStatus={pactTxStatus}\n                            refresh={() => getAmbassadors()}/>\n                      },{\n                        label:\"Vote to Freeze\",\n                        component:\n                          <VoteToFreeze\n                            ambassadors={ambassadors}\n                            pactTxStatus={pactTxStatus}\n                            refresh={() => getAmbassadors()}/>\n                      },{\n                        label:\"Freeze\",\n                        component:\n                          <Freeze\n                            ambassadors={ambassadors}\n                            pactTxStatus={pactTxStatus}\n                            refresh={() => getAmbassadors()}/>\n                      }\n                    ]}/>\n                </CardContent>\n              </Card>\n              }/>  \n              <Route path=\"/forumConfig\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Contract and UI Configuration\"/>\n                  <CardContent>\n                    <ForumConfig/>\n                  </CardContent>\n                </Card>\n              }/>\n              <Route path=\"/forumState\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Contract State\"/>\n                  <CardContent>\n                    <RenderForumState forumState={forumState}/>\n                  </CardContent>\n                </Card>\n              }/>\n              <Route path=\"/mjolnir\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Mjolnir Powers\"/>\n                  <CardContent>\n                    <MjolnirActionForms \n                      members={members}\n                      moderators={moderators}\n                      tabIdx={mjolnirTabIdx}\n                      pactTxStatus={pactTxStatus}\n                      refresh={refresh}\n                    />\n                  </CardContent>\n                </Card>\n              }/>\n              <Route path=\"/moderators\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Moderators\"/>\n                  <CardContent>\n                    <RenderModerators moderators={moderators}/>\n                    <ModeratorActionForms\n                      members={members}\n                      moderators={moderators}\n                      guardians={guardians}\n                      ambassadors={ambassadors}\n                      tabIdx={moderatorTabIdx}\n                      pactTxStatus={pactTxStatus}\n                      refresh={refresh}\n                    />\n                  </CardContent>\n                </Card>\n              }/>\n              <Route path=\"/members\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Members\"/>\n                  <CardContent>\n                    <RenderMembers members={members}/>\n                    <MemberActionForms\n                      members={members}\n                      moderators={moderators}\n                      guardians={guardians}\n                      ambassadors={ambassadors}\n                      tabIdx={memberTabIdx}\n                      pactTxStatus={pactTxStatus}\n                      refresh={refresh}\n                    />\n                  </CardContent>\n                </Card>\n              }/>\n              <Route path=\"/modlog\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Moderation Log\"/>\n                  <CardContent>\n                    <RenderModLog modLog={modLog}/>\n                  </CardContent>\n                </Card>\n              }/>\n              <Route path=\"/topics\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Topics\"/>\n                  <CardContent>\n                    <RenderTopics topics={topics}/>\n                    <TopicActionForms\n                      members={members}\n                      moderators={moderators}\n                      topics={topics}\n                      tabIdx={topicTabIdx}\n                      pactTxStatus={pactTxStatus}\n                      refresh={refresh}\n                    />\n                  </CardContent>\n                </Card>\n              }/>\n\n            <Route path=\"/\">\n              <Redirect to=\"/topics\" />\n            </Route>\n\n            </Switch>\n          </Container>\n          </NavDrawer>\n        </Router>\n      </NoSsr>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/*\n\nBLOCKCHAIN CONFIGURATION FILE\n\n  initalize all data for pact-lang-api kadena blockchain calls\n\n  modify this file to interact with different\n    chains, networks, contracts\n\n  documentation:\n    https://pact-language.readthedocs.io/en/stable/\n\n  pact tutorials:\n    https://pactlang.org/\n\n*/\n\n//chain that contract lives on\nconst chainId = \"0\";\n\n//id of network version\nconst networkId = \"testnet04\";\n\n//network node\nconst node = \"api.testnet.chainweb.com\";\n\n//unique contract name\nconst forumContractName = \"forum\";\nconst forumConstants = {}\n\n//unique contract name\nconst daoContractName = \"init\";\nconst daoConstants = {\n  \"DAO_ACCT_NAME\":\"dao.init\",\n  \"GUARDIAN_KDA_REQUIRED\": 500000};\n\n//unique gas station contract name\nconst gasStationName = \"memory-wall-gas-station\";\n\n//namespace that precedes contract name\nconst namespace = \"dao\";\n\n//api host to send requests\nconst host = `https://${node}/chainweb/0.0/${networkId}/chain/${chainId}/pact`;\n\n//creation time for request\nconst creationTime = () => Math.round(new Date().getTime() / 1000) - 15;\n\n//JSON with all necessary blockchain call data\nconst daoAPI = {\n  contractName: daoContractName,\n  gasStationName: gasStationName,\n  namespace: namespace,\n  contractAddress: `${namespace}.${daoContractName}`,\n  gasStationAddress: `${namespace}.${gasStationName}`,\n  explorerURL: `https://explorer.chainweb.com/${networkId.slice(0, -2)}`,\n  constants: daoConstants,\n  meta: {\n    networkId: networkId,\n    chainId: chainId,\n    host: host,\n    creationTime: creationTime,\n    //gas price at lowest possible denomination\n    gasPrice: 0.00000000001,\n    //high gas limit for tx\n    gasLimit: 10000,\n    //time a tx lives in mempool since creationTime\n    ttl: 28800,\n    //sender === gas payer of the transaction\n    //  set to our gas station account defined in memory-wall-gas-station.pact\n    sender: \"mw-free-gas\",\n    //nonce here doesnt matter since the tx will never have the same hash\n    nonce: \"some nonce that doesnt matter\",\n  },\n};\n\n//JSON with all necessary blockchain call data\nconst forumAPI = {\n  contractName: forumContractName,\n  gasStationName: gasStationName,\n  namespace: namespace,\n  contractAddress: `${namespace}.${forumContractName}`,\n  gasStationAddress: `${namespace}.${gasStationName}`,\n  explorerURL: `https://explorer.chainweb.com/${networkId.slice(0, -2)}`,\n  constants: forumConstants,\n  meta: {\n    networkId: networkId,\n    chainId: chainId,\n    host: host,\n    creationTime: creationTime,\n    //gas price at lowest possible denomination\n    gasPrice: 0.00000000001,\n    //high gas limit for tx\n    gasLimit: 10000,\n    //time a tx lives in mempool since creationTime\n    ttl: 28800,\n    //sender === gas payer of the transaction\n    //  set to our gas station account defined in memory-wall-gas-station.pact\n    sender: \"mw-free-gas\",\n    //nonce here doesnt matter since the tx will never have the same hash\n    nonce: \"some nonce that doesnt matter\",\n  },\n};\n\nconst keyFormatter = (str) =>\n  str.replace(new RegExp(\"[A-Z]+\",\"gm\"),\" $&\").replace(new RegExp(\"^[a-z]\",\"gm\"),k => k.toUpperCase());\n\nmodule.exports = { daoAPI: daoAPI, forumAPI: forumAPI, keyFormatter: keyFormatter }\n"],"sourceRoot":""}