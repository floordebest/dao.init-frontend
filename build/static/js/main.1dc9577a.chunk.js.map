{"version":3,"sources":["NavDrawer.js","ScrollableTabs.js","util.js","PactTxStatus.js","Guardians.js","Ambassadors.js","InitConfig.js","InitState.js","Forum/ForumConfig.js","Forum/Mjolnir.js","App.js","serviceWorker.js","index.js","kadena-config.js","kadena_r_rev_3_whi_lor.png"],"names":["useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","zIndex","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","nested","paddingLeft","logo","height","ListItemLink","props","icon","primary","to","subList","hasSubList","Array","isArray","React","useState","open","setOpen","classes","renderLink","useMemo","forwardRef","itemProps","ref","Fragment","ListItem","button","component","ListItemIcon","ListItemText","onClick","Collapse","in","timeout","unmountOnExit","List","disablePadding","className","dense","map","entry","NavDrawer","window","entriesList","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","entries","Divider","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","color","aria-label","edge","src","alt","Hidden","smUp","implementation","Drawer","variant","anchor","direction","onClose","paper","ModalProps","keepMounted","xsDown","children","TabPanel","value","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","backgroundColor","palette","background","marginTop","ScrollableTabs","tabEntries","tabIdx","setValue","Tabs","onChange","event","newValue","indicatorColor","textColor","scrollButtons","idx","Tab","label","dashStyleNames2Text","flexWrap","margin","withoutLabel","textField","str","split","k","replace","RegExp","a","toUpperCase","join","isRootPactValue","val","renderPactValue","toLocaleString","JSON","stringify","toString","useToplevelTableStyles","table","minWidth","useNestedTableStyles","borderBottom","PactSingleJsonAsTable","json","isNested","header","keyFormatter","valFormatter","internals","TableHead","TableRow","TableCell","TableBody","Object","v","key","Table","size","TableContainer","Paper","PactJsonListAsTable","keyOrder","length","keys","obj","MakeInputField","inputField","type","options","placeholder","TextField","select","required","fullWidth","e","target","MenuItem","ListSubheader","multiline","rows","Checkbox","checked","MakeForm","inputFields","onSubmit","tx","txRes","txStatus","setTxStatus","wasSubmitted","setWasSubmitted","useEffect","autoComplete","f","CardActions","Button","disabled","LinearProgress","PactTxStatus","modalOpen","setModalOpen","severity","Alert","action","fontSize","AlertTitle","Grid","justify","alignItems","item","orientation","flexItem","href","daoAPI","explorerURL","hash","Modal","Container","maxWidth","formControl","selectEmpty","sendGuardianCmd","setTx","setTxRes","refresh","user","cmd","envData","caps","toSign","pactCode","Pact","lang","mkCap","contractAddress","gasLimit","meta","chainId","ttl","sender","console","log","wallet","sign","signed","Error","sendSigned","host","txReqKeys","retries","res","Promise","r","setTimeout","fetch","poll","result","status","RenderGuardians","guardians","RegisterAmbassador","grd","setGrd","newAmb","setNewAmb","ambGrd","setAmbGrd","pactTxStatus","g","evt","preventDefault","ks","parse","DeactivateAmbassador","amb","setAmb","ambassadors","ReactivateAmbassador","RotateGuardian","voteKs","setVoteKs","ProposeDaoUpgrade","acct","setAcct","hsh","setHsh","GuardianApproveHash","RegisterGuardian","constants","RenderAmbassadors","sendAmbassadorCmd","VoteToFreeze","Freeze","RotateAmbassador","setKs","InitConfig","getContractState","local","mkMeta","gasPrice","creationTime","all","data","RenderInitState","initState","getForumContractState","forumAPI","RenderForumState","forumState","ForumConfig","sendMjolnirCmd","RotateMjolnir","newGrd","setNewGrd","DisableModerator","moderators","mod","setMod","EnableModerator","MjolnirWriteMember","members","setUser","newKs","setNewKs","isMod","setIsMod","m","MjolnirActionForms","getForumState","getMembers","App","createMuiTheme","light","main","dark","contrastText","secondary","setInitState","setGuardians","setAmbassadors","ambTabIdx","grdTabIdx","getInitState","getAmbassadors","getGuardians","setForumState","setMembers","setModerators","mjolnirTabIdx","filter","moderator","ThemeProvider","NoSsr","basename","process","path","Card","CardHeader","title","CardContent","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","gasStationName","Math","round","Date","getTime","contractName","namespace","gasStationAddress","slice","networkId","nonce","module","exports"],"mappings":"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","file":"static/js/main.1dc9577a.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  AppBar,\n  Collapse,\n  CssBaseline,\n  Divider,\n  Drawer,\n  Hidden,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SendIcon from '@material-ui/icons/Send';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport logo from \"./kadena_r_rev_3_whi_lor.png\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  logo: {\n    height: \"60px\",\n  }\n}));\n\nconst ListItemLink = (props) => {\n  const { icon, primary, to, subList } = props;\n  const hasSubList = subList && Array.isArray(subList) ;\n  const [open, setOpen] = React.useState(true);\n  const classes = useStyles();\n\n  const renderLink = React.useMemo(\n    () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n    [to],\n  );\n\n  return (\n    <React.Fragment>\n      <li>\n        <ListItem button component={renderLink}>\n          {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n          <ListItemText primary={primary} />\n          {hasSubList ? (\n            open ? <ExpandLess onClick={()=>setOpen(!open)} />\n                 : <ExpandMore onClick={()=>setOpen(!open)} />\n            ) : null}\n        </ListItem>\n      </li>\n        {hasSubList ?\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding className={classes.nested} dense>\n              {subList.map(entry =>\n                <ListItemLink\n                  icon={entry.icon}\n                  primary={entry.primary}\n                  to={entry.to}\n                  subList={entry.subList}\n                  />\n              )}\n            </List>\n          </Collapse>\n        : null }\n    </React.Fragment>\n  );\n};\n\nexport const NavDrawer = (props) => {\n  const { window, entriesList } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      {entriesList.map(entries =>\n        <React.Fragment>\n          <Divider />\n          <List>\n            {entries.map(entry =>\n              <ListItemLink\n                icon={entry.icon}\n                primary={entry.primary}\n                to={entry.to}\n                subList={entry.subList}/>\n            )}\n          </List>\n        </React.Fragment>\n       )}\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <img src={logo} alt=\"logo\" className={classes.logo}/>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {props.children}\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Tab,\n  Tabs,\n  Typography,\n  Box,\n} from '@material-ui/core';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport const ScrollableTabs = (props) => {\n  const { tabEntries } = props;\n  const classes = useStyles();\n  const [value, setValue] = props.tabIdx;\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          {tabEntries.map((entry,idx)=>\n            <Tab label={entry.label} {...a11yProps(idx)}/>\n          )}\n        </Tabs>\n      </AppBar>\n      {tabEntries.map((entry,idx)=>\n        <TabPanel value={value} index={idx}>\n          {entry.component}\n        </TabPanel>\n      )}\n    </div>\n  );\n}\n","// For util functions\nimport React, {useState, useEffect} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n//Table Stuff\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  ListSubheader,\n  Checkbox,\n} from '@material-ui/core';\nimport {\n  Button,\n  LinearProgress,\n  TextField,\n  MenuItem,\n  CardActions,\n} from '@material-ui/core';\n//pact-lang-api for blockchain calls\n//config file for blockchain calls\nimport { PactTxStatus } from \"./PactTxStatus.js\";\n\nexport const useInputStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '25ch',\n  },\n}));\n\n//config file for blockchain calls\n\nexport const dashStyleNames2Text = str => str.split(\"-\").map(k=>k.replace(new RegExp(\"^.\",\"gm\"),a=>a.toUpperCase())).join(' ');\n\nconst isRootPactValue = (val) => {\n  if (val && typeof val === 'object' ) {\n    if ('timep' in val || 'int' in val || 'decimal' in val || 'time' in val ) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return true;\n  }\n};\n\nexport const isPactKeyset = (val) => {\n  if (val && typeof val === 'object' ) {\n    if (Object.keys(val).length === 2 &&'pred' in val && 'keys' in val) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n};\n\n\nexport const renderPactValue = (val) => {\n  if (val && typeof val === 'object') {\n    if ('time' in val) {\n      return val['time'];\n    } else if ('timep' in val) {\n      return val['timep'];\n    } else if ('int' in val) {\n      return typeof val['int'] === 'string' ? val['int'] : val['int'].toLocaleString();\n    } else if ('decimal' in val) {\n      return typeof val['decimal'] === 'string' ? val['decimal'] : val['decimal'].toLocaleString();\n    } else if ('pred' in val && 'keys' in val) {\n      return JSON.stringify(val);\n    } else {\n      return JSON.stringify(val);\n    }\n  } else if (typeof val === 'boolean') {\n    return val.toString();\n  } else if (typeof val === 'string') {\n    return val;\n  } else if (typeof val === 'number'){\n    return val.toLocaleString()\n  } else {\n    return JSON.stringify(val);\n  }\n};\n\nconst useToplevelTableStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst useNestedTableStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nexport const PactSingleJsonAsTable = (props) => {\n  const json = props.json || {};\n  const isNested = props.isNested || false;\n  const classes = isNested ? useNestedTableStyles : useToplevelTableStyles;\n  const header = props.header || [];\n  const keyFormatter = props.keyFormatter ? props.keyFormatter : (k) => {return (k)};\n  const valFormatter = props.valFormatter ? props.valFormatter : (str) => <code>{renderPactValue(str)}</code>;\n  const internals = () =>\n    <React.Fragment>\n      <TableHead>\n        <TableRow>\n        {header.map((val) => {\n          return <TableCell>{val}</TableCell>;\n        })}\n        </TableRow>\n      </TableHead>\n\n      <TableBody>\n        {Object.entries(json).map(([k,v]) => {\n          return (\n          <TableRow key={k}>\n            { Array.isArray(json) === false ? (\n              <TableCell>{keyFormatter(k)}</TableCell>\n            ) : (\n              <React.Fragment></React.Fragment>\n            )}\n            { isRootPactValue(v) ? (\n              <TableCell>{valFormatter(v)}</TableCell>\n            ) : typeof v === \"object\" ? (\n              <PactSingleJsonAsTable\n                json={v}\n                keyFormatter={keyFormatter}\n                valFormatter={valFormatter}\n                isNested={true}/>\n            ) : typeof v === \"function\" ? (\n              <TableCell>{valFormatter(v.toString())}</TableCell>\n            ) : (\n              <TableCell>{valFormatter(v)}</TableCell>\n            )}\n          </TableRow>\n          )\n        })}\n      </TableBody>\n    </React.Fragment>;\n\n  return (\n    isNested ? (\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    ) : (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    </TableContainer>\n    )\n)};\n\nexport const PactJsonListAsTable = (props) => {\n  const json = props.json || {};\n  const isNested = props.isNested || false;\n  const classes = isNested ? useNestedTableStyles : useToplevelTableStyles;\n  const header = props.header || [];\n  let keyOrder = [];\n  if (props.keyOrder) {\n    keyOrder = props.keyOrder;\n  } else if (Array.isArray(props.json)) {\n    if ( json.length > 0 ) {\n      keyOrder = Object.keys(json[0]);\n    }\n  }\n  const keyFormatter = props.keyFormatter ? props.keyFormatter : (k) => {return (k)};\n  const valFormatter = props.valFormatter ? props.valFormatter : (str) => <code>{renderPactValue(str)}</code>;\n\n  const internals = () =>\n    <React.Fragment>\n        <TableHead>\n          <TableRow>\n          {header.map((val) => (\n            <TableCell>{val}</TableCell>\n          ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {json.map(obj => (\n            <TableRow key={obj[keyOrder[0]]}>\n              { keyOrder.map(k => {\n                  const v = obj[k];\n                  return (\n                    <TableCell>\n                      {isRootPactValue(v) ? (\n                          valFormatter(v)\n                      ) : Array.isArray(v) ? (\n                          <PactJsonListAsTable\n                            json={v}\n                            keyFormatter={keyFormatter}\n                            valFormatter={valFormatter}\n                            isNested={true}/>\n                      ) : typeof v === \"object\" ? (\n                          <PactSingleJsonAsTable\n                            json={v}\n                            keyFormatter={keyFormatter}\n                            valFormatter={valFormatter}\n                            isNested={true}/>\n                      ) : typeof v === \"function\" ? (\n                          valFormatter(v.toString())\n                      ) : (\n                          valFormatter(v)\n                      )}\n                    </TableCell>\n                  )\n                }\n            )}\n            </TableRow>\n          ))}\n      </TableBody>\n    </React.Fragment>;\n\n  return (\n    isNested ? (\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    ) : (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size='small' aria-label=\"simple table\">\n        {internals()}\n      </Table>\n    </TableContainer>\n    )\n)};\n\nconst MakeInputField = (props) => {\n  const {\n    type,\n    label,\n    options,\n    placeholder,\n    className,\n    onChange,\n    value,\n  } = props.inputField;\n\n  return ( type === 'select'\n    ? <TextField\n        id=\"outlined-multiline-static\"\n        select\n        required\n        fullWidth\n        className={className}\n        variant=\"outlined\"\n        label={label}\n        onChange={e => onChange(e.target.value)}\n        >\n        { Array.isArray(options) ?\n            options.map(k =>\n              <MenuItem key={k} value={k}>\n                {k}\n              </MenuItem>\n            )\n          : Object.keys(options).map(k => \n              <React.Fragment>\n                <ListSubheader>{k}</ListSubheader>\n                {\n                  options[k].map(v => \n                    <MenuItem key={`${k}-${v}`} value={v}>\n                      {v}\n                    </MenuItem>\n                  )\n                }\n              </React.Fragment>)\n        }\n      </TextField>\n    : type === 'textFieldSingle' ?\n      <TextField\n        required\n        fullWidth\n        value={value}\n        className={className}\n        variant='outlined'\n        label={label}\n        onChange={e => onChange(e.target.value)}\n      />\n    : type === 'textFieldMulti' ?\n      <TextField\n        required\n        fullWidth\n        label={label}\n        className={className}\n        multiline\n        rows={4}\n        variant=\"outlined\"\n        placeholder={placeholder}\n        onChange={e => onChange(e.target.value)}\n      />\n    : type === 'checkbox' ? \n        <Checkbox\n          checked={value}\n          onChange={e=>onChange(e.target.value)}\n          color=\"primary\"\n          label={label}\n        />\n    : null\n  )\n\n};\n\nexport const MakeForm = (props) => {\n  const {\n    inputFields,\n    onSubmit,\n    tx, txRes, txStatus, setTxStatus\n  } = props;\n  const [wasSubmitted,setWasSubmitted] = useState(false);\n  useEffect(()=>setWasSubmitted(false),[inputFields]);\n  useEffect(()=>txStatus !== \"\" ? setWasSubmitted(true) : setWasSubmitted(wasSubmitted), [txStatus])\n\n  return (\n    <div>\n      <form\n        autoComplete=\"off\"\n        onSubmit={e => onSubmit(e)}>\n        {inputFields.map(f =>\n          <MakeInputField inputField={f}/>\n        )}\n        <CardActions>\n          {txStatus === 'pending'\n            ? null\n            : <Button variant=\"outlined\" color=\"default\" type=\"submit\" disabled={wasSubmitted}>\n                Submit\n              </Button>\n          }\n        </CardActions>\n      </form>\n      { txStatus === 'pending' ? <LinearProgress /> : null }\n      <PactTxStatus tx={tx} txRes={txRes} txStatus={txStatus} setTxStatus={setTxStatus}/>\n    </div>\n  )\n};\n","//basic React api imports\nimport React, {useState, useEffect} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  Container,\n  Paper,\n  Box,\n  Grid,\n  Divider,\n} from '@material-ui/core';\nimport { Modal, Button } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { daoAPI } from \"./kadena-config.js\";\nimport {dashStyleNames2Text, PactSingleJsonAsTable} from \"./util.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport const PactTxStatus = (props) => {\n  // TODO: make these msgs hideable\n  const tx = props.tx;\n  const txRes = props.txRes;\n  const txStatus = props.txStatus;\n  const [open,setOpen] = useState(true);\n  const [modalOpen,setModalOpen] = useState(false);\n  const classes = useStyles();\n  const severity = txStatus === \"pending\" ? 'info'\n                   : txStatus === \"success\" ? 'success'\n                   : txStatus === \"timeout\" ? 'warning'\n                   : 'error' ;\n  useEffect(()=>\n    setOpen(true)\n  ,[txStatus]);\n\n  return (\n    txStatus ?\n      <div className={classes.root}>\n        <Collapse in={open}>\n          <Alert\n            severity={severity}\n            action={\n              <IconButton\n                aria-label=\"close\"\n                color=\"inherit\"\n                size=\"small\"\n                onClick={() => setOpen(false)}>\n                <CloseIcon fontSize=\"inherit\" />\n              </IconButton>\n\n            }\n          >\n\n          <AlertTitle>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                {dashStyleNames2Text(txStatus)}\n              </Grid>\n              {txStatus === 'validation-error' || txStatus === 'failure'\n                ?\n                  <Grid item>\n                    <Divider orientation=\"vertical\" flexItem />\n                    <Button size='small' onClick={()=>setModalOpen(true)}>\n                      View\n                    </Button>\n                  </Grid>\n                : <React.Fragment/>}\n            </Grid>\n\n          </AlertTitle>\n            { txStatus === \"pending\" ? (\n              <React.Fragment>\n                <p>Awaiting Confirmation</p>\n                <a href={`${daoAPI.explorerURL}/tx/${tx.hash}`}>\n                  Eventual Block Explorer Link\n                </a>\n              </React.Fragment>\n            ) : txStatus === \"success\" ? (\n              <React.Fragment>\n                <a href={`${daoAPI.explorerURL}/tx/${tx.hash}`}>\n                  View transaction in Block Explorer\n                </a>\n              </React.Fragment>\n            ) : txStatus === \"failure\" ? (\n              <React.Fragment>\n                <a href={`${daoAPI.explorerURL}/tx/${tx.hash}`}>\n                  View transaction in Block Explorer\n                </a>\n                <div>\n                  <Modal\n                    open={modalOpen}\n                    onClose={() => setModalOpen(false)}\n                  >\n                    <Container maxWidth=\"lg\">\n                      <PactSingleJsonAsTable json={txRes}/>\n                    </Container>\n                  </Modal>\n                </div>\n              </React.Fragment>\n            ) : txStatus === \"timeout\" ? (\n              <React.Fragment>\n                <p>...but your tx was sent.</p>\n                <a href={`${daoAPI.explorerURL}/tx/${tx.hash}`}>\n                  View transaction in Block Explorer\n                </a>\n              </React.Fragment>\n            ) : txStatus === \"validation-error\" ? (\n              <React.Fragment>\n                <Box>\n                  Transaction was not sent to Blockchain. Check your keys or metadata.\n                </Box>\n                <div>\n                  <Modal\n                    open={modalOpen}\n                    onClose={() => setModalOpen(false)}\n                  >\n                    <Container maxWidth=\"md\">\n                        <Paper>{txRes.toString()}</Paper>\n                    </Container>\n                  </Modal>\n                </div>\n              </React.Fragment>\n            ) : (\n              <React.Fragment/>\n            )}\n          </Alert>\n        </Collapse>\n      </div>\n    : <React.Fragment/>\n  );\n};\n","//basic React api imports\nimport React, { useState } from \"react\";\n//Material Stuff\nimport {\n  makeStyles,\n} from '@material-ui/styles';\n//pact-lang-api for blockchain calls\nimport Pact from \"pact-lang-api\";\n//config file for blockchain calls\nimport { daoAPI } from \"./kadena-config.js\";\nimport {\n  PactJsonListAsTable,\n  MakeForm,\n } from \"./util.js\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    margin: \"5px auto\",\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: \"10px auto\",\n  },\n}));\n\n\nconst sendGuardianCmd = async (\n  setTx,\n  setTxStatus,\n  setTxRes,\n  refresh,\n  user, cmd, envData={}, caps=[]\n) => {\n    try {\n      //creates transaction to send to wallet\n      const toSign = {\n          pactCode: cmd,\n          caps: (Array.isArray(caps) && caps.length\n            ? caps :\n            Pact.lang.mkCap(\"Guadian Cap\"\n                           , \"Authenticates that you're a guardian\"\n                           , `${daoAPI.contractAddress}.GUARDIAN`\n                           , [user])),\n          gasLimit: daoAPI.meta.gasLimit,\n          chainId: daoAPI.meta.chainId,\n          ttl: daoAPI.meta.ttl,\n          sender: user,\n          envData: envData\n      }\n      console.log(\"toSign\", toSign)\n      //sends transaction to wallet to sign and awaits signed transaction\n      const signed = await Pact.wallet.sign(toSign)\n      console.log(\"signed\", signed)\n      if ( typeof signed === 'object' && 'hash' in signed ) {\n        setTx(signed);\n      } else {\n        throw new Error(\"Signing API Failed\");\n      }\n\n      //sends signed transaction to blockchain\n      const txReqKeys = await Pact.wallet.sendSigned(signed, daoAPI.meta.host)\n      console.log(\"txReqKeys\", txReqKeys)\n      //set html to wait for transaction response\n      //set state to wait for transaction response\n      setTxStatus('pending')\n      try {\n        //listens to response to transaction sent\n        //  note method will timeout in two minutes\n        //    for lower level implementations checkout out Pact.fetch.poll() in pact-lang-api\n        let retries = 8;\n        let res = {};\n        while (retries > 0) {\n          //sleep the polling\n          await new Promise(r => setTimeout(r, 15000));\n          res = await Pact.fetch.poll(txReqKeys, daoAPI.meta.host);\n          try {\n            if (res[signed.hash].result.status) {\n              retries = -1;\n            } else {\n              retries = retries - 1;\n            }\n          } catch(e) {\n              retries = retries - 1;\n          }\n        };\n        //keep transaction response in local state\n        setTxRes(res)\n        if (res[signed.hash].result.status === \"success\"){\n          console.log(\"tx status set to success\");\n          //set state for transaction success\n          setTxStatus('success');\n          refresh();\n        } else if (retries === 0) {\n          console.log(\"tx status set to timeout\");\n          setTxStatus('timeout');\n          refresh();\n        } else {\n          console.log(\"tx status set to failure\");\n          //set state for transaction failure\n          setTxStatus('failure');\n        }\n      } catch(e) {\n        // TODO: use break in the while loop to capture if timeout occured\n        console.log(\"tx api failure\",e);\n        setTxRes(e);\n        setTxStatus('failure');\n      }\n    } catch(e) {\n      console.log(\"tx status set to validation error\",e);\n      //set state for transaction construction error\n      setTxStatus('validation-error');\n    }\n};\n\nexport const RenderGuardians = (props) => {\n  return (\n    <PactJsonListAsTable\n      header={[\"Guardian\",\"Committed KDA\",\"Approved Hash\",\"Approval Date\",\"Voting Guard\",\"Forum Moderation Guard\"]}\n      keyOrder={[\"k\",\"committed-kda\",\"approved-hash\",\"approved-date\",\"guard\",\"moderate-guard\"]}\n      json={props.guardians}\n    />\n)};\n\nexport const RegisterAmbassador = (props) => {\n  const {\n    refresh,\n    guardians,\n  } = props;\n  const [grd, setGrd] = useState( \"\" );\n  const [newAmb, setNewAmb] = useState( \"\" );\n  const [ambGrd, setAmbGrd] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setGrd,\n      options:guardians.map((g)=>g['k']),\n    },\n    {\n      type:'textFieldSingle',\n      label:'Ambassador Account Name',\n      className:classes.formControl,\n      value:newAmb,\n      onChange:setNewAmb\n    },\n    {\n      type:'textFieldMulti',\n      label:'Ambassador Account Guard',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:ambGrd,\n      onChange:setAmbGrd,\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n          ,grd\n          ,`(${daoAPI.contractAddress}.register-ambassador \"${grd}\" \"${newAmb}\" (read-keyset 'ks))`\n          ,{ks: JSON.parse(ambGrd)}\n        );\n      } catch (e) {\n        console.log(\"Ambassador Registration Submit Error\",typeof e, e, grd,newAmb,ambGrd);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const DeactivateAmbassador = (props) => {\n  const {refresh} = props;\n  const [grd, setGrd] = useState( \"\" );\n  const [amb, setAmb] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      // console.log(grd,newAmb);\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n        ,grd\n        ,`(${daoAPI.contractAddress}.deactivate-ambassador \"${grd}\" \"${amb}\")`\n        )\n      } catch (e) {\n        console.log(\"deactivate-ambassador Submit Error\",typeof e, e, grd,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n      };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setGrd,\n      options:props.guardians.map((g)=>g['k']),\n    },\n    {\n      type:'select',\n      label:'Select Ambassador',\n      className:classes.formControl,\n      onChange:setAmb,\n      options:props.ambassadors.map((g)=>g['k']),\n    },\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nexport const ReactivateAmbassador = (props) => {\n  const {\n    refresh,\n  } = props;\n  const [grd, setGrd] = useState( \"\" );\n  const [amb, setAmb] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      // console.log(grd,newAmb);\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n        ,grd\n        ,`(${daoAPI.contractAddress}.reactivate-ambassador \"${grd}\" \"${amb}\")`\n        )\n      } catch (e) {\n        console.log(\"reactivate-ambassador Submit Error\",typeof e, e, grd,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n    };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setGrd,\n      options:props.guardians.map((g)=>g['k']),\n    },\n    {\n      type:'select',\n      label:'Select Ambassador',\n      className:classes.formControl,\n      onChange:setAmb,\n      options:props.ambassadors.map((g)=>g['k']),\n    },\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n}\n\nexport const RotateGuardian = (props) => {\n  const {\n    refresh,\n    guardians,\n  } = props;\n  const [grd, setGrd] = useState( \"\" );\n  const [voteKs, setVoteKs] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      // console.log(grd,newAmb);\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n        ,grd\n        ,`(${daoAPI.contractAddress}.rotate-guardian \"${grd}\" (read-keyset 'voteKs))`\n        ,{voteKs: JSON.parse(voteKs)})\n      } catch (e) {\n        console.log(\"rotate-guardian Submit Error\",typeof e, e, grd, voteKs,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n    };\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setGrd,\n      options:guardians.map((g)=>g['k']),\n    },{\n      type:'textFieldMulti',\n      label:'Guardian Voting Guard',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:voteKs,\n      onChange:setVoteKs,\n    }\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nexport const ProposeDaoUpgrade = (props) => {\n  const {\n    refresh,\n    guardians,\n  } = props;\n  const [acct, setAcct] = useState( \"\" );\n  const [hsh, setHsh] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setAcct,\n      options:guardians.map((g)=>g['k']),\n    },\n    {\n      type:'textFieldSingle',\n      label:'Proposed Upgrade Hash',\n      className:classes.formControl,\n      value:hsh,\n      onChange:setHsh\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n          ,acct\n          ,`(${daoAPI.contractAddress}.propose-dao-upgrade \"${acct}\" \"${hsh}\")`\n        );\n      } catch (e) {\n        console.log(\"propose-dao-upgrade Submit Error\",typeof e, e, acct,hsh,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const GuardianApproveHash = (props) => {\n  const {\n    refresh,\n    guardians,\n  } = props;\n  const [acct, setAcct] = useState( \"\" );\n  const [hsh, setHsh] = useState( \"\" );\n  const {txStatus, setTxStatus,\n         tx, setTx,\n         txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Guardian',\n      className:classes.formControl,\n      onChange:setAcct,\n      options:guardians.map((g)=>g['k']),\n    },\n    {\n      type:'select',\n      label:'Proposed Upgrade Hash',\n      className:classes.formControl,\n      value:setHsh,\n      options:guardians.map((g)=>g['approved-hash']),\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n          ,acct\n          ,`(${daoAPI.contractAddress}.guardian-approve-hash \"${acct}\" \"${hsh}\")`\n        );\n      } catch (e) {\n        console.log(\"guardian-approve-hash Submit Error\",typeof e, e, acct,hsh,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const RegisterGuardian = (props) => {\n  const {\n    refresh,\n  } = props;\n  const [grd, setGrd] = useState( \"\" );\n  const [voteKs, setVoteKs] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'textFieldSingle',\n      label:'Guardian Account Name',\n      className:classes.formControl,\n      value:grd,\n      onChange:setGrd\n    },\n    {\n      type:'textFieldMulti',\n      label:'Guardian Voting Guard',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:voteKs,\n      onChange:setVoteKs,\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendGuardianCmd(setTx,setTxStatus,setTxRes,refresh\n          ,grd\n          ,`(${daoAPI.contractAddress}.register-guardian \"${grd}\" (read-keyset 'voteKs))`\n          ,{voteKs: JSON.parse(voteKs)}\n          ,[Pact.lang.mkCap(\"TRANSFER Cap\"\n                           , \"Stake the needed amount\"\n                           , `coin.TRANSFER`\n                           , [grd, daoAPI.constants[\"DAO_ACCT_NAME\"], daoAPI.constants[\"GUARDIAN_KDA_REQUIRED\"]])]\n        );\n      } catch (e) {\n        console.log(\"Guardian Registration Submit Error\",typeof e, e, grd,voteKs);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n","//basic React api imports\nimport React, { useState } from \"react\";\n//Material Stuff\nimport {\n  makeStyles,\n} from '@material-ui/styles';\n//pact-lang-api for blockchain calls\nimport Pact from \"pact-lang-api\";\n//config file for blockchain calls\nimport { daoAPI } from \"./kadena-config.js\";\nimport {\n  PactJsonListAsTable,\n  MakeForm,\n } from \"./util.js\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    margin: \"5px auto\",\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: \"10px auto\",\n  },\n}));\n\nexport const RenderAmbassadors = (props) => {\n  return (\n    <PactJsonListAsTable\n      header={[\"Ambassador\",\"Active\",\"Voted to Freeze\",\"Guard\"]}\n      keyOrder={[\"k\",\"active\",\"voted-to-freeze\",\"guard\"]}\n      json={props.ambassadors}\n    />\n)};\n\nconst sendAmbassadorCmd = async (\n  setTx,\n  setTxStatus,\n  setTxRes,\n  refresh,\n  user, cmd, envData={}, caps=[]\n) => {\n    try {\n      //creates transaction to send to wallet\n      const toSign = {\n          pactCode: cmd,\n          caps: (Array.isArray(caps) && caps.length\n            ? caps :\n            Pact.lang.mkCap(\"Ambassador Cap\"\n                           , \"Authenticates that you're an ambassador\"\n                           , `${daoAPI.contractAddress}.AMBASSADOR`\n                           , [user])),\n          gasLimit: daoAPI.meta.gasLimit,\n          chainId: daoAPI.meta.chainId,\n          ttl: daoAPI.meta.ttl,\n          sender: user,\n          envData: envData\n      }\n      console.log(\"toSign\", toSign)\n      //sends transaction to wallet to sign and awaits signed transaction\n      const signed = await Pact.wallet.sign(toSign)\n      console.log(\"signed\", signed)\n      setTx(signed)\n      //sends signed transaction to blockchain\n      const txReqKeys = await Pact.wallet.sendSigned(signed, daoAPI.meta.host)\n      console.log(\"txReqKeys\", txReqKeys)\n      //set html to wait for transaction response\n      //set state to wait for transaction response\n      setTxStatus('pending')\n      try {\n        //listens to response to transaction sent\n        //  note method will timeout in two minutes\n        //    for lower level implementations checkout out Pact.fetch.poll() in pact-lang-api\n        let retries = 8;\n        let res = {};\n        while (retries > 0) {\n          //sleep the polling\n          await new Promise(r => setTimeout(r, 15000));\n          res = await Pact.fetch.poll(txReqKeys, daoAPI.meta.host);\n          try {\n            if (res[signed.hash].result.status) {\n              retries = -1;\n            } else {\n              retries = retries - 1;\n            }\n          } catch(e) {\n              retries = retries - 1;\n          }\n        };\n        //keep transaction response in local state\n        setTxRes(res)\n        if (res[signed.hash].result.status === \"success\"){\n          console.log(\"tx status set to success\");\n          //set state for transaction success\n          setTxStatus('success');\n          refresh();\n        } else if (retries === 0) {\n          console.log(\"tx status set to timeout\");\n          setTxStatus('timeout');\n          refresh();\n        } else {\n          console.log(\"tx status set to failure\");\n          //set state for transaction failure\n          setTxStatus('failure');\n        }\n      } catch(e) {\n        // TODO: use break in the while loop to capture if timeout occured\n        console.log(\"tx api failure\",e);\n        setTxRes(e);\n        setTxStatus('failure');\n      }\n    } catch(e) {\n      console.log(\"tx status set to validation error\",e);\n      //set state for transaction construction error\n      setTxStatus('validation-error');\n    }\n};\n\nexport const VoteToFreeze = (props) => {\n  const {\n    refresh,\n    ambassadors,\n  } = props;\n  const [amb, setAmb] = useState( \"\" );\n  const {txStatus, setTxStatus,\n         tx, setTx,\n         txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Ambassador',\n      className:classes.formControl,\n      onChange:setAmb,\n      options:ambassadors.map((g)=>g['k']),\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendAmbassadorCmd(setTx,setTxStatus,setTxRes,refresh\n          ,amb\n          ,`(${daoAPI.contractAddress}.vote-to-freeze \"${amb}\")`\n        );\n      } catch (e) {\n        console.log(\"vote to freeze Submit Error\",typeof e, e, amb);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const Freeze = (props) => {\n  const {\n    refresh,\n    ambassadors,\n  } = props;\n  const [amb, setAmb] = useState( \"\" );\n  const {txStatus, setTxStatus,\n         tx, setTx,\n         txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Ambassador',\n      className:classes.formControl,\n      onChange:setAmb,\n      options:ambassadors.map((g)=>g['k']),\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendAmbassadorCmd(setTx,setTxStatus,setTxRes,refresh\n          ,amb\n          ,`(${daoAPI.contractAddress}.freeze \"${amb}\")`\n        );\n      } catch (e) {\n        console.log(\"freeze Submit Error\",typeof e, e, amb);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const RotateAmbassador = (props) => {\n  const {\n    refresh,\n    ambassadors,\n  } = props;\n  const [acct, setAcct] = useState( \"\" );\n  const [ks, setKs] = useState( \"\" );\n  const {txStatus, setTxStatus,\n         tx, setTx,\n         txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      // console.log(grd,newAmb);\n      try {\n        sendAmbassadorCmd(setTx,setTxStatus,setTxRes,refresh\n        ,acct\n        ,`(${daoAPI.contractAddress}.rotate-ambassador \"${acct}\" (read-keyset 'ks))`\n        ,{ks: JSON.parse(ks)})\n      } catch (e) {\n        console.log(\"rotate-ambassador Submit Error\",typeof e, e, acct,ks);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n    };\n\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Ambassador',\n      className:classes.formControl,\n      onChange:setAcct,\n      options:ambassadors.map((g)=>g['k']),\n    },{\n      type:'textFieldMulti',\n      label:'Guardian Account Guard',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:ks,\n      onChange:setKs,\n    }\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n","//basic React api imports\nimport React from \"react\";\nimport { daoAPI, keyFormatter } from \"./kadena-config.js\";\nimport { PactSingleJsonAsTable } from \"./util.js\";\n\nexport const InitConfig = () => {\n  return (\n    <PactSingleJsonAsTable\n      json={daoAPI}\n      keyFormatter={keyFormatter}\n      />\n  )\n};\n","//basic React api imports\nimport React from \"react\";\n//config file for blockchain calls\nimport Pact from \"pact-lang-api\";\nimport { daoAPI } from \"./kadena-config.js\";\nimport { PactSingleJsonAsTable, dashStyleNames2Text } from \"./util.js\";\n\nexport const getContractState = async (cmd) => {\n  //calling get-all() function from smart contract\n    const res = await Pact.fetch.local(\n      {\n        pactCode: `(${daoAPI.contractAddress}.${cmd})`,\n        //pact-lang-api function to construct transaction meta data\n        meta: Pact.lang.mkMeta(\n          daoAPI.meta.sender,\n          daoAPI.meta.chainId,\n          daoAPI.meta.gasPrice,\n          daoAPI.meta.gasLimit,\n          daoAPI.meta.creationTime(),\n          daoAPI.meta.ttl\n        ),\n      },\n      daoAPI.meta.host\n    );\n    const all = res.result.data;\n    //sorts memories by least recent\n    console.log(\"local query data\",all);\n    return(all);\n};\n\nexport const RenderInitState = (props) => {\n  return (\n   <PactSingleJsonAsTable\n    json={props.initState}\n    header={[\"\",\"Status\"]}\n    keyFormatter={dashStyleNames2Text}\n    />\n  )\n};\n","//basic React api imports\nimport React from \"react\";\n\nimport Pact from \"pact-lang-api\";\nimport { forumAPI, keyFormatter } from \"../kadena-config.js\";\nimport { PactSingleJsonAsTable, dashStyleNames2Text } from \"../util.js\";\n\nexport const getForumContractState = async (cmd) => {\n  //calling get-all() function from smart contract\n    const res = await Pact.fetch.local(\n      {\n        pactCode: `(${forumAPI.contractAddress}.${cmd})`,\n        //pact-lang-api function to construct transaction meta data\n        meta: Pact.lang.mkMeta(\n          forumAPI.meta.sender,\n          forumAPI.meta.chainId,\n          forumAPI.meta.gasPrice,\n          forumAPI.meta.gasLimit,\n          forumAPI.meta.creationTime(),\n          forumAPI.meta.ttl\n        ),\n      },\n      forumAPI.meta.host\n    );\n    const all = res.result.data;\n    //sorts memories by least recent\n    console.log(`local query data: (${forumAPI.contractAddress}.${cmd})`, all);\n    return(all);\n};\n\nexport const RenderForumState = (props) => {\n  return (\n   <PactSingleJsonAsTable\n    json={props.forumState}\n    header={[\"\",\"Status\"]}\n    keyFormatter={dashStyleNames2Text}\n    />\n  )\n};\nexport const ForumConfig = () => {\n  return (\n    <PactSingleJsonAsTable\n      json={forumAPI}\n      keyFormatter={keyFormatter}\n      />\n  )\n};\n","//basic React api imports\nimport React, { useState } from \"react\";\n//Material Stuff\nimport {\n  makeStyles,\n} from '@material-ui/styles';\n//pact-lang-api for blockchain calls\nimport Pact from \"pact-lang-api\";\n//config file for blockchain calls\nimport { forumAPI } from \"../kadena-config.js\";\nimport {\n  PactJsonListAsTable,\n  MakeForm,\n } from \"../util.js\";\nimport { ScrollableTabs } from \"../ScrollableTabs.js\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    margin: \"5px auto\",\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: \"10px auto\",\n  },\n}));\n\n\nconst sendMjolnirCmd = async (\n  setTx,\n  setTxStatus,\n  setTxRes,\n  refresh,\n  cmd, envData={}, caps=[]\n) => {\n    try {\n      //creates transaction to send to wallet\n      const toSign = {\n          pactCode: cmd,\n          caps: (Array.isArray(caps) && caps.length\n            ? caps :\n            Pact.lang.mkCap(\"Mjonlir Cap\"\n                           , \"Authenticates that you're Mjonir\"\n                           , `${forumAPI.contractAddress}.MJOLNIR`)),\n          gasLimit: forumAPI.meta.gasLimit,\n          chainId: forumAPI.meta.chainId,\n          ttl: forumAPI.meta.ttl,\n          envData: envData\n      }\n      console.log(\"toSign\", toSign)\n      //sends transaction to wallet to sign and awaits signed transaction\n      const signed = await Pact.wallet.sign(toSign)\n      console.log(\"signed\", signed)\n      if ( typeof signed === 'object' && 'hash' in signed ) {\n        setTx(signed);\n      } else {\n        throw new Error(\"Signing API Failed\");\n      }\n\n      //sends signed transaction to blockchain\n      const txReqKeys = await Pact.wallet.sendSigned(signed, forumAPI.meta.host)\n      console.log(\"txReqKeys\", txReqKeys)\n      //set html to wait for transaction response\n      //set state to wait for transaction response\n      setTxStatus('pending')\n      try {\n        //listens to response to transaction sent\n        //  note method will timeout in two minutes\n        //    for lower level implementations checkout out Pact.fetch.poll() in pact-lang-api\n        let retries = 8;\n        let res = {};\n        while (retries > 0) {\n          //sleep the polling\n          await new Promise(r => setTimeout(r, 15000));\n          res = await Pact.fetch.poll(txReqKeys, forumAPI.meta.host);\n          try {\n            if (res[signed.hash].result.status) {\n              retries = -1;\n            } else {\n              retries = retries - 1;\n            }\n          } catch(e) {\n              retries = retries - 1;\n          }\n        };\n        //keep transaction response in local state\n        setTxRes(res)\n        if (res[signed.hash].result.status === \"success\"){\n          console.log(\"tx status set to success\");\n          //set state for transaction success\n          setTxStatus('success');\n          refresh();\n        } else if (retries === 0) {\n          console.log(\"tx status set to timeout\");\n          setTxStatus('timeout');\n          refresh();\n        } else {\n          console.log(\"tx status set to failure\");\n          //set state for transaction failure\n          setTxStatus('failure');\n        }\n      } catch(e) {\n        // TODO: use break in the while loop to capture if timeout occured\n        console.log(\"tx api failure\",e);\n        setTxRes(e);\n        setTxStatus('failure');\n      }\n    } catch(e) {\n      console.log(\"tx status set to validation error\",e);\n      //set state for transaction construction error\n      setTxStatus('validation-error');\n    }\n};\n\nconst RotateMjolnir = (props) => {\n  const {\n    refresh,\n  } = props;\n  const [newGrd, setNewGrd] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const inputFields = [\n    {\n      type:'textFieldMulti',\n      label:'New Mjolnir Guard',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:newGrd,\n      onChange:setNewGrd,\n    }\n  ];\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      console.log(forumAPI);\n      try {\n        sendMjolnirCmd(setTx,setTxStatus,setTxRes,refresh\n          ,`(${forumAPI.contractAddress}.rotate-mjolnir (read-keyset 'ks))`\n          ,{ks: JSON.parse(newGrd)}\n        );\n      } catch (e) {\n        console.log(\"Mjonir Registration Submit Error\",typeof e, e, newGrd);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n  };\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  )\n};\n\nexport const DisableModerator = (props) => {\n  const {refresh, moderators} = props;\n  const [mod, setMod] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendMjolnirCmd(setTx,setTxStatus,setTxRes,refresh\n        ,`(${forumAPI.contractAddress}.disable-moderator \"${mod}\")`\n        )\n      } catch (e) {\n        console.log(\"disable-moderator Submit Error\",typeof e, e, mod,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n      };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Moderator',\n      className:classes.formControl,\n      onChange:setMod,\n      options:moderators.map((g)=>g['name']),\n    }\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nconst EnableModerator = (props) => {\n  const {refresh, moderators} = props;\n  const [mod, setMod] = useState( \"\" );\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendMjolnirCmd(setTx,setTxStatus,setTxRes,refresh\n        ,`(${forumAPI.contractAddress}.enable-moderator \"${mod}\")`\n        )\n      } catch (e) {\n        console.log(\"disable-moderator Submit Error\",typeof e, e, mod,);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n      };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select Moderator',\n      className:classes.formControl,\n      onChange:setMod,\n      options:moderators.map((g)=>g['name']),\n    }\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nconst MjolnirWriteMember = (props) => {\n  const {refresh, moderators, members} = props;\n  const [user, setUser] = useState( \"\" );\n  const [newKs, setNewKs] = useState({});\n  const [isMod,setIsMod] = useState(false);\n  const {txStatus, setTxStatus,\n    tx, setTx,\n    txRes, setTxRes} = props.pactTxStatus;\n  const classes = useStyles();\n\n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n      try {\n        sendMjolnirCmd(setTx,setTxStatus,setTxRes,refresh\n        ,`(${forumAPI.contractAddress}.mjolnir-write-member \"${user}\" (read-keyset 'ks) ${isMod})`\n        ,{ks: JSON.parse(newKs)})\n      } catch (e) {\n        console.log(\"mjolnir-write-member Submit Error\",typeof e, e, user, newKs, isMod);\n        setTxRes(e);\n        setTxStatus(\"validation-error\");\n      }\n      };\n  const inputFields = [\n    {\n      type:'select',\n      label:'Select User',\n      className:classes.formControl,\n      onChange:setUser,\n      options:{moderators: moderators.map((g)=>g['name']), members: members.map((m)=>m[\"name\"])},\n    },{\n      type:'textFieldMulti',\n      label:'New Guard',\n      className:classes.formControl,\n      placeholder:JSON.stringify({\"pred\":\"keys-all\",\"keys\":[\"8c59a322800b3650f9fc5b6742aa845bc1c35c2625dabfe5a9e9a4cada32c543\"]},undefined,2),\n      value:newKs,\n      onChange:setNewKs,\n    },{\n      type:'checkbox',\n      label:'Moderator',\n      className:classes.formControl,\n      value:isMod,\n      onChange:setIsMod,\n    }\n  ];\n\n  return (\n    <MakeForm\n      inputFields={inputFields}\n      onSubmit={handleSubmit}\n      tx={tx} txStatus={txStatus} txRes={txRes}\n      setTxStatus={setTxStatus}/>\n  );\n};\n\nexport const MjolnirActionForms = (props) => {\n  const {\n    members,\n    moderators,\n    tabIdx,\n    pactTxStatus,\n  } = props;\n  const {\n    getForumState,\n    getMembers,\n  } = props.refresh;\n\n  return (\n    <ScrollableTabs\n      tabIdx={tabIdx}\n      tabEntries={[\n          {\n            label:\"Rotate Mjolnir Guard\",\n            component:\n              <RotateMjolnir\n                pactTxStatus={pactTxStatus}\n                refresh={()=>getForumState()}/>\n          },{\n            label:\"Enable Moderator\",\n            component:\n              <EnableModerator\n                pactTxStatus={pactTxStatus}\n                moderators={moderators}\n                refresh={() => getMembers()}/>\n          },{\n            label:\"Disable Moderator\",\n            component:\n              <DisableModerator\n                pactTxStatus={pactTxStatus}\n                moderators={moderators}\n                refresh={() => getMembers()}/>\n          },{\n            label:\"Mjolnir Write Member\",\n            component:\n              <MjolnirWriteMember\n                pactTxStatus={pactTxStatus}\n                moderators={moderators}\n                members={members}\n                refresh={() => getMembers()}/>\n          }\n      ]}/>\n  );\n}","//basic React api imports\nimport React, { useState, useEffect } from \"react\";\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n } from '@material-ui/core/styles';\n//semantic ui for styling\nimport {\n  Button,\n  Container,\n  Card, CardHeader, CardContent,\n  CssBaseline, NoSsr\n} from '@material-ui/core';\nimport { NavDrawer } from \"./NavDrawer.js\";\nimport { ScrollableTabs } from \"./ScrollableTabs.js\";\nimport { BookTwoTone } from \"@material-ui/icons\";\nimport { PactTxStatus } from \"./PactTxStatus.js\";\n\n//config file for blockchain calls\nimport  {\n  RegisterGuardian,\n  RenderGuardians,\n  RegisterAmbassador,\n  DeactivateAmbassador,\n  ReactivateAmbassador,\n  RotateGuardian,\n  ProposeDaoUpgrade,\n  GuardianApproveHash,\n} from \"./Guardians.js\";\nimport {\n  RenderAmbassadors,\n  RotateAmbassador,\n  VoteToFreeze,\n  Freeze,\n} from \"./Ambassadors.js\";\nimport { InitConfig } from \"./InitConfig.js\"\nimport { RenderInitState, getContractState } from \"./InitState.js\";\n\nimport { ForumConfig, RenderForumState, getForumContractState } from \"./Forum/ForumConfig.js\";\nimport { MjolnirActionForms } from \"./Forum/Mjolnir.js\";\n\n\nconst App = () => {\n  const theme = React.useMemo(\n      () =>\n        createMuiTheme({\n          palette: {\n            primary: {\n              light: '#cb4584',\n              main: '#960057',\n              dark: '#cb4584',\n              contrastText: '#fff',\n            },\n            secondary: {\n              light: '#ffffff',\n              main: '#e3e8ed',\n              dark: '#b1b6bb',\n              contrastText: '#000',\n            },\n          },\n        }),\n      [],\n    );\n  \n  //Init Top Level States\n  const [initState, setInitState] = useState( {} );\n  const [guardians, setGuardians] = useState( [] );\n  const [ambassadors, setAmbassadors] = useState( [] );\n  const ambTabIdx = useState(0);\n  const grdTabIdx = useState(0);\n  \n  const getInitState = async () => {\n    const res = await getContractState(\"view-state\");\n    setInitState(res);\n  };\n\n  const getAmbassadors = async () => {\n    const res = await getContractState(\"view-ambassadors\");\n    setAmbassadors(res);\n  };\n\n  const getGuardians = async () => {\n    const res = await getContractState(\"view-guardians\");\n    setGuardians(res);\n  };\n\n  // Tx Status Top Level State\n  const [txStatus, setTxStatus] = useState(\"\");\n  const [tx, setTx] = useState( {} );\n  const [txRes, setTxRes] = useState( {} );\n  const pactTxStatus = {\n    tx:tx,setTx:setTx,\n    txStatus:txStatus,setTxStatus:setTxStatus,\n    txRes:txRes,setTxRes:setTxRes,\n  };\n\n  //Forum Top Level States\n  const [forumState, setForumState] = useState( {} );\n  const [members, setMembers] = useState([]);\n  const [moderators, setModerators] = useState([]);\n\n  //Forum UI States\n  const mjolnirTabIdx = useState(0);\n\n  const getForumState = async () => {\n    const res = await getForumContractState(\"view-forum-state\");\n    setForumState(res);\n  };\n\n  const getMembers = async () => {\n    const res = await getForumContractState(\"view-members\");\n    setMembers(res.filter(m=>m.moderator === false));\n    setModerators(res.filter(m=>m.moderator === true));\n  };\n\n  const refresh = {\n    getForumState: getForumState,\n    getMembers: getMembers,\n  }\n\n  useEffect(() => {\n    getGuardians();\n    getInitState();\n    getAmbassadors();\n    getForumState();\n    getMembers();\n    console.log('useEffect App.js Fired');\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <NoSsr>\n        <CssBaseline/>\n        <Router basename={process.env.PUBLIC_URL}>\n          <NavDrawer\n            entriesList={[\n                [{\n                  primary:\"dao.init\",\n                  subList:  \n                    [{\n                      primary:\"Config\",\n                      to:\"/daoConfig\"\n                    },{\n                      primary:\"Init State\",\n                      to:\"/initState\"\n                    },{\n                      primary:\"Ambassadors\",\n                      to:\"/ambassadors\"\n                    },{\n                      primary:\"Guardians\",\n                      to:\"/guardians\",\n                    }\n                  ]\n                },{\n                  primary:\"dao.forum\",\n                  subList:  \n                    [{\n                      primary:\"Config\",\n                      to:\"/forumConfig\"\n                    },{\n                      primary:\"Forum State\",\n                      to:\"/forumState\"\n                    },{\n                      primary:\"Mjolnir\",\n                      to:\"/mjolnir\"\n                    }\n                  ]\n                }]\n          ]}>\n          <Container>\n            <Switch>\n              <Route path=\"/initConfig\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Contract and UI Configuration\"/>\n                  <CardContent>\n                    <InitConfig/>\n                  </CardContent>\n                </Card>\n              }/>\n            <Route path=\"/initState\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Contract State\"/>\n                  <CardContent>\n                    <RenderInitState initState={initState}/>\n                  </CardContent>\n                </Card>\n              }/>\n            <Route path=\"/guardians\" component={ () =>\n              <Card>\n                <CardHeader title=\"Guardians\"/>\n                <CardContent>\n                  <RenderGuardians guardians={guardians}/>\n                  <ScrollableTabs\n                    tabIdx={grdTabIdx}\n                    tabEntries={[\n                        {\n                          label:\"Register Guardian\",\n                          component:\n                            <RegisterGuardian\n                              pactTxStatus={pactTxStatus}\n                              refresh={() => getGuardians()}/>\n                        },{\n                          label:\"Rotate Guardian\",\n                          component:\n                            <RotateGuardian\n                              guardians={guardians}\n                              ambassadors={ambassadors}\n                              pactTxStatus={pactTxStatus}\n                              refresh={() => getAmbassadors()}/>\n                        },{\n                          label:\"Propose DAO Upgrade\",\n                          component:\n                            <ProposeDaoUpgrade\n                              guardians={guardians}\n                              pactTxStatus={pactTxStatus}\n                              refresh={() => getAmbassadors()}/>\n                        },{\n                          label:\"Approve DAO Upgrade\",\n                          component:\n                            <GuardianApproveHash\n                              guardians={guardians}\n                              pactTxStatus={pactTxStatus}\n                              refresh={() => getAmbassadors()}/>\n                        }\n                    ]}/>\n                </CardContent>\n              </Card>\n              }/>\n            <Route path=\"/ambassadors\" component={ () =>\n              <Card>\n                <CardHeader title=\"Ambassadors\"/>\n                <CardContent>\n                  <RenderAmbassadors ambassadors={ambassadors}/>\n                  <ScrollableTabs\n                    tabIdx={ambTabIdx}\n                    tabEntries={[\n                      {\n                        label:\"Register Ambassador\",\n                        component:\n                          <RegisterAmbassador\n                            guardians={guardians}\n                            pactTxStatus={pactTxStatus}\n                            refresh={() => getAmbassadors()}/>\n                      },{\n                        label:\"Deactivate Ambassador\",\n                        component:\n                          <DeactivateAmbassador\n                            guardians={guardians}\n                            ambassadors={ambassadors}\n                            pactTxStatus={pactTxStatus}\n                            refresh={() => getAmbassadors()}/>\n                      },{\n                        label:\"Reactivate Ambassador\",\n                        component:\n                          <ReactivateAmbassador\n                            guardians={guardians}\n                            ambassadors={ambassadors}\n                            pactTxStatus={pactTxStatus}\n                            refresh={() => getAmbassadors()}/>\n                      },{\n                        label:\"Rotate Ambassador\",\n                        component:\n                          <RotateAmbassador\n                            ambassadors={ambassadors}\n                            pactTxStatus={pactTxStatus}\n                            refresh={() => getAmbassadors()}/>\n                      },{\n                        label:\"Vote to Freeze\",\n                        component:\n                          <VoteToFreeze\n                            ambassadors={ambassadors}\n                            pactTxStatus={pactTxStatus}\n                            refresh={() => getAmbassadors()}/>\n                      },{\n                        label:\"Freeze\",\n                        component:\n                          <Freeze\n                            ambassadors={ambassadors}\n                            pactTxStatus={pactTxStatus}\n                            refresh={() => getAmbassadors()}/>\n                      }\n                    ]}/>\n                </CardContent>\n              </Card>\n              }/>  \n              <Route path=\"/forumConfig\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Contract and UI Configuration\"/>\n                  <CardContent>\n                    <ForumConfig/>\n                  </CardContent>\n                </Card>\n              }/>\n              <Route path=\"/forumState\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Contract State\"/>\n                  <CardContent>\n                    <RenderForumState forumState={forumState}/>\n                  </CardContent>\n                </Card>\n              }/>\n              <Route path=\"/mjolnir\" component={ () =>\n                <Card>\n                  <CardHeader title=\"Mjolnir Powers\"/>\n                  <CardContent>\n                    <MjolnirActionForms \n                      members={members}\n                      moderators={moderators}\n                      tabIdx={mjolnirTabIdx}\n                      pactTxStatus={pactTxStatus}\n                      refresh={refresh}\n                    />\n                  </CardContent>\n                </Card>\n              }/>\n\n            <Route path=\"/\">\n              <Redirect to=\"/initConfig\" />\n            </Route>\n\n            </Switch>\n          </Container>\n          </NavDrawer>\n        </Router>\n      </NoSsr>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/*\n\nBLOCKCHAIN CONFIGURATION FILE\n\n  initalize all data for pact-lang-api kadena blockchain calls\n\n  modify this file to interact with different\n    chains, networks, contracts\n\n  documentation:\n    https://pact-language.readthedocs.io/en/stable/\n\n  pact tutorials:\n    https://pactlang.org/\n\n*/\n\n//chain that contract lives on\nconst chainId = \"0\";\n\n//id of network version\nconst networkId = \"testnet04\";\n\n//network node\nconst node = \"api.testnet.chainweb.com\";\n\n//unique contract name\nconst forumContractName = \"forum\";\nconst forumConstants = {}\n\n//unique contract name\nconst daoContractName = \"init\";\nconst daoConstants = {\n  \"DAO_ACCT_NAME\":\"dao.init\",\n  \"GUARDIAN_KDA_REQUIRED\": 500000};\n\n//unique gas station contract name\nconst gasStationName = \"memory-wall-gas-station\";\n\n//namespace that precedes contract name\nconst namespace = \"dao\";\n\n//api host to send requests\nconst host = `https://${node}/chainweb/0.0/${networkId}/chain/${chainId}/pact`;\n\n//creation time for request\nconst creationTime = () => Math.round(new Date().getTime() / 1000) - 15;\n\n//JSON with all necessary blockchain call data\nconst daoAPI = {\n  contractName: daoContractName,\n  gasStationName: gasStationName,\n  namespace: namespace,\n  contractAddress: `${namespace}.${daoContractName}`,\n  gasStationAddress: `${namespace}.${gasStationName}`,\n  explorerURL: `https://explorer.chainweb.com/${networkId.slice(0, -2)}`,\n  constants: daoConstants,\n  meta: {\n    networkId: networkId,\n    chainId: chainId,\n    host: host,\n    creationTime: creationTime,\n    //gas price at lowest possible denomination\n    gasPrice: 0.00000000001,\n    //high gas limit for tx\n    gasLimit: 10000,\n    //time a tx lives in mempool since creationTime\n    ttl: 28800,\n    //sender === gas payer of the transaction\n    //  set to our gas station account defined in memory-wall-gas-station.pact\n    sender: \"mw-free-gas\",\n    //nonce here doesnt matter since the tx will never have the same hash\n    nonce: \"some nonce that doesnt matter\",\n  },\n};\n\n//JSON with all necessary blockchain call data\nconst forumAPI = {\n  contractName: forumContractName,\n  gasStationName: gasStationName,\n  namespace: namespace,\n  contractAddress: `${namespace}.${forumContractName}`,\n  gasStationAddress: `${namespace}.${gasStationName}`,\n  explorerURL: `https://explorer.chainweb.com/${networkId.slice(0, -2)}`,\n  constants: forumConstants,\n  meta: {\n    networkId: networkId,\n    chainId: chainId,\n    host: host,\n    creationTime: creationTime,\n    //gas price at lowest possible denomination\n    gasPrice: 0.00000000001,\n    //high gas limit for tx\n    gasLimit: 10000,\n    //time a tx lives in mempool since creationTime\n    ttl: 28800,\n    //sender === gas payer of the transaction\n    //  set to our gas station account defined in memory-wall-gas-station.pact\n    sender: \"mw-free-gas\",\n    //nonce here doesnt matter since the tx will never have the same hash\n    nonce: \"some nonce that doesnt matter\",\n  },\n};\n\nconst keyFormatter = (str) =>\n  str.replace(new RegExp(\"[A-Z]+\",\"gm\"),\" $&\").replace(new RegExp(\"^[a-z]\",\"gm\"),k => k.toUpperCase());\n\nmodule.exports = { daoAPI: daoAPI, forumAPI: forumAPI, keyFormatter: keyFormatter }\n","module.exports = __webpack_public_path__ + \"static/media/kadena_r_rev_3_whi_lor.184cc2aa.png\";"],"sourceRoot":""}